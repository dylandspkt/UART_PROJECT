Version 4.0 HI-TECH Software Intermediate Code
"2562 C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 2562:     struct {
[s S99 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S99 . TX9D TRMT BRGH SENDB SYNC TXEN TX9 CSRC ]
"2572
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 2572:     struct {
[s S100 :1 `uc 1 :5 `uc 1 :1 `uc 1 ]
[n S100 . TXD8 . nTX8 ]
"2577
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 2577:     struct {
[s S101 :6 `uc 1 :1 `uc 1 ]
[n S101 . . TX8_9 ]
"2561
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 2561: typedef union {
[u S98 `S99 1 `S100 1 `S101 1 ]
[n S98 . . . . ]
"2582
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 2582: extern volatile TXSTAbits_t TXSTAbits __attribute__((address(0x098)));
[v _TXSTAbits `VS98 ~T0 @X0 0 e@152 ]
"2642
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 2642: extern volatile unsigned char SPBRG __attribute__((address(0x099)));
[v _SPBRG `Vuc ~T0 @X0 0 e@153 ]
"1044
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 1044:     struct {
[s S37 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S37 . RX9D OERR FERR ADDEN CREN SREN RX9 SPEN ]
"1054
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 1054:     struct {
[s S38 :1 `uc 1 :5 `uc 1 :1 `uc 1 ]
[n S38 . RCD8 . RC9 ]
"1059
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 1059:     struct {
[s S39 :6 `uc 1 :1 `uc 1 ]
[n S39 . . nRC8 ]
"1063
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 1063:     struct {
[s S40 :6 `uc 1 :1 `uc 1 ]
[n S40 . . RC8_9 ]
"1043
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 1043: typedef union {
[u S36 `S37 1 `S38 1 `S39 1 `S40 1 ]
[n S36 . . . . . ]
"1068
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 1068: extern volatile RCSTAbits_t RCSTAbits __attribute__((address(0x018)));
[v _RCSTAbits `VS36 ~T0 @X0 0 e@24 ]
"4469
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 4469: extern volatile __bit TRISC7 __attribute__((address(0x43F)));
[v _TRISC7 `Vb ~T0 @X0 0 e@1087 ]
"4466
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 4466: extern volatile __bit TRISC6 __attribute__((address(0x43E)));
[v _TRISC6 `Vb ~T0 @X0 0 e@1086 ]
"543
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 543:     struct {
[s S19 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S19 . TMR1IF TMR2IF CCP1IF SSPIF TXIF RCIF ADIF ]
"542
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 542: typedef union {
[u S18 `S19 1 ]
[n S18 . . ]
"553
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 553: extern volatile PIR1bits_t PIR1bits __attribute__((address(0x00C)));
[v _PIR1bits `VS18 ~T0 @X0 0 e@12 ]
"1140
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 1140: extern volatile unsigned char RCREG __attribute__((address(0x01A)));
[v _RCREG `Vuc ~T0 @X0 0 e@26 ]
"1133
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 1133: extern volatile unsigned char TXREG __attribute__((address(0x019)));
[v _TXREG `Vuc ~T0 @X0 0 e@25 ]
"3257
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 3257: extern volatile unsigned char EEADR __attribute__((address(0x10D)));
[v _EEADR `Vuc ~T0 @X0 0 e@269 ]
"3245
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 3245: extern volatile unsigned char EEDATA __attribute__((address(0x10C)));
[v _EEDATA `Vuc ~T0 @X0 0 e@268 ]
"3505
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 3505:     struct {
[s S137 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :3 `uc 1 :1 `uc 1 ]
[n S137 . RD WR WREN WRERR . EEPGD ]
"3504
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 3504: typedef union {
[u S136 `S137 1 ]
[n S136 . . ]
"3514
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 3514: extern volatile EECON1bits_t EECON1bits __attribute__((address(0x18C)));
[v _EECON1bits `VS136 ~T0 @X0 0 e@396 ]
"465
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 465:     struct {
[s S16 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S16 . RBIF INTF T0IF RBIE INTE T0IE PEIE GIE ]
"475
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 475:     struct {
[s S17 :2 `uc 1 :1 `uc 1 :2 `uc 1 :1 `uc 1 ]
[n S17 . . TMR0IF . TMR0IE ]
"464
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 464: typedef union {
[u S15 `S16 1 `S17 1 ]
[n S15 . . . ]
"482
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 482: extern volatile INTCONbits_t INTCONbits __attribute__((address(0x00B)));
[v _INTCONbits `VS15 ~T0 @X0 0 e@11 ]
"3544
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 3544: extern volatile unsigned char EECON2 __attribute__((address(0x18D)));
[v _EECON2 `Vuc ~T0 @X0 0 e@397 ]
"599
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 599:     struct {
[s S21 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S21 . CCP2IF . ULPWUIF BCLIF EEIF C1IF C2IF OSFIF ]
"598
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 598: typedef union {
[u S20 `S21 1 ]
[n S20 . . ]
"610
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 610: extern volatile PIR2bits_t PIR2bits __attribute__((address(0x00D)));
[v _PIR2bits `VS20 ~T0 @X0 0 e@13 ]
[t ~ __interrupt . k ]
[t T1 __interrupt ]
[v F1531 `(uc ~T0 @X0 0 t? ]
"459
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 459: extern volatile unsigned char INTCON __attribute__((address(0x00B)));
[v _INTCON `Vuc ~T0 @X0 0 e@11 ]
"1708
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 1708:     struct {
[s S63 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S63 . TMR1IE TMR2IE CCP1IE SSPIE TXIE RCIE ADIE ]
"1707
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 1707: typedef union {
[u S62 `S63 1 ]
[n S62 . . ]
"1718
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 1718: extern volatile PIE1bits_t PIE1bits __attribute__((address(0x08C)));
[v _PIE1bits `VS62 ~T0 @X0 0 e@140 ]
[p mainexit ]
"7 main.c
[p x FOSC = INTRC_CLKOUT ]
"8
[p x WDTE = OFF ]
"9
[p x PWRTE = OFF ]
"10
[p x MCLRE = ON ]
"11
[p x CP = OFF ]
"12
[p x CPD = OFF ]
"13
[p x BOREN = ON ]
"14
[p x IESO = ON ]
"15
[p x FCMEN = ON ]
"16
[p x LVP = ON ]
"19
[p x BOR4V = BOR40V ]
"20
[p x WRT = OFF ]
"54 C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 54: __asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
"61
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 61: __asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
"68
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 68: __asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
"75
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 75: __asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
"161
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 161: __asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
"168
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 168: __asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
"230
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 230: __asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
"292
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 292: __asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
"354
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 354: __asm("PORTD equ 08h");
[; <" PORTD equ 08h ;# ">
"416
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 416: __asm("PORTE equ 09h");
[; <" PORTE equ 09h ;# ">
"454
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 454: __asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
"461
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 461: __asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
"539
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 539: __asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
"595
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 595: __asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
"652
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 652: __asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
"659
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 659: __asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
"666
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 666: __asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
"673
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 673: __asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
"767
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 767: __asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
"774
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 774: __asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
"845
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 845: __asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
"852
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 852: __asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
"922
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 922: __asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
"929
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 929: __asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
"936
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 936: __asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
"943
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 943: __asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
"1040
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 1040: __asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
"1135
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 1135: __asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
"1142
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 1142: __asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
"1149
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 1149: __asm("CCPR2 equ 01Bh");
[; <" CCPR2 equ 01Bh ;# ">
"1156
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 1156: __asm("CCPR2L equ 01Bh");
[; <" CCPR2L equ 01Bh ;# ">
"1163
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 1163: __asm("CCPR2H equ 01Ch");
[; <" CCPR2H equ 01Ch ;# ">
"1170
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 1170: __asm("CCP2CON equ 01Dh");
[; <" CCP2CON equ 01Dh ;# ">
"1240
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 1240: __asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
"1247
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 1247: __asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
"1348
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 1348: __asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
"1418
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 1418: __asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
"1480
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 1480: __asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
"1542
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 1542: __asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
"1604
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 1604: __asm("TRISD equ 088h");
[; <" TRISD equ 088h ;# ">
"1666
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 1666: __asm("TRISE equ 089h");
[; <" TRISE equ 089h ;# ">
"1704
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 1704: __asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
"1760
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 1760: __asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
"1817
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 1817: __asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
"1864
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 1864: __asm("OSCCON equ 08Fh");
[; <" OSCCON equ 08Fh ;# ">
"1929
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 1929: __asm("OSCTUNE equ 090h");
[; <" OSCTUNE equ 090h ;# ">
"1981
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 1981: __asm("SSPCON2 equ 091h");
[; <" SSPCON2 equ 091h ;# ">
"2043
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 2043: __asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
"2050
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 2050: __asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
"2057
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 2057: __asm("SSPMSK equ 093h");
[; <" SSPMSK equ 093h ;# ">
"2062
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 2062: __asm("MSK equ 093h");
[; <" MSK equ 093h ;# ">
"2179
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 2179: __asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
"2348
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 2348: __asm("WPUB equ 095h");
[; <" WPUB equ 095h ;# ">
"2418
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 2418: __asm("IOCB equ 096h");
[; <" IOCB equ 096h ;# ">
"2488
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 2488: __asm("VRCON equ 097h");
[; <" VRCON equ 097h ;# ">
"2558
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 2558: __asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
"2644
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 2644: __asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
"2706
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 2706: __asm("SPBRGH equ 09Ah");
[; <" SPBRGH equ 09Ah ;# ">
"2776
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 2776: __asm("PWM1CON equ 09Bh");
[; <" PWM1CON equ 09Bh ;# ">
"2846
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 2846: __asm("ECCPAS equ 09Ch");
[; <" ECCPAS equ 09Ch ;# ">
"2928
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 2928: __asm("PSTRCON equ 09Dh");
[; <" PSTRCON equ 09Dh ;# ">
"2972
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 2972: __asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
"2979
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 2979: __asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
"3013
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 3013: __asm("WDTCON equ 0105h");
[; <" WDTCON equ 0105h ;# ">
"3066
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 3066: __asm("CM1CON0 equ 0107h");
[; <" CM1CON0 equ 0107h ;# ">
"3131
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 3131: __asm("CM2CON0 equ 0108h");
[; <" CM2CON0 equ 0108h ;# ">
"3196
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 3196: __asm("CM2CON1 equ 0109h");
[; <" CM2CON1 equ 0109h ;# ">
"3247
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 3247: __asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
"3252
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 3252: __asm("EEDAT equ 010Ch");
[; <" EEDAT equ 010Ch ;# ">
"3259
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 3259: __asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
"3266
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 3266: __asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
"3273
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 3273: __asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
"3280
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 3280: __asm("SRCON equ 0185h");
[; <" SRCON equ 0185h ;# ">
"3337
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 3337: __asm("BAUDCTL equ 0187h");
[; <" BAUDCTL equ 0187h ;# ">
"3389
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 3389: __asm("ANSEL equ 0188h");
[; <" ANSEL equ 0188h ;# ">
"3451
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 3451: __asm("ANSELH equ 0189h");
[; <" ANSELH equ 0189h ;# ">
"3501
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 3501: __asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
"3546
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 3546: __asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
"6 ./uarthex.h
[; ;./uarthex.h: 6: char UART_Init(const long int baudrate) {
[v _UART_Init `(uc ~T0 @X0 1 ef1`Cl ]
{
[e :U _UART_Init ]
[v _baudrate `Cl ~T0 @X0 1 r1 ]
[f ]
"7
[; ;./uarthex.h: 7:     unsigned int x;
[v _x `ui ~T0 @X0 1 a ]
"8
[; ;./uarthex.h: 8:     x = (4000000 - baudrate * 64) / (baudrate * 64);
[e = _x -> / - -> 4000000 `l * _baudrate -> -> 64 `i `l * _baudrate -> -> 64 `i `l `ui ]
"9
[; ;./uarthex.h: 9:     if (x > 255) {
[e $ ! > _x -> -> 255 `i `ui 140  ]
{
"10
[; ;./uarthex.h: 10:         x = (4000000 - baudrate * 16) / (baudrate * 16);
[e = _x -> / - -> 4000000 `l * _baudrate -> -> 16 `i `l * _baudrate -> -> 16 `i `l `ui ]
"11
[; ;./uarthex.h: 11:         TXSTAbits.BRGH = 1;
[e = . . _TXSTAbits 0 2 -> -> 1 `i `uc ]
"12
[; ;./uarthex.h: 12:     }
}
[e :U 140 ]
"13
[; ;./uarthex.h: 13:     if (x < 256) {
[e $ ! < _x -> -> 256 `i `ui 141  ]
{
"14
[; ;./uarthex.h: 14:         SPBRG = x;
[e = _SPBRG -> _x `uc ]
"15
[; ;./uarthex.h: 15:         TXSTAbits.SYNC = 0;
[e = . . _TXSTAbits 0 4 -> -> 0 `i `uc ]
"16
[; ;./uarthex.h: 16:         RCSTAbits.SPEN = 1;
[e = . . _RCSTAbits 0 7 -> -> 1 `i `uc ]
"17
[; ;./uarthex.h: 17:         TRISC7 = 1;
[e = _TRISC7 -> -> 1 `i `b ]
"18
[; ;./uarthex.h: 18:         TRISC6 = 0;
[e = _TRISC6 -> -> 0 `i `b ]
"19
[; ;./uarthex.h: 19:         RCSTAbits.CREN = 1;
[e = . . _RCSTAbits 0 4 -> -> 1 `i `uc ]
"20
[; ;./uarthex.h: 20:         TXSTAbits.TXEN = 1;
[e = . . _TXSTAbits 0 5 -> -> 1 `i `uc ]
"21
[; ;./uarthex.h: 21:         return 1;
[e ) -> -> 1 `i `uc ]
[e $UE 139  ]
"22
[; ;./uarthex.h: 22:     }
}
[e :U 141 ]
"23
[; ;./uarthex.h: 23:     return 0;
[e ) -> -> 0 `i `uc ]
[e $UE 139  ]
"24
[; ;./uarthex.h: 24: }
[e :UE 139 ]
}
"26
[; ;./uarthex.h: 26: char UART_TX_Empty() {
[v _UART_TX_Empty `(uc ~T0 @X0 1 ef ]
{
[e :U _UART_TX_Empty ]
[f ]
"27
[; ;./uarthex.h: 27:     return TXSTAbits.TRMT;
[e ) -> . . _TXSTAbits 0 1 `uc ]
[e $UE 142  ]
"28
[; ;./uarthex.h: 28: }
[e :UE 142 ]
}
"30
[; ;./uarthex.h: 30: char UART_Data_Ready() {
[v _UART_Data_Ready `(uc ~T0 @X0 1 ef ]
{
[e :U _UART_Data_Ready ]
[f ]
"31
[; ;./uarthex.h: 31:     return PIR1bits.RCIF;
[e ) -> . . _PIR1bits 0 5 `uc ]
[e $UE 143  ]
"32
[; ;./uarthex.h: 32: }
[e :UE 143 ]
}
"34
[; ;./uarthex.h: 34: char UART_Read() {
[v _UART_Read `(uc ~T0 @X0 1 ef ]
{
[e :U _UART_Read ]
[f ]
"35
[; ;./uarthex.h: 35:     if (RCSTAbits.OERR) {
[e $ ! != -> . . _RCSTAbits 0 1 `i -> 0 `i 145  ]
{
"36
[; ;./uarthex.h: 36:         RCSTAbits.CREN = 0;
[e = . . _RCSTAbits 0 4 -> -> 0 `i `uc ]
"37
[; ;./uarthex.h: 37:         RCSTAbits.CREN = 1;
[e = . . _RCSTAbits 0 4 -> -> 1 `i `uc ]
"38
[; ;./uarthex.h: 38:     }
}
[e :U 145 ]
"39
[; ;./uarthex.h: 39:     while (!PIR1bits.RCIF);
[e $U 146  ]
[e :U 147 ]
[e :U 146 ]
[e $ ! != -> . . _PIR1bits 0 5 `i -> 0 `i 147  ]
[e :U 148 ]
"40
[; ;./uarthex.h: 40:     return RCREG;
[e ) -> _RCREG `uc ]
[e $UE 144  ]
"41
[; ;./uarthex.h: 41: }
[e :UE 144 ]
}
"43
[; ;./uarthex.h: 43: void UART_Write(char datau) {
[v _UART_Write `(v ~T0 @X0 1 ef1`uc ]
{
[e :U _UART_Write ]
[v _datau `uc ~T0 @X0 1 r1 ]
[f ]
"44
[; ;./uarthex.h: 44:     while (!TXSTAbits.TRMT);
[e $U 150  ]
[e :U 151 ]
[e :U 150 ]
[e $ ! != -> . . _TXSTAbits 0 1 `i -> 0 `i 151  ]
[e :U 152 ]
"45
[; ;./uarthex.h: 45:     TXREG = datau;
[e = _TXREG -> _datau `uc ]
"46
[; ;./uarthex.h: 46: }
[e :UE 149 ]
}
"49
[; ;./uarthex.h: 49: void UART_Read_Text(char *Output, unsigned int length) {
[v _UART_Read_Text `(v ~T0 @X0 1 ef2`*uc`ui ]
{
[e :U _UART_Read_Text ]
[v _Output `*uc ~T0 @X0 1 r1 ]
[v _length `ui ~T0 @X0 1 r2 ]
[f ]
"50
[; ;./uarthex.h: 50:     unsigned int i;
[v _i `ui ~T0 @X0 1 a ]
"51
[; ;./uarthex.h: 51:     for (i = 0; i < length; i++)
{
[e = _i -> -> 0 `i `ui ]
[e $U 157  ]
[e :U 154 ]
"52
[; ;./uarthex.h: 52:         Output[i] = UART_Read();
[e = *U + _Output * -> _i `ux -> -> # *U _Output `ui `ux ( _UART_Read ..  ]
[e ++ _i -> -> 1 `i `ui ]
[e :U 157 ]
[e $ < _i _length 154  ]
[e :U 155 ]
}
"54
[; ;./uarthex.h: 54: }
[e :UE 153 ]
}
"58
[; ;./uarthex.h: 58: void UART_Write_Text(char *text) {
[v _UART_Write_Text `(v ~T0 @X0 1 ef1`*uc ]
{
[e :U _UART_Write_Text ]
[v _text `*uc ~T0 @X0 1 r1 ]
[f ]
"59
[; ;./uarthex.h: 59:     int i;
[v _i `i ~T0 @X0 1 a ]
"60
[; ;./uarthex.h: 60:     for (i = 0; *(text+i) != '\0'; i++)
{
[e = _i -> 0 `i ]
[e $U 162  ]
[e :U 159 ]
"61
[; ;./uarthex.h: 61:         UART_Write(*(text+i));
[e ( _UART_Write (1 *U + _text * -> _i `x -> -> # *U _text `i `x ]
[e ++ _i -> 1 `i ]
[e :U 162 ]
[e $ != -> *U + _text * -> _i `x -> -> # *U _text `i `x `ui -> 0 `ui 159  ]
[e :U 160 ]
}
"62
[; ;./uarthex.h: 62: }
[e :UE 158 ]
}
"64
[; ;./uarthex.h: 64: void UART_Write_Text_2(char* str) {
[v _UART_Write_Text_2 `(v ~T0 @X0 1 ef1`*uc ]
{
[e :U _UART_Write_Text_2 ]
[v _str `*uc ~T0 @X0 1 r1 ]
[f ]
"65
[; ;./uarthex.h: 65:     while (*str) {
[e $U 164  ]
[e :U 165 ]
{
"67
[; ;./uarthex.h: 67:         UART_Write(*str++);
[e ( _UART_Write (1 *U ++ _str * -> -> 1 `i `x -> -> # *U _str `i `x ]
"68
[; ;./uarthex.h: 68:     }
}
[e :U 164 ]
"65
[; ;./uarthex.h: 65:     while (*str) {
[e $ != -> *U _str `i -> 0 `i 165  ]
[e :U 166 ]
"69
[; ;./uarthex.h: 69: }
[e :UE 163 ]
}
"71
[; ;./uarthex.h: 71: void UART_Write_Text_Length (char* str, int length )
[v _UART_Write_Text_Length `(v ~T0 @X0 1 ef2`*uc`i ]
"72
[; ;./uarthex.h: 72: {
{
[e :U _UART_Write_Text_Length ]
"71
[; ;./uarthex.h: 71: void UART_Write_Text_Length (char* str, int length )
[v _str `*uc ~T0 @X0 1 r1 ]
[v _length `i ~T0 @X0 1 r2 ]
"72
[; ;./uarthex.h: 72: {
[f ]
"73
[; ;./uarthex.h: 73:     int count=0;
[v _count `i ~T0 @X0 1 a ]
[e = _count -> 0 `i ]
"74
[; ;./uarthex.h: 74:     do {
[e :U 170 ]
{
"75
[; ;./uarthex.h: 75:         UART_Write(*str++);
[e ( _UART_Write (1 *U ++ _str * -> -> 1 `i `x -> -> # *U _str `i `x ]
"76
[; ;./uarthex.h: 76:         count++;
[e ++ _count -> 1 `i ]
"77
[; ;./uarthex.h: 77:         if((*str=='\0')&&(count == length ))
[e $ ! && == -> *U _str `ui -> 0 `ui == _count _length 171  ]
"78
[; ;./uarthex.h: 78:         {
{
"79
[; ;./uarthex.h: 79:             count=0;
[e = _count -> 0 `i ]
"80
[; ;./uarthex.h: 80:             break;
[e $U 169  ]
"81
[; ;./uarthex.h: 81:         }
}
[e :U 171 ]
"82
[; ;./uarthex.h: 82:     }
}
[e $ != -> 1 `i -> 0 `i 170  ]
[e :U 169 ]
"85
[; ;./uarthex.h: 85: }
[e :UE 167 ]
}
"57 ./crcLIBhex.h
[; ;./crcLIBhex.h: 57: const unsigned short CRC8_POLYNOMIAL = 0x18;
[v _CRC8_POLYNOMIAL `Cus ~T0 @X0 1 e ]
[i _CRC8_POLYNOMIAL
-> -> 24 `i `us
]
"58
[; ;./crcLIBhex.h: 58: const unsigned short CRC8_INIT = 0x00;
[v _CRC8_INIT `Cus ~T0 @X0 1 e ]
[i _CRC8_INIT
-> -> 0 `i `us
]
"59
[; ;./crcLIBhex.h: 59: const unsigned int CRC16_POLYNOMIAL = 0x8005;
[v _CRC16_POLYNOMIAL `Cui ~T0 @X0 1 e ]
[i _CRC16_POLYNOMIAL
-> 32773 `ui
]
"60
[; ;./crcLIBhex.h: 60: const unsigned int CRC16_INIT = 0xFFFF;
[v _CRC16_INIT `Cui ~T0 @X0 1 e ]
[i _CRC16_INIT
-> 65535 `ui
]
"61
[; ;./crcLIBhex.h: 61: const unsigned long CRC32_POLYNOMIAL = 0x04C11DB7;
[v _CRC32_POLYNOMIAL `Cul ~T0 @X0 1 e ]
[i _CRC32_POLYNOMIAL
-> -> 79764919 `l `ul
]
"62
[; ;./crcLIBhex.h: 62: const unsigned long crc32_lookup_table[] =
[v _crc32_lookup_table `Cul ~T0 @X0 -> 256 `i e ]
[i _crc32_lookup_table
:U ..
-> -> -> 0 `i `l `ul
-> -> 1996959894 `l `ul
-> 3993919788 `ul
-> 2567524794 `ul
-> -> 124634137 `l `ul
-> -> 1886057615 `l `ul
-> 3915621685 `ul
-> 2657392035 `ul
-> -> 249268274 `l `ul
-> -> 2044508324 `l `ul
-> 3772115230 `ul
-> 2547177864 `ul
-> -> 162941995 `l `ul
-> -> 2125561021 `l `ul
-> 3887607047 `ul
-> 2428444049 `ul
-> -> 498536548 `l `ul
-> -> 1789927666 `l `ul
-> 4089016648 `ul
-> 2227061214 `ul
-> -> 450548861 `l `ul
-> -> 1843258603 `l `ul
-> 4107580753 `ul
-> 2211677639 `ul
-> -> 325883990 `l `ul
-> -> 1684777152 `l `ul
-> 4251122042 `ul
-> 2321926636 `ul
-> -> 335633487 `l `ul
-> -> 1661365465 `l `ul
-> 4195302755 `ul
-> 2366115317 `ul
-> -> 997073096 `l `ul
-> -> 1281953886 `l `ul
-> 3579855332 `ul
-> 2724688242 `ul
-> -> 1006888145 `l `ul
-> -> 1258607687 `l `ul
-> 3524101629 `ul
-> 2768942443 `ul
-> -> 901097722 `l `ul
-> -> 1119000684 `l `ul
-> 3686517206 `ul
-> 2898065728 `ul
-> -> 853044451 `l `ul
-> -> 1172266101 `l `ul
-> 3705015759 `ul
-> 2882616665 `ul
-> -> 651767980 `l `ul
-> -> 1373503546 `l `ul
-> 3369554304 `ul
-> 3218104598 `ul
-> -> 565507253 `l `ul
-> -> 1454621731 `l `ul
-> 3485111705 `ul
-> 3099436303 `ul
-> -> 671266974 `l `ul
-> -> 1594198024 `l `ul
-> 3322730930 `ul
-> 2970347812 `ul
-> -> 795835527 `l `ul
-> -> 1483230225 `l `ul
-> 3244367275 `ul
-> 3060149565 `ul
-> -> 1994146192 `l `ul
-> -> 31158534 `l `ul
-> 2563907772 `ul
-> 4023717930 `ul
-> -> 1907459465 `l `ul
-> -> 112637215 `l `ul
-> 2680153253 `ul
-> 3904427059 `ul
-> -> 2013776290 `l `ul
-> -> 251722036 `l `ul
-> 2517215374 `ul
-> 3775830040 `ul
-> -> 2137656763 `l `ul
-> -> 141376813 `l `ul
-> 2439277719 `ul
-> 3865271297 `ul
-> -> 1802195444 `l `ul
-> -> 476864866 `l `ul
-> 2238001368 `ul
-> 4066508878 `ul
-> -> 1812370925 `l `ul
-> -> 453092731 `l `ul
-> 2181625025 `ul
-> 4111451223 `ul
-> -> 1706088902 `l `ul
-> -> 314042704 `l `ul
-> 2344532202 `ul
-> 4240017532 `ul
-> -> 1658658271 `l `ul
-> -> 366619977 `l `ul
-> 2362670323 `ul
-> 4224994405 `ul
-> -> 1303535960 `l `ul
-> -> 984961486 `l `ul
-> 2747007092 `ul
-> 3569037538 `ul
-> -> 1256170817 `l `ul
-> -> 1037604311 `l `ul
-> 2765210733 `ul
-> 3554079995 `ul
-> -> 1131014506 `l `ul
-> -> 879679996 `l `ul
-> 2909243462 `ul
-> 3663771856 `ul
-> -> 1141124467 `l `ul
-> -> 855842277 `l `ul
-> 2852801631 `ul
-> 3708648649 `ul
-> -> 1342533948 `l `ul
-> -> 654459306 `l `ul
-> 3188396048 `ul
-> 3373015174 `ul
-> -> 1466479909 `l `ul
-> -> 544179635 `l `ul
-> 3110523913 `ul
-> 3462522015 `ul
-> -> 1591671054 `l `ul
-> -> 702138776 `l `ul
-> 2966460450 `ul
-> 3352799412 `ul
-> -> 1504918807 `l `ul
-> -> 783551873 `l `ul
-> 3082640443 `ul
-> 3233442989 `ul
-> 3988292384 `ul
-> 2596254646 `ul
-> -> 62317068 `l `ul
-> -> 1957810842 `l `ul
-> 3939845945 `ul
-> 2647816111 `ul
-> -> 81470997 `l `ul
-> -> 1943803523 `l `ul
-> 3814918930 `ul
-> 2489596804 `ul
-> -> 225274430 `l `ul
-> -> 2053790376 `l `ul
-> 3826175755 `ul
-> 2466906013 `ul
-> -> 167816743 `l `ul
-> -> 2097651377 `l `ul
-> 4027552580 `ul
-> 2265490386 `ul
-> -> 503444072 `l `ul
-> -> 1762050814 `l `ul
-> 4150417245 `ul
-> 2154129355 `ul
-> -> 426522225 `l `ul
-> -> 1852507879 `l `ul
-> 4275313526 `ul
-> 2312317920 `ul
-> -> 282753626 `l `ul
-> -> 1742555852 `l `ul
-> 4189708143 `ul
-> 2394877945 `ul
-> -> 397917763 `l `ul
-> -> 1622183637 `l `ul
-> 3604390888 `ul
-> 2714866558 `ul
-> -> 953729732 `l `ul
-> -> 1340076626 `l `ul
-> 3518719985 `ul
-> 2797360999 `ul
-> -> 1068828381 `l `ul
-> -> 1219638859 `l `ul
-> 3624741850 `ul
-> 2936675148 `ul
-> -> 906185462 `l `ul
-> -> 1090812512 `l `ul
-> 3747672003 `ul
-> 2825379669 `ul
-> -> 829329135 `l `ul
-> -> 1181335161 `l `ul
-> 3412177804 `ul
-> 3160834842 `ul
-> -> 628085408 `l `ul
-> -> 1382605366 `l `ul
-> 3423369109 `ul
-> 3138078467 `ul
-> -> 570562233 `l `ul
-> -> 1426400815 `l `ul
-> 3317316542 `ul
-> 2998733608 `ul
-> -> 733239954 `l `ul
-> -> 1555261956 `l `ul
-> 3268935591 `ul
-> 3050360625 `ul
-> -> 752459403 `l `ul
-> -> 1541320221 `l `ul
-> 2607071920 `ul
-> 3965973030 `ul
-> -> 1969922972 `l `ul
-> -> 40735498 `l `ul
-> 2617837225 `ul
-> 3943577151 `ul
-> -> 1913087877 `l `ul
-> -> 83908371 `l `ul
-> 2512341634 `ul
-> 3803740692 `ul
-> -> 2075208622 `l `ul
-> -> 213261112 `l `ul
-> 2463272603 `ul
-> 3855990285 `ul
-> -> 2094854071 `l `ul
-> -> 198958881 `l `ul
-> 2262029012 `ul
-> 4057260610 `ul
-> -> 1759359992 `l `ul
-> -> 534414190 `l `ul
-> 2176718541 `ul
-> 4139329115 `ul
-> -> 1873836001 `l `ul
-> -> 414664567 `l `ul
-> 2282248934 `ul
-> 4279200368 `ul
-> -> 1711684554 `l `ul
-> -> 285281116 `l `ul
-> 2405801727 `ul
-> 4167216745 `ul
-> -> 1634467795 `l `ul
-> -> 376229701 `l `ul
-> 2685067896 `ul
-> 3608007406 `ul
-> -> 1308918612 `l `ul
-> -> 956543938 `l `ul
-> 2808555105 `ul
-> 3495958263 `ul
-> -> 1231636301 `l `ul
-> -> 1047427035 `l `ul
-> 2932959818 `ul
-> 3654703836 `ul
-> -> 1088359270 `l `ul
-> -> 936918000 `l `ul
-> 2847714899 `ul
-> 3736837829 `ul
-> -> 1202900863 `l `ul
-> -> 817233897 `l `ul
-> 3183342108 `ul
-> 3401237130 `ul
-> -> 1404277552 `l `ul
-> -> 615818150 `l `ul
-> 3134207493 `ul
-> 3453421203 `ul
-> -> 1423857449 `l `ul
-> -> 601450431 `l `ul
-> 3009837614 `ul
-> 3294710456 `ul
-> -> 1567103746 `l `ul
-> -> 711928724 `l `ul
-> 3020668471 `ul
-> 3272380065 `ul
-> -> 1510334235 `l `ul
-> -> 755167117 `l `ul
..
]
"118
[; ;./crcLIBhex.h: 118: unsigned short checksum (char *crcData, unsigned int dataLen)
[v _checksum `(us ~T0 @X0 1 ef2`*uc`ui ]
"119
[; ;./crcLIBhex.h: 119: {
{
[e :U _checksum ]
"118
[; ;./crcLIBhex.h: 118: unsigned short checksum (char *crcData, unsigned int dataLen)
[v _crcData `*uc ~T0 @X0 1 r1 ]
[v _dataLen `ui ~T0 @X0 1 r2 ]
"119
[; ;./crcLIBhex.h: 119: {
[f ]
"120
[; ;./crcLIBhex.h: 120:     unsigned int i;
[v _i `ui ~T0 @X0 1 a ]
"121
[; ;./crcLIBhex.h: 121:     unsigned short value = 0;
[v _value `us ~T0 @X0 1 a ]
[e = _value -> -> 0 `i `us ]
"123
[; ;./crcLIBhex.h: 123:     for( i=0; i < dataLen; ++i)
{
[e = _i -> -> 0 `i `ui ]
[e $U 176  ]
[e :U 173 ]
"124
[; ;./crcLIBhex.h: 124:         value += crcData[ i ];
[e =+ _value -> *U + _crcData * -> _i `ux -> -> # *U _crcData `ui `ux `us ]
[e =+ _i -> -> 1 `i `ui ]
[e :U 176 ]
[e $ < _i _dataLen 173  ]
[e :U 174 ]
}
"126
[; ;./crcLIBhex.h: 126:     return value;
[e ) _value ]
[e $UE 172  ]
"127
[; ;./crcLIBhex.h: 127: }
[e :UE 172 ]
}
"136
[; ;./crcLIBhex.h: 136: unsigned short crc8(char *crcData, unsigned int dataLen)
[v _crc8 `(us ~T0 @X0 1 ef2`*uc`ui ]
"137
[; ;./crcLIBhex.h: 137: {
{
[e :U _crc8 ]
"136
[; ;./crcLIBhex.h: 136: unsigned short crc8(char *crcData, unsigned int dataLen)
[v _crcData `*uc ~T0 @X0 1 r1 ]
[v _dataLen `ui ~T0 @X0 1 r2 ]
"137
[; ;./crcLIBhex.h: 137: {
[f ]
"138
[; ;./crcLIBhex.h: 138:     unsigned short value = CRC8_INIT;
[v _value `us ~T0 @X0 1 a ]
[e = _value _CRC8_INIT ]
"139
[; ;./crcLIBhex.h: 139:     unsigned int i, k, byte,feedback_bit;
[v _i `ui ~T0 @X0 1 a ]
[v _k `ui ~T0 @X0 1 a ]
[v _byte `ui ~T0 @X0 1 a ]
[v _feedback_bit `ui ~T0 @X0 1 a ]
"141
[; ;./crcLIBhex.h: 141:     for(i = 0; i < dataLen; ++i) {
{
[e = _i -> -> 0 `i `ui ]
[e $U 181  ]
[e :U 178 ]
{
"142
[; ;./crcLIBhex.h: 142:         byte = crcData[ i ];
[e = _byte -> *U + _crcData * -> _i `ux -> -> # *U _crcData `ui `ux `ui ]
"144
[; ;./crcLIBhex.h: 144:         for(k = 8; k > 0; --k) {
{
[e = _k -> -> 8 `i `ui ]
[e $ > _k -> -> 0 `i `ui 182  ]
[e $U 183  ]
[e :U 182 ]
{
"145
[; ;./crcLIBhex.h: 145:            feedback_bit = ( ( value ^ byte ) & 0x01 ) == 0x01;
[e = _feedback_bit -> -> == & ^ -> _value `ui _byte -> -> 1 `i `ui -> -> 1 `i `ui `i `ui ]
"147
[; ;./crcLIBhex.h: 147:             if( feedback_bit ) {
[e $ ! != _feedback_bit -> -> 0 `i `ui 185  ]
{
"148
[; ;./crcLIBhex.h: 148:                 value ^= CRC8_POLYNOMIAL;
[e =^ _value -> _CRC8_POLYNOMIAL `us ]
"149
[; ;./crcLIBhex.h: 149:             }
}
[e :U 185 ]
"150
[; ;./crcLIBhex.h: 150:             value = (value >> 1) & 0x7F;
[e = _value -> & >> -> _value `ui -> 1 `i -> -> 127 `i `ui `us ]
"152
[; ;./crcLIBhex.h: 152:             if( feedback_bit ) {
[e $ ! != _feedback_bit -> -> 0 `i `ui 186  ]
{
"153
[; ;./crcLIBhex.h: 153:                 value |= 0x80;
[e =| _value -> -> 128 `i `us ]
"154
[; ;./crcLIBhex.h: 154:             }
}
[e :U 186 ]
"155
[; ;./crcLIBhex.h: 155:             byte = byte >> 1;
[e = _byte >> _byte -> 1 `i ]
"156
[; ;./crcLIBhex.h: 156:         }
}
[e =- _k -> -> 1 `i `ui ]
[e $ > _k -> -> 0 `i `ui 182  ]
[e :U 183 ]
}
"157
[; ;./crcLIBhex.h: 157:     }
}
[e =+ _i -> -> 1 `i `ui ]
[e :U 181 ]
[e $ < _i _dataLen 178  ]
[e :U 179 ]
}
"158
[; ;./crcLIBhex.h: 158:     return value;
[e ) _value ]
[e $UE 177  ]
"159
[; ;./crcLIBhex.h: 159: }
[e :UE 177 ]
}
"167
[; ;./crcLIBhex.h: 167: unsigned int crc16 (char *crcData, unsigned int dataLen)
[v _crc16 `(ui ~T0 @X0 1 ef2`*uc`ui ]
"168
[; ;./crcLIBhex.h: 168: {
{
[e :U _crc16 ]
"167
[; ;./crcLIBhex.h: 167: unsigned int crc16 (char *crcData, unsigned int dataLen)
[v _crcData `*uc ~T0 @X0 1 r1 ]
[v _dataLen `ui ~T0 @X0 1 r2 ]
"168
[; ;./crcLIBhex.h: 168: {
[f ]
"169
[; ;./crcLIBhex.h: 169:       unsigned char i;
[v _i `uc ~T0 @X0 1 a ]
"170
[; ;./crcLIBhex.h: 170:       unsigned int iByte;
[v _iByte `ui ~T0 @X0 1 a ]
"171
[; ;./crcLIBhex.h: 171:       unsigned long crc = CRC16_INIT;
[v _crc `ul ~T0 @X0 1 a ]
[e = _crc -> _CRC16_INIT `ul ]
"173
[; ;./crcLIBhex.h: 173:       if (dataLen == 0)
[e $ ! == _dataLen -> -> 0 `i `ui 188  ]
"174
[; ;./crcLIBhex.h: 174:             return (~crc);
[e ) -> ~ _crc `ui ]
[e $UE 187  ]
[e :U 188 ]
"175
[; ;./crcLIBhex.h: 175:       do
[e :U 191 ]
"176
[; ;./crcLIBhex.h: 176:       {
{
"177
[; ;./crcLIBhex.h: 177:             for (i=0, iByte=((unsigned int)0xff & *crcData++) <<8;
{
[e ; = _i -> -> 0 `i `uc = _iByte << & -> -> 255 `i `ui -> *U ++ _crcData * -> -> 1 `i `x -> -> # *U _crcData `i `x `ui -> 8 `i ]
[e $ < -> _i `i -> 8 `i 192  ]
[e $U 193  ]
[e :U 192 ]
"180
[; ;./crcLIBhex.h: 180:             {
{
"181
[; ;./crcLIBhex.h: 181:                   if ((crc & 0x8000) ^ (iByte & 0x8000))
[e $ ! != ^ & _crc -> -> 32768 `ui `ul -> & _iByte -> 32768 `ui `ul -> -> -> 0 `i `l `ul 195  ]
"182
[; ;./crcLIBhex.h: 182:                         crc = (crc << 1) ^ CRC16_POLYNOMIAL;
[e = _crc ^ << _crc -> 1 `i -> _CRC16_POLYNOMIAL `ul ]
[e $U 196  ]
"183
[; ;./crcLIBhex.h: 183:                   else crc <<= 1;
[e :U 195 ]
[e =<< _crc -> -> 1 `i `ul ]
[e :U 196 ]
"184
[; ;./crcLIBhex.h: 184:             }
}
[e ; ++ _i -> -> 1 `i `uc =<< _iByte -> -> 1 `i `ui ]
[e $ < -> _i `i -> 8 `i 192  ]
[e :U 193 ]
}
"185
[; ;./crcLIBhex.h: 185:       } while (--dataLen);
}
[e $ != =- _dataLen -> -> 1 `i `ui -> -> 0 `i `ui 191  ]
[e :U 190 ]
"187
[; ;./crcLIBhex.h: 187:       return (crc & 0xFFFF );
[e ) -> & _crc -> -> 65535 `ui `ul `ui ]
[e $UE 187  ]
"188
[; ;./crcLIBhex.h: 188: }
[e :UE 187 ]
}
"196
[; ;./crcLIBhex.h: 196: unsigned int fletcher16 (char *crcData, unsigned int dataLen)
[v _fletcher16 `(ui ~T0 @X0 1 ef2`*uc`ui ]
"197
[; ;./crcLIBhex.h: 197: {
{
[e :U _fletcher16 ]
"196
[; ;./crcLIBhex.h: 196: unsigned int fletcher16 (char *crcData, unsigned int dataLen)
[v _crcData `*uc ~T0 @X0 1 r1 ]
[v _dataLen `ui ~T0 @X0 1 r2 ]
"197
[; ;./crcLIBhex.h: 197: {
[f ]
"198
[; ;./crcLIBhex.h: 198:         unsigned int sum1 = 0xff, sum2 = 0xff, tlen = 0;
[v _sum1 `ui ~T0 @X0 1 a ]
[e = _sum1 -> -> 255 `i `ui ]
[v _sum2 `ui ~T0 @X0 1 a ]
[e = _sum2 -> -> 255 `i `ui ]
[v _tlen `ui ~T0 @X0 1 a ]
[e = _tlen -> -> 0 `i `ui ]
"200
[; ;./crcLIBhex.h: 200:         while (dataLen) {
[e $U 198  ]
[e :U 199 ]
{
"201
[; ;./crcLIBhex.h: 201:                 tlen = dataLen > 20 ? 20 : dataLen;
[e = _tlen ? > _dataLen -> -> 20 `i `ui : -> -> 20 `i `ui _dataLen ]
"202
[; ;./crcLIBhex.h: 202:                 dataLen -= tlen;
[e =- _dataLen _tlen ]
"203
[; ;./crcLIBhex.h: 203:                 do {
[e :U 203 ]
{
"204
[; ;./crcLIBhex.h: 204:                         sum2 += sum1 += *crcData++;
[e =+ _sum2 =+ _sum1 -> *U ++ _crcData * -> -> 1 `i `x -> -> # *U _crcData `i `x `ui ]
"205
[; ;./crcLIBhex.h: 205:                 } while (--tlen);
}
[e $ != =- _tlen -> -> 1 `i `ui -> -> 0 `i `ui 203  ]
[e :U 202 ]
"206
[; ;./crcLIBhex.h: 206:                 sum1 = (sum1 & 0xff) + (sum1 >> 8);
[e = _sum1 + & _sum1 -> -> 255 `i `ui >> _sum1 -> 8 `i ]
"207
[; ;./crcLIBhex.h: 207:                 sum2 = (sum2 & 0xff) + (sum2 >> 8);
[e = _sum2 + & _sum2 -> -> 255 `i `ui >> _sum2 -> 8 `i ]
"208
[; ;./crcLIBhex.h: 208:         }
}
[e :U 198 ]
"200
[; ;./crcLIBhex.h: 200:         while (dataLen) {
[e $ != _dataLen -> -> 0 `i `ui 199  ]
[e :U 200 ]
"210
[; ;./crcLIBhex.h: 210:         sum1 = (sum1 & 0xff) + (sum1 >> 8);
[e = _sum1 + & _sum1 -> -> 255 `i `ui >> _sum1 -> 8 `i ]
"211
[; ;./crcLIBhex.h: 211:         sum2 = (sum2 & 0xff) + (sum2 >> 8);
[e = _sum2 + & _sum2 -> -> 255 `i `ui >> _sum2 -> 8 `i ]
"212
[; ;./crcLIBhex.h: 212:         return sum2 << 8 | sum1;
[e ) | << _sum2 -> 8 `i _sum1 ]
[e $UE 197  ]
"213
[; ;./crcLIBhex.h: 213: }
[e :UE 197 ]
}
"221
[; ;./crcLIBhex.h: 221: unsigned long crc32 (char *crcData, unsigned int dataLen)
[v _crc32 `(ul ~T0 @X0 1 ef2`*uc`ui ]
"222
[; ;./crcLIBhex.h: 222: {
{
[e :U _crc32 ]
"221
[; ;./crcLIBhex.h: 221: unsigned long crc32 (char *crcData, unsigned int dataLen)
[v _crcData `*uc ~T0 @X0 1 r1 ]
[v _dataLen `ui ~T0 @X0 1 r2 ]
"222
[; ;./crcLIBhex.h: 222: {
[f ]
"223
[; ;./crcLIBhex.h: 223:     unsigned int i;
[v _i `ui ~T0 @X0 1 a ]
"224
[; ;./crcLIBhex.h: 224:     unsigned long crc32Val;
[v _crc32Val `ul ~T0 @X0 1 a ]
"225
[; ;./crcLIBhex.h: 225:     unsigned short inByte;
[v _inByte `us ~T0 @X0 1 a ]
"227
[; ;./crcLIBhex.h: 227:     inByte = 0;
[e = _inByte -> -> 0 `i `us ]
"228
[; ;./crcLIBhex.h: 228:     crc32Val = 0xFFFFFFFF;
[e = _crc32Val -> 4294967295 `ul ]
"229
[; ;./crcLIBhex.h: 229:     for (i=0; i<dataLen; i++)
{
[e = _i -> -> 0 `i `ui ]
[e $U 208  ]
[e :U 205 ]
"230
[; ;./crcLIBhex.h: 230:       {
{
"231
[; ;./crcLIBhex.h: 231:         inByte = crcData[i];
[e = _inByte -> *U + _crcData * -> _i `ux -> -> # *U _crcData `ui `ux `us ]
"232
[; ;./crcLIBhex.h: 232:         crc32Val = (crc32Val >> 8) ^ crc32_lookup_table[inByte ^ (crc32Val & 0x000000FF)];
[e = _crc32Val ^ >> _crc32Val -> 8 `i *U + &U _crc32_lookup_table * -> ^ -> _inByte `ul & _crc32Val -> -> -> 255 `i `l `ul `ux -> -> # *U &U _crc32_lookup_table `ui `ux ]
"233
[; ;./crcLIBhex.h: 233:       }
}
[e ++ _i -> -> 1 `i `ui ]
[e :U 208 ]
[e $ < _i _dataLen 205  ]
[e :U 206 ]
}
"234
[; ;./crcLIBhex.h: 234:     return crc32Val ^ ~0;
[e ) ^ _crc32Val -> -> ~ -> 0 `i `l `ul ]
[e $UE 204  ]
"235
[; ;./crcLIBhex.h: 235: }
[e :UE 204 ]
}
"243
[; ;./crcLIBhex.h: 243: unsigned long adler32(char *crcData, unsigned int dataLen)
[v _adler32 `(ul ~T0 @X0 1 ef2`*uc`ui ]
"244
[; ;./crcLIBhex.h: 244: {
{
[e :U _adler32 ]
"243
[; ;./crcLIBhex.h: 243: unsigned long adler32(char *crcData, unsigned int dataLen)
[v _crcData `*uc ~T0 @X0 1 r1 ]
[v _dataLen `ui ~T0 @X0 1 r2 ]
"244
[; ;./crcLIBhex.h: 244: {
[f ]
"245
[; ;./crcLIBhex.h: 245:     unsigned long s1 = 1;
[v _s1 `ul ~T0 @X0 1 a ]
[e = _s1 -> -> -> 1 `i `l `ul ]
"246
[; ;./crcLIBhex.h: 246:     unsigned long s2 = 0;
[v _s2 `ul ~T0 @X0 1 a ]
[e = _s2 -> -> -> 0 `i `l `ul ]
"247
[; ;./crcLIBhex.h: 247:     unsigned int i;
[v _i `ui ~T0 @X0 1 a ]
"249
[; ;./crcLIBhex.h: 249:     for(i = 0; i < dataLen; ++i)
{
[e = _i -> -> 0 `i `ui ]
[e $U 213  ]
[e :U 210 ]
"250
[; ;./crcLIBhex.h: 250:     {
{
"251
[; ;./crcLIBhex.h: 251:         s1 = ( s1 + crcData[ i ] ) % 65521;
[e = _s1 % + _s1 -> *U + _crcData * -> _i `ux -> -> # *U _crcData `ui `ux `ul -> -> 65521 `l `ul ]
"252
[; ;./crcLIBhex.h: 252:         s2 = ( s2 + s1 ) % 65521;
[e = _s2 % + _s2 _s1 -> -> 65521 `l `ul ]
"253
[; ;./crcLIBhex.h: 253:     }
}
[e =+ _i -> -> 1 `i `ui ]
[e :U 213 ]
[e $ < _i _dataLen 210  ]
[e :U 211 ]
}
"254
[; ;./crcLIBhex.h: 254:     return (s2 << 16) | s1;
[e ) | << _s2 -> 16 `i _s1 ]
[e $UE 209  ]
"255
[; ;./crcLIBhex.h: 255: }
[e :UE 209 ]
}
"3 ./reflect_byte.h
[; ;./reflect_byte.h: 3: unsigned char reflect_byte(unsigned char *byte, unsigned char *byte_ref, unsigned char index){
[v _reflect_byte `(uc ~T0 @X0 1 ef3`*uc`*uc`uc ]
{
[e :U _reflect_byte ]
[v _byte `*uc ~T0 @X0 1 r1 ]
[v _byte_ref `*uc ~T0 @X0 1 r2 ]
[v _index `uc ~T0 @X0 1 r3 ]
[f ]
"4
[; ;./reflect_byte.h: 4:     unsigned char i, j, temp;
[v _i `uc ~T0 @X0 1 a ]
[v _j `uc ~T0 @X0 1 a ]
[v _temp `uc ~T0 @X0 1 a ]
"5
[; ;./reflect_byte.h: 5:     for (j = 0; j < index; j++) {
{
[e = _j -> -> 0 `i `uc ]
[e $U 218  ]
[e :U 215 ]
{
"6
[; ;./reflect_byte.h: 6:         for (i = 0; i < 8; i++) {
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 8 `i 219  ]
[e $U 220  ]
[e :U 219 ]
{
"7
[; ;./reflect_byte.h: 7:             temp = byte[j] >> i;
[e = _temp -> >> -> *U + _byte * -> _j `ux -> -> # *U _byte `ui `ux `i -> _i `i `uc ]
"8
[; ;./reflect_byte.h: 8:             byte_ref[index - 1 - j] += (temp & 0x01) << (7 - i);
[e =+ *U + _byte_ref * -> - - -> _index `i -> 1 `i -> _j `i `x -> -> # *U _byte_ref `i `x -> << & -> _temp `i -> 1 `i - -> 7 `i -> _i `i `uc ]
"10
[; ;./reflect_byte.h: 10:         }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 8 `i 219  ]
[e :U 220 ]
}
"11
[; ;./reflect_byte.h: 11:     }
}
[e ++ _j -> -> 1 `i `uc ]
[e :U 218 ]
[e $ < -> _j `i -> _index `i 215  ]
[e :U 216 ]
}
"13
[; ;./reflect_byte.h: 13: }
[e :UE 214 ]
}
"44 main.c
[; ;main.c: 44: unsigned char data_response_13byte[] = {0x06, 0x03, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
[v _data_response_13byte `uc ~T0 @X0 -> 14 `i e ]
[i _data_response_13byte
:U ..
-> -> 6 `i `uc
-> -> 3 `i `uc
-> -> 8 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
..
]
"45
[; ;main.c: 45: unsigned char data_response_7byte[] = {0x06, 0x03, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00};
[v _data_response_7byte `uc ~T0 @X0 -> 8 `i e ]
[i _data_response_7byte
:U ..
-> -> 6 `i `uc
-> -> 3 `i `uc
-> -> 2 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
..
]
"46
[; ;main.c: 46: unsigned char data_response_8byte[] = {0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
[v _data_response_8byte `uc ~T0 @X0 -> 9 `i e ]
[i _data_response_8byte
:U ..
-> -> 6 `i `uc
-> -> 6 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
..
]
"66
[; ;main.c: 66: void EEPROM_Write(int address, char data) {
[v _EEPROM_Write `(v ~T0 @X0 1 ef2`i`uc ]
{
[e :U _EEPROM_Write ]
[v _address `i ~T0 @X0 1 r1 ]
[v _data `uc ~T0 @X0 1 r2 ]
[f ]
"68
[; ;main.c: 68:     EEADR = address;
[e = _EEADR -> _address `uc ]
"69
[; ;main.c: 69:     EEDATA = data;
[e = _EEDATA -> _data `uc ]
"70
[; ;main.c: 70:     EECON1bits.EEPGD = 0;
[e = . . _EECON1bits 0 5 -> -> 0 `i `uc ]
"71
[; ;main.c: 71:     EECON1bits.WREN = 1;
[e = . . _EECON1bits 0 2 -> -> 1 `i `uc ]
"72
[; ;main.c: 72:     INTCONbits.GIE = 0;
[e = . . _INTCONbits 0 7 -> -> 0 `i `uc ]
"76
[; ;main.c: 76:     EECON2 = 0x55;
[e = _EECON2 -> -> 85 `i `uc ]
"77
[; ;main.c: 77:     EECON2 = 0xaa;
[e = _EECON2 -> -> 170 `i `uc ]
"79
[; ;main.c: 79:     EECON1bits.WR = 1;
[e = . . _EECON1bits 0 1 -> -> 1 `i `uc ]
"80
[; ;main.c: 80:     INTCONbits.GIE = 1;
[e = . . _INTCONbits 0 7 -> -> 1 `i `uc ]
"82
[; ;main.c: 82:     while (PIR2bits.EEIF == 0);
[e $U 223  ]
[e :U 224 ]
[e :U 223 ]
[e $ == -> . . _PIR2bits 0 4 `i -> 0 `i 224  ]
[e :U 225 ]
"83
[; ;main.c: 83:     PIR2bits.EEIF = 0;
[e = . . _PIR2bits 0 4 -> -> 0 `i `uc ]
"85
[; ;main.c: 85: }
[e :UE 222 ]
}
"87
[; ;main.c: 87: void EEPROM_WriteString(int address, char *data) {
[v _EEPROM_WriteString `(v ~T0 @X0 1 ef2`i`*uc ]
{
[e :U _EEPROM_WriteString ]
[v _address `i ~T0 @X0 1 r1 ]
[v _data `*uc ~T0 @X0 1 r2 ]
[f ]
"89
[; ;main.c: 89:     while (*data != '\0') {
[e $U 227  ]
[e :U 228 ]
{
"90
[; ;main.c: 90:         EEPROM_Write(address, *data);
[e ( _EEPROM_Write (2 , _address *U _data ]
"91
[; ;main.c: 91:         address++;
[e ++ _address -> 1 `i ]
"92
[; ;main.c: 92:         *data++;
[e *U ++ _data * -> -> 1 `i `x -> -> # *U _data `i `x ]
"93
[; ;main.c: 93:     }
}
[e :U 227 ]
"89
[; ;main.c: 89:     while (*data != '\0') {
[e $ != -> *U _data `ui -> 0 `ui 228  ]
[e :U 229 ]
"94
[; ;main.c: 94: }
[e :UE 226 ]
}
"96
[; ;main.c: 96: char EEPROM_Read(int address) {
[v _EEPROM_Read `(uc ~T0 @X0 1 ef1`i ]
{
[e :U _EEPROM_Read ]
[v _address `i ~T0 @X0 1 r1 ]
[f ]
"98
[; ;main.c: 98:     EEADR = address;
[e = _EEADR -> _address `uc ]
"99
[; ;main.c: 99:     EECON1bits.WREN = 0;
[e = . . _EECON1bits 0 2 -> -> 0 `i `uc ]
"100
[; ;main.c: 100:     EECON1bits.EEPGD = 0;
[e = . . _EECON1bits 0 5 -> -> 0 `i `uc ]
"101
[; ;main.c: 101:     EECON1bits.RD = 1;
[e = . . _EECON1bits 0 0 -> -> 1 `i `uc ]
"102
[; ;main.c: 102:     return (EEDATA);
[e ) -> _EEDATA `uc ]
[e $UE 230  ]
"103
[; ;main.c: 103: }
[e :UE 230 ]
}
"107
[; ;main.c: 107: void CONVERT_Data_5Byte(char *input, unsigned char *output_ref) {
[v _CONVERT_Data_5Byte `(v ~T0 @X0 1 ef2`*uc`*uc ]
{
[e :U _CONVERT_Data_5Byte ]
[v _input `*uc ~T0 @X0 1 r1 ]
[v _output_ref `*uc ~T0 @X0 1 r2 ]
[f ]
[v F1490 `uc ~T0 @X0 -> 5 `i s ]
[i F1490
:U ..
"109
[; ;main.c: 109:     unsigned char input_ref[5] = "";
-> 0 `c
..
]
[v _input_ref `uc ~T0 @X0 -> 5 `i a ]
[e = _input_ref F1490 ]
[v F1492 `uc ~T0 @X0 -> 5 `i s ]
[i F1492
:U ..
"110
[; ;main.c: 110:     unsigned char txt[5] = "";
-> 0 `c
..
]
[v _txt `uc ~T0 @X0 -> 5 `i a ]
[e = _txt F1492 ]
"111
[; ;main.c: 111:     unsigned int crc;
[v _crc `ui ~T0 @X0 1 a ]
[v F1495 `uc ~T0 @X0 -> 2 `i s ]
[i F1495
:U ..
"112
[; ;main.c: 112:     unsigned char output[2] = "";
-> 0 `c
..
]
[v _output `uc ~T0 @X0 -> 2 `i a ]
[e = _output F1495 ]
"113
[; ;main.c: 113:     reflect_byte(input, input_ref, 5);
[e ( _reflect_byte (3 , , -> _input `*uc &U _input_ref -> -> 5 `i `uc ]
"117
[; ;main.c: 117:     for (unsigned int i = 0; i < 5; i++) {
{
[v _i `ui ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `ui ]
[e $ < _i -> -> 5 `i `ui 232  ]
[e $U 233  ]
[e :U 232 ]
{
"118
[; ;main.c: 118:         txt[i] = input_ref[5 - 1 - i];
[e = *U + &U _txt * -> _i `ux -> -> # *U &U _txt `ui `ux *U + &U _input_ref * -> - -> - -> 5 `i -> 1 `i `ui _i `ux -> -> # *U &U _input_ref `ui `ux ]
"119
[; ;main.c: 119:     }
}
[e ++ _i -> -> 1 `i `ui ]
[e $ < _i -> -> 5 `i `ui 232  ]
[e :U 233 ]
}
"121
[; ;main.c: 121:     crc = crc16(txt, 5);
[e = _crc ( _crc16 (2 , -> &U _txt `*uc -> -> 5 `i `ui ]
"122
[; ;main.c: 122:     output[0] = crc & 0xff;
[e = *U + &U _output * -> -> -> 0 `i `ui `ux -> -> # *U &U _output `ui `ux -> & _crc -> -> 255 `i `ui `uc ]
"123
[; ;main.c: 123:     output[1] = (crc >> 8)&0xff;
[e = *U + &U _output * -> -> -> 1 `i `ui `ux -> -> # *U &U _output `ui `ux -> & >> _crc -> 8 `i -> -> 255 `i `ui `uc ]
"127
[; ;main.c: 127:     reflect_byte(output, output_ref, 2);
[e ( _reflect_byte (3 , , &U _output _output_ref -> -> 2 `i `uc ]
"131
[; ;main.c: 131: }
[e :UE 231 ]
}
"134
[; ;main.c: 134: void CONVERT_Data_6Byte(char *input, unsigned char *output_ref) {
[v _CONVERT_Data_6Byte `(v ~T0 @X0 1 ef2`*uc`*uc ]
{
[e :U _CONVERT_Data_6Byte ]
[v _input `*uc ~T0 @X0 1 r1 ]
[v _output_ref `*uc ~T0 @X0 1 r2 ]
[f ]
[v F1501 `uc ~T0 @X0 -> 6 `i s ]
[i F1501
:U ..
"136
[; ;main.c: 136:     unsigned char input_ref[6] = "";
-> 0 `c
..
]
[v _input_ref `uc ~T0 @X0 -> 6 `i a ]
[e = _input_ref F1501 ]
[v F1503 `uc ~T0 @X0 -> 6 `i s ]
[i F1503
:U ..
"137
[; ;main.c: 137:     unsigned char txt[6] = "";
-> 0 `c
..
]
[v _txt `uc ~T0 @X0 -> 6 `i a ]
[e = _txt F1503 ]
"138
[; ;main.c: 138:     unsigned int crc;
[v _crc `ui ~T0 @X0 1 a ]
[v F1506 `uc ~T0 @X0 -> 2 `i s ]
[i F1506
:U ..
"139
[; ;main.c: 139:     unsigned char output[2] = "";
-> 0 `c
..
]
[v _output `uc ~T0 @X0 -> 2 `i a ]
[e = _output F1506 ]
"140
[; ;main.c: 140:     reflect_byte(input, input_ref, 6);
[e ( _reflect_byte (3 , , -> _input `*uc &U _input_ref -> -> 6 `i `uc ]
"144
[; ;main.c: 144:     for (unsigned int i = 0; i < 6; i++) {
{
[v _i `ui ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `ui ]
[e $ < _i -> -> 6 `i `ui 236  ]
[e $U 237  ]
[e :U 236 ]
{
"145
[; ;main.c: 145:         txt[i] = input_ref[6 - 1 - i];
[e = *U + &U _txt * -> _i `ux -> -> # *U &U _txt `ui `ux *U + &U _input_ref * -> - -> - -> 6 `i -> 1 `i `ui _i `ux -> -> # *U &U _input_ref `ui `ux ]
"146
[; ;main.c: 146:     }
}
[e ++ _i -> -> 1 `i `ui ]
[e $ < _i -> -> 6 `i `ui 236  ]
[e :U 237 ]
}
"148
[; ;main.c: 148:     crc = crc16(txt, 6);
[e = _crc ( _crc16 (2 , -> &U _txt `*uc -> -> 6 `i `ui ]
"149
[; ;main.c: 149:     output[0] = crc & 0xff;
[e = *U + &U _output * -> -> -> 0 `i `ui `ux -> -> # *U &U _output `ui `ux -> & _crc -> -> 255 `i `ui `uc ]
"150
[; ;main.c: 150:     output[1] = (crc >> 8)&0xff;
[e = *U + &U _output * -> -> -> 1 `i `ui `ux -> -> # *U &U _output `ui `ux -> & >> _crc -> 8 `i -> -> 255 `i `ui `uc ]
"154
[; ;main.c: 154:     reflect_byte(output, output_ref, 2);
[e ( _reflect_byte (3 , , &U _output _output_ref -> -> 2 `i `uc ]
"157
[; ;main.c: 157: }
[e :UE 235 ]
}
"159
[; ;main.c: 159: void CONVERT_Data_11Byte(char *input, unsigned char *output_ref) {
[v _CONVERT_Data_11Byte `(v ~T0 @X0 1 ef2`*uc`*uc ]
{
[e :U _CONVERT_Data_11Byte ]
[v _input `*uc ~T0 @X0 1 r1 ]
[v _output_ref `*uc ~T0 @X0 1 r2 ]
[f ]
[v F1512 `uc ~T0 @X0 -> 11 `i s ]
[i F1512
:U ..
"161
[; ;main.c: 161:     unsigned char input_ref[11] = "";
-> 0 `c
..
]
[v _input_ref `uc ~T0 @X0 -> 11 `i a ]
[e = _input_ref F1512 ]
[v F1514 `uc ~T0 @X0 -> 11 `i s ]
[i F1514
:U ..
"162
[; ;main.c: 162:     unsigned char txt[11] = "";
-> 0 `c
..
]
[v _txt `uc ~T0 @X0 -> 11 `i a ]
[e = _txt F1514 ]
"163
[; ;main.c: 163:     unsigned int crc;
[v _crc `ui ~T0 @X0 1 a ]
[v F1517 `uc ~T0 @X0 -> 2 `i s ]
[i F1517
:U ..
"164
[; ;main.c: 164:     unsigned char output[2] = "";
-> 0 `c
..
]
[v _output `uc ~T0 @X0 -> 2 `i a ]
[e = _output F1517 ]
"165
[; ;main.c: 165:     reflect_byte(input, input_ref, 11);
[e ( _reflect_byte (3 , , -> _input `*uc &U _input_ref -> -> 11 `i `uc ]
"169
[; ;main.c: 169:     for (unsigned int i = 0; i < 11; i++) {
{
[v _i `ui ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `ui ]
[e $ < _i -> -> 11 `i `ui 240  ]
[e $U 241  ]
[e :U 240 ]
{
"170
[; ;main.c: 170:         txt[i] = input_ref[11 - 1 - i];
[e = *U + &U _txt * -> _i `ux -> -> # *U &U _txt `ui `ux *U + &U _input_ref * -> - -> - -> 11 `i -> 1 `i `ui _i `ux -> -> # *U &U _input_ref `ui `ux ]
"171
[; ;main.c: 171:     }
}
[e ++ _i -> -> 1 `i `ui ]
[e $ < _i -> -> 11 `i `ui 240  ]
[e :U 241 ]
}
"173
[; ;main.c: 173:     crc = crc16(txt, 11);
[e = _crc ( _crc16 (2 , -> &U _txt `*uc -> -> 11 `i `ui ]
"174
[; ;main.c: 174:     output[0] = crc & 0xff;
[e = *U + &U _output * -> -> -> 0 `i `ui `ux -> -> # *U &U _output `ui `ux -> & _crc -> -> 255 `i `ui `uc ]
"175
[; ;main.c: 175:     output[1] = (crc >> 8)&0xff;
[e = *U + &U _output * -> -> -> 1 `i `ui `ux -> -> # *U &U _output `ui `ux -> & >> _crc -> 8 `i -> -> 255 `i `ui `uc ]
"179
[; ;main.c: 179:     reflect_byte(output, output_ref, 2);
[e ( _reflect_byte (3 , , &U _output _output_ref -> -> 2 `i `uc ]
"183
[; ;main.c: 183: }
[e :UE 239 ]
}
[v $root$_ISR `(v ~T0 @X0 0 e ]
"188
[; ;main.c: 188: void __attribute__((picinterrupt(""))) ISR() {
[v _ISR `(v ~T1 @X0 1 ef ]
{
[e :U _ISR ]
[f ]
[v F1521 `uc ~T0 @X0 -> 2 `i s ]
[i F1521
:U ..
"189
[; ;main.c: 189:     unsigned char crc_code_read[2] = "";
-> 0 `c
..
]
[v _crc_code_read `uc ~T0 @X0 -> 2 `i a ]
[e = _crc_code_read F1521 ]
[v F1523 `uc ~T0 @X0 -> 2 `i s ]
[i F1523
:U ..
"190
[; ;main.c: 190:     unsigned char crc_code_response[2] = "";
-> 0 `c
..
]
[v _crc_code_response `uc ~T0 @X0 -> 2 `i a ]
[e = _crc_code_response F1523 ]
[v F1525 `uc ~T0 @X0 -> 8 `i s ]
[i F1525
:U ..
"191
[; ;main.c: 191:     unsigned char data[8] = "";
-> 0 `c
..
]
[v _data `uc ~T0 @X0 -> 8 `i a ]
[e = _data F1525 ]
"192
[; ;main.c: 192:     unsigned char i = 0;
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
"193
[; ;main.c: 193:     unsigned int address;
[v _address `ui ~T0 @X0 1 a ]
"194
[; ;main.c: 194:     if (PIR1bits.RCIF) {
[e $ ! != -> . . _PIR1bits 0 5 `i -> 0 `i 244  ]
{
"195
[; ;main.c: 195:         if (UART_Data_Ready) {
[e $ ! != &U _UART_Data_Ready -> -> 0 `i `*F1531 245  ]
{
"196
[; ;main.c: 196:             UART_Read_Text(data, 8);
[e ( _UART_Read_Text (2 , -> &U _data `*uc -> -> 8 `i `ui ]
"197
[; ;main.c: 197:             CONVERT_Data_6Byte(data, crc_code_read);
[e ( _CONVERT_Data_6Byte (2 , -> &U _data `*uc &U _crc_code_read ]
"199
[; ;main.c: 199:             address = data[2];
[e = _address -> *U + &U _data * -> -> -> 2 `i `ui `ux -> -> # *U &U _data `ui `ux `ui ]
"200
[; ;main.c: 200:             address = (address << 8) | data[3];
[e = _address | << _address -> 8 `i -> *U + &U _data * -> -> -> 3 `i `ui `ux -> -> # *U &U _data `ui `ux `ui ]
"202
[; ;main.c: 202:             if ((data[8 - 2] == crc_code_read[2 - 2])&&(data[8 - 1] == crc_code_read[2 - 1])) {
[e $ ! && == -> *U + &U _data * -> -> - -> 8 `i -> 2 `i `ui `ux -> -> # *U &U _data `ui `ux `i -> *U + &U _crc_code_read * -> -> - -> 2 `i -> 2 `i `ui `ux -> -> # *U &U _crc_code_read `ui `ux `i == -> *U + &U _data * -> -> - -> 8 `i -> 1 `i `ui `ux -> -> # *U &U _data `ui `ux `i -> *U + &U _crc_code_read * -> -> - -> 2 `i -> 1 `i `ui `ux -> -> # *U &U _crc_code_read `ui `ux `i 246  ]
{
"203
[; ;main.c: 203:                 if (data[1] == 0x03) {
[e $ ! == -> *U + &U _data * -> -> -> 1 `i `ui `ux -> -> # *U &U _data `ui `ux `i -> 3 `i 247  ]
{
"204
[; ;main.c: 204:                     switch (address) {
[e $U 249  ]
{
"205
[; ;main.c: 205:                         case 0x0000:
[e :U 250 ]
"206
[; ;main.c: 206:                             for (i = 0; i < 8; i++) {
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 8 `i 251  ]
[e $U 252  ]
[e :U 251 ]
{
"207
[; ;main.c: 207:                                 data_response_13byte[3 + i] = EEPROM_Read(i);
[e = *U + &U _data_response_13byte * -> -> + -> 3 `i -> _i `i `ui `ux -> -> # *U &U _data_response_13byte `ui `ux -> ( _EEPROM_Read (1 -> _i `i `uc ]
"208
[; ;main.c: 208:                             }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 8 `i 251  ]
[e :U 252 ]
}
"209
[; ;main.c: 209:                             CONVERT_Data_11Byte(data_response_13byte, crc_code_response);
[e ( _CONVERT_Data_11Byte (2 , -> &U _data_response_13byte `*uc &U _crc_code_response ]
"210
[; ;main.c: 210:                             data_response_13byte[11] = crc_code_response[0];
[e = *U + &U _data_response_13byte * -> -> -> 11 `i `ui `ux -> -> # *U &U _data_response_13byte `ui `ux *U + &U _crc_code_response * -> -> -> 0 `i `ui `ux -> -> # *U &U _crc_code_response `ui `ux ]
"211
[; ;main.c: 211:                             data_response_13byte[12] = crc_code_response[1];
[e = *U + &U _data_response_13byte * -> -> -> 12 `i `ui `ux -> -> # *U &U _data_response_13byte `ui `ux *U + &U _crc_code_response * -> -> -> 1 `i `ui `ux -> -> # *U &U _crc_code_response `ui `ux ]
"212
[; ;main.c: 212:                             if (UART_TX_Empty())
[e $ ! != -> ( _UART_TX_Empty ..  `i -> 0 `i 254  ]
"213
[; ;main.c: 213:                                 UART_Write_Text_Length(data_response_13byte, 13);
[e ( _UART_Write_Text_Length (2 , -> &U _data_response_13byte `*uc -> 13 `i ]
[e :U 254 ]
"214
[; ;main.c: 214:                             break;
[e $U 248  ]
"215
[; ;main.c: 215:                         case 0x1006:
[e :U 255 ]
"216
[; ;main.c: 216:                             for (i = 0; i < 2; i++) {
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 2 `i 256  ]
[e $U 257  ]
[e :U 256 ]
{
"217
[; ;main.c: 217:                                 data_response_7byte[3 + i] = EEPROM_Read(1006 + i);
[e = *U + &U _data_response_7byte * -> -> + -> 3 `i -> _i `i `ui `ux -> -> # *U &U _data_response_7byte `ui `ux -> ( _EEPROM_Read (1 + -> 1006 `i -> _i `i `uc ]
"218
[; ;main.c: 218:                             }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 2 `i 256  ]
[e :U 257 ]
}
"219
[; ;main.c: 219:                             CONVERT_Data_5Byte(data_response_7byte, crc_code_response);
[e ( _CONVERT_Data_5Byte (2 , -> &U _data_response_7byte `*uc &U _crc_code_response ]
"220
[; ;main.c: 220:                             data_response_7byte[5] = crc_code_response[0];
[e = *U + &U _data_response_7byte * -> -> -> 5 `i `ui `ux -> -> # *U &U _data_response_7byte `ui `ux *U + &U _crc_code_response * -> -> -> 0 `i `ui `ux -> -> # *U &U _crc_code_response `ui `ux ]
"221
[; ;main.c: 221:                             data_response_7byte[6] = crc_code_response[1];
[e = *U + &U _data_response_7byte * -> -> -> 6 `i `ui `ux -> -> # *U &U _data_response_7byte `ui `ux *U + &U _crc_code_response * -> -> -> 1 `i `ui `ux -> -> # *U &U _crc_code_response `ui `ux ]
"222
[; ;main.c: 222:                             if (UART_TX_Empty())
[e $ ! != -> ( _UART_TX_Empty ..  `i -> 0 `i 259  ]
"223
[; ;main.c: 223:                                 UART_Write_Text_Length(data_response_7byte, 7);
[e ( _UART_Write_Text_Length (2 , -> &U _data_response_7byte `*uc -> 7 `i ]
[e :U 259 ]
"224
[; ;main.c: 224:                             break;
[e $U 248  ]
"225
[; ;main.c: 225:                         case 0x1008:
[e :U 260 ]
"226
[; ;main.c: 226:                             for (i = 0; i < 2; i++) {
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 2 `i 261  ]
[e $U 262  ]
[e :U 261 ]
{
"227
[; ;main.c: 227:                                 data_response_7byte[3 + i] = EEPROM_Read(1008 + i);
[e = *U + &U _data_response_7byte * -> -> + -> 3 `i -> _i `i `ui `ux -> -> # *U &U _data_response_7byte `ui `ux -> ( _EEPROM_Read (1 + -> 1008 `i -> _i `i `uc ]
"228
[; ;main.c: 228:                             }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 2 `i 261  ]
[e :U 262 ]
}
"229
[; ;main.c: 229:                             CONVERT_Data_5Byte(data_response_7byte, crc_code_response);
[e ( _CONVERT_Data_5Byte (2 , -> &U _data_response_7byte `*uc &U _crc_code_response ]
"230
[; ;main.c: 230:                             data_response_7byte[5] = crc_code_response[0];
[e = *U + &U _data_response_7byte * -> -> -> 5 `i `ui `ux -> -> # *U &U _data_response_7byte `ui `ux *U + &U _crc_code_response * -> -> -> 0 `i `ui `ux -> -> # *U &U _crc_code_response `ui `ux ]
"231
[; ;main.c: 231:                             data_response_7byte[6] = crc_code_response[1];
[e = *U + &U _data_response_7byte * -> -> -> 6 `i `ui `ux -> -> # *U &U _data_response_7byte `ui `ux *U + &U _crc_code_response * -> -> -> 1 `i `ui `ux -> -> # *U &U _crc_code_response `ui `ux ]
"232
[; ;main.c: 232:                             if (UART_TX_Empty())
[e $ ! != -> ( _UART_TX_Empty ..  `i -> 0 `i 264  ]
"233
[; ;main.c: 233:                                 UART_Write_Text_Length(data_response_7byte, 7);
[e ( _UART_Write_Text_Length (2 , -> &U _data_response_7byte `*uc -> 7 `i ]
[e :U 264 ]
"235
[; ;main.c: 235:                             break;
[e $U 248  ]
"236
[; ;main.c: 236:                         case 0x1010:
[e :U 265 ]
"238
[; ;main.c: 238:                             for (i = 0; i < 2; i++) {
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 2 `i 266  ]
[e $U 267  ]
[e :U 266 ]
{
"239
[; ;main.c: 239:                                 data_response_7byte[3 + i] = EEPROM_Read(1010 + i);
[e = *U + &U _data_response_7byte * -> -> + -> 3 `i -> _i `i `ui `ux -> -> # *U &U _data_response_7byte `ui `ux -> ( _EEPROM_Read (1 + -> 1010 `i -> _i `i `uc ]
"240
[; ;main.c: 240:                             }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 2 `i 266  ]
[e :U 267 ]
}
"241
[; ;main.c: 241:                             CONVERT_Data_5Byte(data_response_7byte, crc_code_response);
[e ( _CONVERT_Data_5Byte (2 , -> &U _data_response_7byte `*uc &U _crc_code_response ]
"242
[; ;main.c: 242:                             data_response_7byte[5] = crc_code_response[0];
[e = *U + &U _data_response_7byte * -> -> -> 5 `i `ui `ux -> -> # *U &U _data_response_7byte `ui `ux *U + &U _crc_code_response * -> -> -> 0 `i `ui `ux -> -> # *U &U _crc_code_response `ui `ux ]
"243
[; ;main.c: 243:                             data_response_7byte[6] = crc_code_response[1];
[e = *U + &U _data_response_7byte * -> -> -> 6 `i `ui `ux -> -> # *U &U _data_response_7byte `ui `ux *U + &U _crc_code_response * -> -> -> 1 `i `ui `ux -> -> # *U &U _crc_code_response `ui `ux ]
"244
[; ;main.c: 244:                             if (UART_TX_Empty())
[e $ ! != -> ( _UART_TX_Empty ..  `i -> 0 `i 269  ]
"245
[; ;main.c: 245:                                 UART_Write_Text_Length(data_response_7byte, 7);
[e ( _UART_Write_Text_Length (2 , -> &U _data_response_7byte `*uc -> 7 `i ]
[e :U 269 ]
"247
[; ;main.c: 247:                             break;
[e $U 248  ]
"248
[; ;main.c: 248:                         case 0x2002:
[e :U 270 ]
"249
[; ;main.c: 249:                             for (i = 0; i < 2; i++) {
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 2 `i 271  ]
[e $U 272  ]
[e :U 271 ]
{
"250
[; ;main.c: 250:                                 data_response_7byte[3 + i] = EEPROM_Read(2002 + i);
[e = *U + &U _data_response_7byte * -> -> + -> 3 `i -> _i `i `ui `ux -> -> # *U &U _data_response_7byte `ui `ux -> ( _EEPROM_Read (1 + -> 2002 `i -> _i `i `uc ]
"251
[; ;main.c: 251:                             }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 2 `i 271  ]
[e :U 272 ]
}
"252
[; ;main.c: 252:                             CONVERT_Data_5Byte(data_response_7byte, crc_code_response);
[e ( _CONVERT_Data_5Byte (2 , -> &U _data_response_7byte `*uc &U _crc_code_response ]
"253
[; ;main.c: 253:                             data_response_7byte[5] = crc_code_response[0];
[e = *U + &U _data_response_7byte * -> -> -> 5 `i `ui `ux -> -> # *U &U _data_response_7byte `ui `ux *U + &U _crc_code_response * -> -> -> 0 `i `ui `ux -> -> # *U &U _crc_code_response `ui `ux ]
"254
[; ;main.c: 254:                             data_response_7byte[6] = crc_code_response[1];
[e = *U + &U _data_response_7byte * -> -> -> 6 `i `ui `ux -> -> # *U &U _data_response_7byte `ui `ux *U + &U _crc_code_response * -> -> -> 1 `i `ui `ux -> -> # *U &U _crc_code_response `ui `ux ]
"255
[; ;main.c: 255:                             if (UART_TX_Empty())
[e $ ! != -> ( _UART_TX_Empty ..  `i -> 0 `i 274  ]
"256
[; ;main.c: 256:                                 UART_Write_Text_Length(data_response_7byte, 7);
[e ( _UART_Write_Text_Length (2 , -> &U _data_response_7byte `*uc -> 7 `i ]
[e :U 274 ]
"258
[; ;main.c: 258:                             break;
[e $U 248  ]
"260
[; ;main.c: 260:                         default:
[e :U 275 ]
"261
[; ;main.c: 261:                             break;
[e $U 248  ]
"262
[; ;main.c: 262:                     }
}
[e $U 248  ]
[e :U 249 ]
[e [\ _address , $ -> -> 0 `i `ui 250
 , $ -> -> 4102 `i `ui 255
 , $ -> -> 4104 `i `ui 260
 , $ -> -> 4112 `i `ui 265
 , $ -> -> 8194 `i `ui 270
 275 ]
[e :U 248 ]
"263
[; ;main.c: 263:                 } else {
}
[e $U 276  ]
[e :U 247 ]
{
"264
[; ;main.c: 264:                     switch (address) {
[e $U 278  ]
{
"265
[; ;main.c: 265:                         case 0x1000:
[e :U 279 ]
"266
[; ;main.c: 266:                             for (i = 0; i < 2; i++) {
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 2 `i 280  ]
[e $U 281  ]
[e :U 280 ]
{
"267
[; ;main.c: 267:                                 EEPROM_Write(1000 + i, data[4 + i]);
[e ( _EEPROM_Write (2 , + -> 1000 `i -> _i `i -> *U + &U _data * -> -> + -> 4 `i -> _i `i `ui `ux -> -> # *U &U _data `ui `ux `uc ]
"268
[; ;main.c: 268:                             }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 2 `i 280  ]
[e :U 281 ]
}
"269
[; ;main.c: 269:                             data_response_8byte[3] = address;
[e = *U + &U _data_response_8byte * -> -> -> 3 `i `ui `ux -> -> # *U &U _data_response_8byte `ui `ux -> _address `uc ]
"270
[; ;main.c: 270:                             data_response_8byte[2] = (char) (address >> 8);
[e = *U + &U _data_response_8byte * -> -> -> 2 `i `ui `ux -> -> # *U &U _data_response_8byte `ui `ux -> -> >> _address -> 8 `i `uc `uc ]
"271
[; ;main.c: 271:                             for (i = 0; i < 2; i++) {
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 2 `i 283  ]
[e $U 284  ]
[e :U 283 ]
{
"272
[; ;main.c: 272:                                 data_response_8byte[4 + i] = EEPROM_Read(1000 + i);
[e = *U + &U _data_response_8byte * -> -> + -> 4 `i -> _i `i `ui `ux -> -> # *U &U _data_response_8byte `ui `ux -> ( _EEPROM_Read (1 + -> 1000 `i -> _i `i `uc ]
"274
[; ;main.c: 274:                             }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 2 `i 283  ]
[e :U 284 ]
}
"275
[; ;main.c: 275:                             CONVERT_Data_6Byte(data_response_8byte, crc_code_response);
[e ( _CONVERT_Data_6Byte (2 , -> &U _data_response_8byte `*uc &U _crc_code_response ]
"276
[; ;main.c: 276:                             data_response_8byte[6] = crc_code_response[0];
[e = *U + &U _data_response_8byte * -> -> -> 6 `i `ui `ux -> -> # *U &U _data_response_8byte `ui `ux *U + &U _crc_code_response * -> -> -> 0 `i `ui `ux -> -> # *U &U _crc_code_response `ui `ux ]
"277
[; ;main.c: 277:                             data_response_8byte[7] = crc_code_response[1];
[e = *U + &U _data_response_8byte * -> -> -> 7 `i `ui `ux -> -> # *U &U _data_response_8byte `ui `ux *U + &U _crc_code_response * -> -> -> 1 `i `ui `ux -> -> # *U &U _crc_code_response `ui `ux ]
"278
[; ;main.c: 278:                             if (UART_TX_Empty())
[e $ ! != -> ( _UART_TX_Empty ..  `i -> 0 `i 286  ]
"279
[; ;main.c: 279:                                 UART_Write_Text_Length(data_response_8byte, 8);
[e ( _UART_Write_Text_Length (2 , -> &U _data_response_8byte `*uc -> 8 `i ]
[e :U 286 ]
"281
[; ;main.c: 281:                             break;
[e $U 277  ]
"283
[; ;main.c: 283:                         case 0x1004:
[e :U 287 ]
"284
[; ;main.c: 284:                             for (i = 0; i < 2; i++) {
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 2 `i 288  ]
[e $U 289  ]
[e :U 288 ]
{
"285
[; ;main.c: 285:                                 EEPROM_Write(1004 + i, data[4 + i]);
[e ( _EEPROM_Write (2 , + -> 1004 `i -> _i `i -> *U + &U _data * -> -> + -> 4 `i -> _i `i `ui `ux -> -> # *U &U _data `ui `ux `uc ]
"286
[; ;main.c: 286:                             }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 2 `i 288  ]
[e :U 289 ]
}
"287
[; ;main.c: 287:                             data_response_8byte[3] = address;
[e = *U + &U _data_response_8byte * -> -> -> 3 `i `ui `ux -> -> # *U &U _data_response_8byte `ui `ux -> _address `uc ]
"288
[; ;main.c: 288:                             data_response_8byte[2] = (char) (address >> 8);
[e = *U + &U _data_response_8byte * -> -> -> 2 `i `ui `ux -> -> # *U &U _data_response_8byte `ui `ux -> -> >> _address -> 8 `i `uc `uc ]
"289
[; ;main.c: 289:                             for (i = 0; i < 2; i++) {
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 2 `i 291  ]
[e $U 292  ]
[e :U 291 ]
{
"290
[; ;main.c: 290:                                 data_response_8byte[4 + i] = EEPROM_Read(1004 + i);
[e = *U + &U _data_response_8byte * -> -> + -> 4 `i -> _i `i `ui `ux -> -> # *U &U _data_response_8byte `ui `ux -> ( _EEPROM_Read (1 + -> 1004 `i -> _i `i `uc ]
"292
[; ;main.c: 292:                             }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 2 `i 291  ]
[e :U 292 ]
}
"293
[; ;main.c: 293:                             CONVERT_Data_6Byte(data_response_8byte, crc_code_response);
[e ( _CONVERT_Data_6Byte (2 , -> &U _data_response_8byte `*uc &U _crc_code_response ]
"294
[; ;main.c: 294:                             data_response_8byte[6] = crc_code_response[0];
[e = *U + &U _data_response_8byte * -> -> -> 6 `i `ui `ux -> -> # *U &U _data_response_8byte `ui `ux *U + &U _crc_code_response * -> -> -> 0 `i `ui `ux -> -> # *U &U _crc_code_response `ui `ux ]
"295
[; ;main.c: 295:                             data_response_8byte[7] = crc_code_response[1];
[e = *U + &U _data_response_8byte * -> -> -> 7 `i `ui `ux -> -> # *U &U _data_response_8byte `ui `ux *U + &U _crc_code_response * -> -> -> 1 `i `ui `ux -> -> # *U &U _crc_code_response `ui `ux ]
"296
[; ;main.c: 296:                             if (UART_TX_Empty())
[e $ ! != -> ( _UART_TX_Empty ..  `i -> 0 `i 294  ]
"297
[; ;main.c: 297:                                 UART_Write_Text_Length(data_response_8byte, 8);
[e ( _UART_Write_Text_Length (2 , -> &U _data_response_8byte `*uc -> 8 `i ]
[e :U 294 ]
"299
[; ;main.c: 299:                             break;
[e $U 277  ]
"300
[; ;main.c: 300:                         case 0x1010:
[e :U 295 ]
"301
[; ;main.c: 301:                             for (i = 0; i < 2; i++) {
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 2 `i 296  ]
[e $U 297  ]
[e :U 296 ]
{
"302
[; ;main.c: 302:                                 EEPROM_Write(1010 + i, data[4 + i]);
[e ( _EEPROM_Write (2 , + -> 1010 `i -> _i `i -> *U + &U _data * -> -> + -> 4 `i -> _i `i `ui `ux -> -> # *U &U _data `ui `ux `uc ]
"303
[; ;main.c: 303:                             }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 2 `i 296  ]
[e :U 297 ]
}
"304
[; ;main.c: 304:                             data_response_8byte[3] = address;
[e = *U + &U _data_response_8byte * -> -> -> 3 `i `ui `ux -> -> # *U &U _data_response_8byte `ui `ux -> _address `uc ]
"305
[; ;main.c: 305:                             data_response_8byte[2] = (char) (address >> 8);
[e = *U + &U _data_response_8byte * -> -> -> 2 `i `ui `ux -> -> # *U &U _data_response_8byte `ui `ux -> -> >> _address -> 8 `i `uc `uc ]
"306
[; ;main.c: 306:                             for (i = 0; i < 2; i++) {
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 2 `i 299  ]
[e $U 300  ]
[e :U 299 ]
{
"307
[; ;main.c: 307:                                 data_response_8byte[4 + i] = EEPROM_Read(1010 + i);
[e = *U + &U _data_response_8byte * -> -> + -> 4 `i -> _i `i `ui `ux -> -> # *U &U _data_response_8byte `ui `ux -> ( _EEPROM_Read (1 + -> 1010 `i -> _i `i `uc ]
"309
[; ;main.c: 309:                             }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 2 `i 299  ]
[e :U 300 ]
}
"310
[; ;main.c: 310:                             CONVERT_Data_6Byte(data_response_8byte, crc_code_response);
[e ( _CONVERT_Data_6Byte (2 , -> &U _data_response_8byte `*uc &U _crc_code_response ]
"311
[; ;main.c: 311:                             data_response_8byte[6] = crc_code_response[0];
[e = *U + &U _data_response_8byte * -> -> -> 6 `i `ui `ux -> -> # *U &U _data_response_8byte `ui `ux *U + &U _crc_code_response * -> -> -> 0 `i `ui `ux -> -> # *U &U _crc_code_response `ui `ux ]
"312
[; ;main.c: 312:                             data_response_8byte[7] = crc_code_response[1];
[e = *U + &U _data_response_8byte * -> -> -> 7 `i `ui `ux -> -> # *U &U _data_response_8byte `ui `ux *U + &U _crc_code_response * -> -> -> 1 `i `ui `ux -> -> # *U &U _crc_code_response `ui `ux ]
"313
[; ;main.c: 313:                             if (UART_TX_Empty())
[e $ ! != -> ( _UART_TX_Empty ..  `i -> 0 `i 302  ]
"314
[; ;main.c: 314:                                 UART_Write_Text_Length(data_response_8byte, 8);
[e ( _UART_Write_Text_Length (2 , -> &U _data_response_8byte `*uc -> 8 `i ]
[e :U 302 ]
"316
[; ;main.c: 316:                             break;
[e $U 277  ]
"317
[; ;main.c: 317:                         case 0x2002:
[e :U 303 ]
"318
[; ;main.c: 318:                             for (i = 0; i < 2; i++) {
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 2 `i 304  ]
[e $U 305  ]
[e :U 304 ]
{
"319
[; ;main.c: 319:                                 EEPROM_Write(2002 + i, data[4 + i]);
[e ( _EEPROM_Write (2 , + -> 2002 `i -> _i `i -> *U + &U _data * -> -> + -> 4 `i -> _i `i `ui `ux -> -> # *U &U _data `ui `ux `uc ]
"320
[; ;main.c: 320:                             }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 2 `i 304  ]
[e :U 305 ]
}
"321
[; ;main.c: 321:                             data_response_8byte[0] = data[5];
[e = *U + &U _data_response_8byte * -> -> -> 0 `i `ui `ux -> -> # *U &U _data_response_8byte `ui `ux *U + &U _data * -> -> -> 5 `i `ui `ux -> -> # *U &U _data `ui `ux ]
"322
[; ;main.c: 322:                             data_response_8byte[3] = address;
[e = *U + &U _data_response_8byte * -> -> -> 3 `i `ui `ux -> -> # *U &U _data_response_8byte `ui `ux -> _address `uc ]
"323
[; ;main.c: 323:                             data_response_8byte[2] = (char) (address >> 8);
[e = *U + &U _data_response_8byte * -> -> -> 2 `i `ui `ux -> -> # *U &U _data_response_8byte `ui `ux -> -> >> _address -> 8 `i `uc `uc ]
"324
[; ;main.c: 324:                             for (i = 0; i < 2; i++) {
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 2 `i 307  ]
[e $U 308  ]
[e :U 307 ]
{
"325
[; ;main.c: 325:                                 data_response_8byte[4 + i] = EEPROM_Read(2002 + i);
[e = *U + &U _data_response_8byte * -> -> + -> 4 `i -> _i `i `ui `ux -> -> # *U &U _data_response_8byte `ui `ux -> ( _EEPROM_Read (1 + -> 2002 `i -> _i `i `uc ]
"327
[; ;main.c: 327:                             }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 2 `i 307  ]
[e :U 308 ]
}
"328
[; ;main.c: 328:                             CONVERT_Data_6Byte(data_response_8byte, crc_code_response);
[e ( _CONVERT_Data_6Byte (2 , -> &U _data_response_8byte `*uc &U _crc_code_response ]
"329
[; ;main.c: 329:                             data_response_8byte[6] = crc_code_response[0];
[e = *U + &U _data_response_8byte * -> -> -> 6 `i `ui `ux -> -> # *U &U _data_response_8byte `ui `ux *U + &U _crc_code_response * -> -> -> 0 `i `ui `ux -> -> # *U &U _crc_code_response `ui `ux ]
"330
[; ;main.c: 330:                             data_response_8byte[7] = crc_code_response[1];
[e = *U + &U _data_response_8byte * -> -> -> 7 `i `ui `ux -> -> # *U &U _data_response_8byte `ui `ux *U + &U _crc_code_response * -> -> -> 1 `i `ui `ux -> -> # *U &U _crc_code_response `ui `ux ]
"331
[; ;main.c: 331:                             if (UART_TX_Empty())
[e $ ! != -> ( _UART_TX_Empty ..  `i -> 0 `i 310  ]
"332
[; ;main.c: 332:                                 UART_Write_Text_Length(data_response_8byte, 8);
[e ( _UART_Write_Text_Length (2 , -> &U _data_response_8byte `*uc -> 8 `i ]
[e :U 310 ]
"333
[; ;main.c: 333:                             data_response_8byte[0] = 0x06;
[e = *U + &U _data_response_8byte * -> -> -> 0 `i `ui `ux -> -> # *U &U _data_response_8byte `ui `ux -> -> 6 `i `uc ]
"335
[; ;main.c: 335:                             break;
[e $U 277  ]
"336
[; ;main.c: 336:                         case 0x2020:
[e :U 311 ]
"337
[; ;main.c: 337:                             for (i = 0; i < 2; i++) {
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 2 `i 312  ]
[e $U 313  ]
[e :U 312 ]
{
"338
[; ;main.c: 338:                                 EEPROM_Write(2020 + i, data[4 + i]);
[e ( _EEPROM_Write (2 , + -> 2020 `i -> _i `i -> *U + &U _data * -> -> + -> 4 `i -> _i `i `ui `ux -> -> # *U &U _data `ui `ux `uc ]
"339
[; ;main.c: 339:                             }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 2 `i 312  ]
[e :U 313 ]
}
"341
[; ;main.c: 341:                             data_response_8byte[3] = address;
[e = *U + &U _data_response_8byte * -> -> -> 3 `i `ui `ux -> -> # *U &U _data_response_8byte `ui `ux -> _address `uc ]
"342
[; ;main.c: 342:                             data_response_8byte[2] = (char) (address >> 8);
[e = *U + &U _data_response_8byte * -> -> -> 2 `i `ui `ux -> -> # *U &U _data_response_8byte `ui `ux -> -> >> _address -> 8 `i `uc `uc ]
"343
[; ;main.c: 343:                             for (i = 0; i < 2; i++) {
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 2 `i 315  ]
[e $U 316  ]
[e :U 315 ]
{
"344
[; ;main.c: 344:                                 data_response_8byte[4 + i] = EEPROM_Read(2020 + i);
[e = *U + &U _data_response_8byte * -> -> + -> 4 `i -> _i `i `ui `ux -> -> # *U &U _data_response_8byte `ui `ux -> ( _EEPROM_Read (1 + -> 2020 `i -> _i `i `uc ]
"346
[; ;main.c: 346:                             }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 2 `i 315  ]
[e :U 316 ]
}
"347
[; ;main.c: 347:                             CONVERT_Data_6Byte(data_response_8byte, crc_code_response);
[e ( _CONVERT_Data_6Byte (2 , -> &U _data_response_8byte `*uc &U _crc_code_response ]
"348
[; ;main.c: 348:                             data_response_8byte[6] = crc_code_response[0];
[e = *U + &U _data_response_8byte * -> -> -> 6 `i `ui `ux -> -> # *U &U _data_response_8byte `ui `ux *U + &U _crc_code_response * -> -> -> 0 `i `ui `ux -> -> # *U &U _crc_code_response `ui `ux ]
"349
[; ;main.c: 349:                             data_response_8byte[7] = crc_code_response[1];
[e = *U + &U _data_response_8byte * -> -> -> 7 `i `ui `ux -> -> # *U &U _data_response_8byte `ui `ux *U + &U _crc_code_response * -> -> -> 1 `i `ui `ux -> -> # *U &U _crc_code_response `ui `ux ]
"350
[; ;main.c: 350:                             if (UART_TX_Empty())
[e $ ! != -> ( _UART_TX_Empty ..  `i -> 0 `i 318  ]
"351
[; ;main.c: 351:                                 UART_Write_Text_Length(data_response_8byte, 8);
[e ( _UART_Write_Text_Length (2 , -> &U _data_response_8byte `*uc -> 8 `i ]
[e :U 318 ]
"352
[; ;main.c: 352:                             break;
[e $U 277  ]
"353
[; ;main.c: 353:                         default:
[e :U 319 ]
"354
[; ;main.c: 354:                             break;
[e $U 277  ]
"355
[; ;main.c: 355:                     }
}
[e $U 277  ]
[e :U 278 ]
[e [\ _address , $ -> -> 4096 `i `ui 279
 , $ -> -> 4100 `i `ui 287
 , $ -> -> 4112 `i `ui 295
 , $ -> -> 8194 `i `ui 303
 , $ -> -> 8224 `i `ui 311
 319 ]
[e :U 277 ]
"356
[; ;main.c: 356:                 }
}
[e :U 276 ]
"358
[; ;main.c: 358:             }
}
[e :U 246 ]
"359
[; ;main.c: 359:         }
}
[e :U 245 ]
"360
[; ;main.c: 360:     }
}
[e :U 244 ]
"361
[; ;main.c: 361: }
[e :UE 243 ]
}
[v F1533 `(v ~T0 @X0 1 tf ]
"363
[; ;main.c: 363: __attribute__((inline)) static void config_interrupt() {
[v _config_interrupt `TF1533 ~T0 @X0 1 s ]
{
[e :U _config_interrupt ]
[f ]
"365
[; ;main.c: 365:     INTCON = 0xC0;
[e = _INTCON -> -> 192 `i `uc ]
"366
[; ;main.c: 366:     PIE1bits.RCIE = 1;
[e = . . _PIE1bits 0 5 -> -> 1 `i `uc ]
"367
[; ;main.c: 367: }
[e :UE 320 ]
}
[v $root$_main `(v ~T0 @X0 0 e ]
"369
[; ;main.c: 369: void main() {
[v _main `(v ~T0 @X0 1 ef ]
{
[e :U _main ]
[f ]
"375
[; ;main.c: 375:     EEPROM_Write(0000, 0x01);
[e ( _EEPROM_Write (2 , -> 0 `i -> -> 1 `i `uc ]
"376
[; ;main.c: 376:     EEPROM_Write(0001, 0x02);
[e ( _EEPROM_Write (2 , -> 1 `i -> -> 2 `i `uc ]
"377
[; ;main.c: 377:     EEPROM_Write(0002, 0x00);
[e ( _EEPROM_Write (2 , -> 2 `i -> -> 0 `i `uc ]
"378
[; ;main.c: 378:     EEPROM_Write(0003, 0x01);
[e ( _EEPROM_Write (2 , -> 3 `i -> -> 1 `i `uc ]
"379
[; ;main.c: 379:     EEPROM_Write(0004, 0x00);
[e ( _EEPROM_Write (2 , -> 4 `i -> -> 0 `i `uc ]
"380
[; ;main.c: 380:     EEPROM_Write(0005, 0xB0);
[e ( _EEPROM_Write (2 , -> 5 `i -> -> 176 `i `uc ]
"381
[; ;main.c: 381:     EEPROM_Write(0006, 0x00);
[e ( _EEPROM_Write (2 , -> 6 `i -> -> 0 `i `uc ]
"382
[; ;main.c: 382:     EEPROM_Write(0007, 0x01);
[e ( _EEPROM_Write (2 , -> 7 `i -> -> 1 `i `uc ]
"384
[; ;main.c: 384:     EEPROM_Write(1006, 0x00);
[e ( _EEPROM_Write (2 , -> 1006 `i -> -> 0 `i `uc ]
"385
[; ;main.c: 385:     EEPROM_Write(1007, 0x05);
[e ( _EEPROM_Write (2 , -> 1007 `i -> -> 5 `i `uc ]
"387
[; ;main.c: 387:     EEPROM_Write(1008, 0x04);
[e ( _EEPROM_Write (2 , -> 1008 `i -> -> 4 `i `uc ]
"388
[; ;main.c: 388:     EEPROM_Write(1009, 0x12);
[e ( _EEPROM_Write (2 , -> 1009 `i -> -> 18 `i `uc ]
"390
[; ;main.c: 390:     EEPROM_Write(1010, 0x06);
[e ( _EEPROM_Write (2 , -> 1010 `i -> -> 6 `i `uc ]
"391
[; ;main.c: 391:     EEPROM_Write(1011, 0x00);
[e ( _EEPROM_Write (2 , -> 1011 `i -> -> 0 `i `uc ]
"393
[; ;main.c: 393:     EEPROM_Write(2002, 0x02);
[e ( _EEPROM_Write (2 , -> 2002 `i -> -> 2 `i `uc ]
"394
[; ;main.c: 394:     EEPROM_Write(2003, 0x40);
[e ( _EEPROM_Write (2 , -> 2003 `i -> -> 64 `i `uc ]
"397
[; ;main.c: 397:     EEPROM_Write(1000, 0x40);
[e ( _EEPROM_Write (2 , -> 1000 `i -> -> 64 `i `uc ]
"398
[; ;main.c: 398:     EEPROM_Write(1001, 0x40);
[e ( _EEPROM_Write (2 , -> 1001 `i -> -> 64 `i `uc ]
"400
[; ;main.c: 400:     EEPROM_Write(1004, 0x05);
[e ( _EEPROM_Write (2 , -> 1004 `i -> -> 5 `i `uc ]
"401
[; ;main.c: 401:     EEPROM_Write(1005, 0x40);
[e ( _EEPROM_Write (2 , -> 1005 `i -> -> 64 `i `uc ]
"403
[; ;main.c: 403:     EEPROM_Write(2020, 0x00);
[e ( _EEPROM_Write (2 , -> 2020 `i -> -> 0 `i `uc ]
"404
[; ;main.c: 404:     EEPROM_Write(2021, 0x25);
[e ( _EEPROM_Write (2 , -> 2021 `i -> -> 37 `i `uc ]
"406
[; ;main.c: 406:     UART_Init(9600);
[e ( _UART_Init (1 -> -> 9600 `i `l ]
"407
[; ;main.c: 407:     config_interrupt();
[e ( _config_interrupt ..  ]
"409
[; ;main.c: 409:     while (1) {
[e :U 323 ]
{
"411
[; ;main.c: 411:     }
}
[e :U 322 ]
[e $U 323  ]
[e :U 324 ]
"413
[; ;main.c: 413: }
[e :UE 321 ]
}
