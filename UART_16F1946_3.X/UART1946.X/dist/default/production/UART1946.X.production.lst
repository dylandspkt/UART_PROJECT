

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Tue Mar 15 13:26:11 2022

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F1946 Definitions
    37                           ; 
    38  0008                     fsr0h equ 05h
    39  0005                     fsr0l equ 04h
    40  0004                     fsr1h equ 07h
    41  0007                     fsr1l equ 06h
    42  0006                     indf equ 00h
    43  0000                     indf0 equ 00h
    44  0000                     indf1 equ 01h
    45  0001                     intcon equ 0Bh
    46  000B                     pc equ 02h
    47  0002                     pcl equ 02h
    48  0002                     pclath equ 0Ah
    49  000A                     status equ 03h
    50  0003                     wreg equ 09h
    51  0009                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     pushw	macro
    88                           	movwi fsr1++
    89                           	endm
    90  0000                     popw	macro
    91                           	moviw --fsr1
    92                           	endm
    93  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
    94                           INDF0 equ 00h ;# 
    95  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
    96                           INDF1 equ 01h ;# 
    97  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
    98                           PCL equ 02h ;# 
    99  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   100                           STATUS equ 03h ;# 
   101  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   102                           FSR0L equ 04h ;# 
   103  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   104                           FSR0H equ 05h ;# 
   105  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   106                           FSR1L equ 06h ;# 
   107  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   108                           FSR1H equ 07h ;# 
   109  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   110                           BSR equ 08h ;# 
   111  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   112                           WREG equ 09h ;# 
   113  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   114                           PCLATH equ 0Ah ;# 
   115  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   116                           INTCON equ 0Bh ;# 
   117  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   118                           PORTA equ 0Ch ;# 
   119  000C                     # 658 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   120                           PORTB equ 0Dh ;# 
   121  000D                     # 793 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   122                           PORTC equ 0Eh ;# 
   123  000E                     # 1010 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   124                           PORTD equ 0Fh ;# 
   125  000F                     # 1208 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   126                           PORTE equ 010h ;# 
   127  0010                     # 1379 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   128                           PIR1 equ 011h ;# 
   129  0011                     # 1462 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   130                           PIR2 equ 012h ;# 
   131  0012                     # 1524 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   132                           PIR3 equ 013h ;# 
   133  0013                     # 1570 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   134                           PIR4 equ 014h ;# 
   135  0014                     # 1609 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   136                           TMR0 equ 015h ;# 
   137  0015                     # 1629 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   138                           TMR1 equ 016h ;# 
   139  0016                     # 1636 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   140                           TMR1L equ 016h ;# 
   141  0016                     # 1656 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   142                           TMR1H equ 017h ;# 
   143  0017                     # 1676 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   144                           T1CON equ 018h ;# 
   145  0018                     # 1748 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   146                           T1GCON equ 019h ;# 
   147  0019                     # 1825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   148                           TMR2 equ 01Ah ;# 
   149  001A                     # 1845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   150                           PR2 equ 01Bh ;# 
   151  001B                     # 1865 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   152                           T2CON equ 01Ch ;# 
   153  001C                     # 1936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   154                           CPSCON0 equ 01Eh ;# 
   155  001E                     # 1996 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   156                           CPSCON1 equ 01Fh ;# 
   157  001F                     # 2048 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   158                           TRISA equ 08Ch ;# 
   159  008C                     # 2110 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   160                           TRISB equ 08Dh ;# 
   161  008D                     # 2172 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   162                           TRISC equ 08Eh ;# 
   163  008E                     # 2234 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   164                           TRISD equ 08Fh ;# 
   165  008F                     # 2296 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   166                           TRISE equ 090h ;# 
   167  0090                     # 2358 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   168                           PIE1 equ 091h ;# 
   169  0091                     # 2441 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   170                           PIE2 equ 092h ;# 
   171  0092                     # 2503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   172                           PIE3 equ 093h ;# 
   173  0093                     # 2549 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   174                           PIE4 equ 094h ;# 
   175  0094                     # 2588 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   176                           OPTION_REG equ 095h ;# 
   177  0095                     # 2671 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   178                           PCON equ 096h ;# 
   179  0096                     # 2722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   180                           WDTCON equ 097h ;# 
   181  0097                     # 2781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   182                           OSCTUNE equ 098h ;# 
   183  0098                     # 2839 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   184                           OSCCON equ 099h ;# 
   185  0099                     # 2911 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   186                           OSCSTAT equ 09Ah ;# 
   187  009A                     # 2973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   188                           ADRES equ 09Bh ;# 
   189  009B                     # 2980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   190                           ADRESL equ 09Bh ;# 
   191  009B                     # 3000 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   192                           ADRESH equ 09Ch ;# 
   193  009C                     # 3020 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   194                           ADCON0 equ 09Dh ;# 
   195  009D                     # 3109 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   196                           ADCON1 equ 09Eh ;# 
   197  009E                     # 3181 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   198                           LATA equ 010Ch ;# 
   199  010C                     # 3243 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   200                           LATB equ 010Dh ;# 
   201  010D                     # 3305 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   202                           LATC equ 010Eh ;# 
   203  010E                     # 3367 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   204                           LATD equ 010Fh ;# 
   205  010F                     # 3437 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   206                           LATE equ 0110h ;# 
   207  0110                     # 3499 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   208                           CM1CON0 equ 0111h ;# 
   209  0111                     # 3556 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   210                           CM1CON1 equ 0112h ;# 
   211  0112                     # 3622 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   212                           CM2CON0 equ 0113h ;# 
   213  0113                     # 3679 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   214                           CM2CON1 equ 0114h ;# 
   215  0114                     # 3745 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   216                           CMOUT equ 0115h ;# 
   217  0115                     # 3777 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   218                           BORCON equ 0116h ;# 
   219  0116                     # 3804 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   220                           FVRCON equ 0117h ;# 
   221  0117                     # 3870 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   222                           DACCON0 equ 0118h ;# 
   223  0118                     # 3931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   224                           DACCON1 equ 0119h ;# 
   225  0119                     # 3983 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   226                           SRCON0 equ 011Ah ;# 
   227  011A                     # 4054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   228                           SRCON1 equ 011Bh ;# 
   229  011B                     # 4116 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   230                           APFCON equ 011Dh ;# 
   231  011D                     # 4178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   232                           CM3CON0 equ 011Eh ;# 
   233  011E                     # 4235 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   234                           CM3CON1 equ 011Fh ;# 
   235  011F                     # 4301 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   236                           ANSELA equ 018Ch ;# 
   237  018C                     # 4354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   238                           ANSELE equ 0190h ;# 
   239  0190                     # 4394 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   240                           EEADR equ 0191h ;# 
   241  0191                     # 4401 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   242                           EEADRL equ 0191h ;# 
   243  0191                     # 4421 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   244                           EEADRH equ 0192h ;# 
   245  0192                     # 4441 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   246                           EEDAT equ 0193h ;# 
   247  0193                     # 4448 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   248                           EEDATL equ 0193h ;# 
   249  0193                     # 4453 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   250                           EEDATA equ 0193h ;# 
   251  0193                     # 4486 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   252                           EEDATH equ 0194h ;# 
   253  0194                     # 4506 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   254                           EECON1 equ 0195h ;# 
   255  0195                     # 4568 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   256                           EECON2 equ 0196h ;# 
   257  0196                     # 4588 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   258                           RC1REG equ 0199h ;# 
   259  0199                     # 4593 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   260                           RCREG equ 0199h ;# 
   261  0199                     # 4626 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   262                           TX1REG equ 019Ah ;# 
   263  019A                     # 4631 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   264                           TXREG equ 019Ah ;# 
   265  019A                     # 4664 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   266                           SP1BRG equ 019Bh ;# 
   267  019B                     # 4671 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   268                           SP1BRGL equ 019Bh ;# 
   269  019B                     # 4676 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   270                           SPBRG equ 019Bh ;# 
   271  019B                     # 4680 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   272                           SPBRGL equ 019Bh ;# 
   273  019B                     # 4725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   274                           SP1BRGH equ 019Ch ;# 
   275  019C                     # 4730 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   276                           SPBRGH equ 019Ch ;# 
   277  019C                     # 4763 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   278                           RC1STA equ 019Dh ;# 
   279  019D                     # 4768 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   280                           RCSTA equ 019Dh ;# 
   281  019D                     # 4885 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   282                           TX1STA equ 019Eh ;# 
   283  019E                     # 4890 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   284                           TXSTA equ 019Eh ;# 
   285  019E                     # 5007 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   286                           BAUD1CON equ 019Fh ;# 
   287  019F                     # 5059 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   288                           WPUB equ 020Dh ;# 
   289  020D                     # 5129 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   290                           SSP1BUF equ 0211h ;# 
   291  0211                     # 5134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   292                           SSPBUF equ 0211h ;# 
   293  0211                     # 5167 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   294                           SSP1ADD equ 0212h ;# 
   295  0212                     # 5172 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   296                           SSPADD equ 0212h ;# 
   297  0212                     # 5205 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   298                           SSP1MSK equ 0213h ;# 
   299  0213                     # 5210 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   300                           SSPMSK equ 0213h ;# 
   301  0213                     # 5243 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   302                           SSP1STAT equ 0214h ;# 
   303  0214                     # 5248 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   304                           SSPSTAT equ 0214h ;# 
   305  0214                     # 5365 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   306                           SSP1CON1 equ 0215h ;# 
   307  0215                     # 5370 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   308                           SSPCON equ 0215h ;# 
   309  0215                     # 5374 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   310                           SSPCON1 equ 0215h ;# 
   311  0215                     # 5545 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   312                           SSP1CON2 equ 0216h ;# 
   313  0216                     # 5550 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   314                           SSPCON2 equ 0216h ;# 
   315  0216                     # 5667 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   316                           SSP1CON3 equ 0217h ;# 
   317  0217                     # 5672 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   318                           SSPCON3 equ 0217h ;# 
   319  0217                     # 5789 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   320                           SSP2BUF equ 0219h ;# 
   321  0219                     # 5809 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   322                           SSP2ADD equ 021Ah ;# 
   323  021A                     # 5829 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   324                           SSP2MSK equ 021Bh ;# 
   325  021B                     # 5849 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   326                           SSP2STAT equ 021Ch ;# 
   327  021C                     # 5911 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   328                           SSP2CON1 equ 021Dh ;# 
   329  021D                     # 5973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   330                           SSP2CON2 equ 021Eh ;# 
   331  021E                     # 6035 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   332                           SSP2CON3 equ 021Fh ;# 
   333  021F                     # 6097 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   334                           PORTF equ 028Ch ;# 
   335  028C                     # 6422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   336                           PORTG equ 028Dh ;# 
   337  028D                     # 6655 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   338                           CCPR1 equ 0291h ;# 
   339  0291                     # 6662 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   340                           CCPR1L equ 0291h ;# 
   341  0291                     # 6682 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   342                           CCPR1H equ 0292h ;# 
   343  0292                     # 6702 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   344                           CCP1CON equ 0293h ;# 
   345  0293                     # 6784 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   346                           PWM1CON equ 0294h ;# 
   347  0294                     # 6846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   348                           CCP1AS equ 0295h ;# 
   349  0295                     # 6851 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   350                           ECCP1AS equ 0295h ;# 
   351  0295                     # 6968 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   352                           PSTR1CON equ 0296h ;# 
   353  0296                     # 7012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   354                           CCPR2 equ 0298h ;# 
   355  0298                     # 7019 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   356                           CCPR2L equ 0298h ;# 
   357  0298                     # 7039 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   358                           CCPR2H equ 0299h ;# 
   359  0299                     # 7059 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   360                           CCP2CON equ 029Ah ;# 
   361  029A                     # 7141 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   362                           PWM2CON equ 029Bh ;# 
   363  029B                     # 7203 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   364                           CCP2AS equ 029Ch ;# 
   365  029C                     # 7208 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   366                           ECCP2AS equ 029Ch ;# 
   367  029C                     # 7325 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   368                           PSTR2CON equ 029Dh ;# 
   369  029D                     # 7369 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   370                           CCPTMRS0 equ 029Eh ;# 
   371  029E                     # 7457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   372                           CCPTMRS1 equ 029Fh ;# 
   373  029F                     # 7491 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   374                           TRISF equ 030Ch ;# 
   375  030C                     # 7553 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   376                           TRISG equ 030Dh ;# 
   377  030D                     # 7603 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   378                           CCPR3 equ 0311h ;# 
   379  0311                     # 7610 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   380                           CCPR3L equ 0311h ;# 
   381  0311                     # 7630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   382                           CCPR3H equ 0312h ;# 
   383  0312                     # 7650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   384                           CCP3CON equ 0313h ;# 
   385  0313                     # 7712 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   386                           PWM3CON equ 0314h ;# 
   387  0314                     # 7774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   388                           CCP3AS equ 0315h ;# 
   389  0315                     # 7779 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   390                           ECCP3AS equ 0315h ;# 
   391  0315                     # 7896 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   392                           PSTR3CON equ 0316h ;# 
   393  0316                     # 7940 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   394                           CCPR4 equ 0318h ;# 
   395  0318                     # 7947 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   396                           CCPR4L equ 0318h ;# 
   397  0318                     # 7967 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   398                           CCPR4H equ 0319h ;# 
   399  0319                     # 7987 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   400                           CCP4CON equ 031Ah ;# 
   401  031A                     # 8037 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   402                           CCPR5 equ 031Ch ;# 
   403  031C                     # 8044 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   404                           CCPR5L equ 031Ch ;# 
   405  031C                     # 8064 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   406                           CCPR5H equ 031Dh ;# 
   407  031D                     # 8084 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   408                           CCP5CON equ 031Eh ;# 
   409  031E                     # 8134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   410                           LATF equ 038Ch ;# 
   411  038C                     # 8196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   412                           LATG equ 038Dh ;# 
   413  038D                     # 8246 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   414                           IOCBP equ 0394h ;# 
   415  0394                     # 8316 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   416                           IOCBN equ 0395h ;# 
   417  0395                     # 8386 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   418                           IOCBF equ 0396h ;# 
   419  0396                     # 8456 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   420                           ANSELF equ 040Ch ;# 
   421  040C                     # 8526 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   422                           ANSELG equ 040Dh ;# 
   423  040D                     # 8574 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   424                           TMR4 equ 0415h ;# 
   425  0415                     # 8594 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   426                           PR4 equ 0416h ;# 
   427  0416                     # 8614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   428                           T4CON equ 0417h ;# 
   429  0417                     # 8685 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   430                           TMR6 equ 041Ch ;# 
   431  041C                     # 8705 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   432                           PR6 equ 041Dh ;# 
   433  041D                     # 8725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   434                           T6CON equ 041Eh ;# 
   435  041E                     # 8796 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   436                           WPUG equ 048Dh ;# 
   437  048D                     # 8817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   438                           RC2REG equ 0491h ;# 
   439  0491                     # 8837 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   440                           TX2REG equ 0492h ;# 
   441  0492                     # 8857 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   442                           SP2BRGL equ 0493h ;# 
   443  0493                     # 8862 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   444                           SPBRG2 equ 0493h ;# 
   445  0493                     # 8895 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   446                           SP2BRGH equ 0494h ;# 
   447  0494                     # 8915 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   448                           RC2STA equ 0495h ;# 
   449  0495                     # 8977 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   450                           TX2STA equ 0496h ;# 
   451  0496                     # 9039 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   452                           BAUD2CON equ 0497h ;# 
   453  0497                     # 9091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   454                           LCDCON equ 0791h ;# 
   455  0791                     # 9162 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   456                           LCDPS equ 0792h ;# 
   457  0792                     # 9232 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   458                           LCDREF equ 0793h ;# 
   459  0793                     # 9284 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   460                           LCDCST equ 0794h ;# 
   461  0794                     # 9324 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   462                           LCDRL equ 0795h ;# 
   463  0795                     # 9402 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   464                           LCDSE0 equ 0798h ;# 
   465  0798                     # 9464 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   466                           LCDSE1 equ 0799h ;# 
   467  0799                     # 9526 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   468                           LCDSE2 equ 079Ah ;# 
   469  079A                     # 9588 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   470                           LCDSE3 equ 079Bh ;# 
   471  079B                     # 9650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   472                           LCDSE4 equ 079Ch ;# 
   473  079C                     # 9712 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   474                           LCDSE5 equ 079Dh ;# 
   475  079D                     # 9762 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   476                           LCDDATA0 equ 07A0h ;# 
   477  07A0                     # 9824 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   478                           LCDDATA1 equ 07A1h ;# 
   479  07A1                     # 9886 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   480                           LCDDATA2 equ 07A2h ;# 
   481  07A2                     # 9948 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   482                           LCDDATA3 equ 07A3h ;# 
   483  07A3                     # 10010 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   484                           LCDDATA4 equ 07A4h ;# 
   485  07A4                     # 10072 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   486                           LCDDATA5 equ 07A5h ;# 
   487  07A5                     # 10134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   488                           LCDDATA6 equ 07A6h ;# 
   489  07A6                     # 10196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   490                           LCDDATA7 equ 07A7h ;# 
   491  07A7                     # 10258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   492                           LCDDATA8 equ 07A8h ;# 
   493  07A8                     # 10320 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   494                           LCDDATA9 equ 07A9h ;# 
   495  07A9                     # 10382 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   496                           LCDDATA10 equ 07AAh ;# 
   497  07AA                     # 10444 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   498                           LCDDATA11 equ 07ABh ;# 
   499  07AB                     # 10506 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   500                           LCDDATA12 equ 07ACh ;# 
   501  07AC                     # 10568 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   502                           LCDDATA13 equ 07ADh ;# 
   503  07AD                     # 10630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   504                           LCDDATA14 equ 07AEh ;# 
   505  07AE                     # 10680 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   506                           LCDDATA15 equ 07AFh ;# 
   507  07AF                     # 10742 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   508                           LCDDATA16 equ 07B0h ;# 
   509  07B0                     # 10804 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   510                           LCDDATA17 equ 07B1h ;# 
   511  07B1                     # 10854 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   512                           LCDDATA18 equ 07B2h ;# 
   513  07B2                     # 10916 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   514                           LCDDATA19 equ 07B3h ;# 
   515  07B3                     # 10978 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   516                           LCDDATA20 equ 07B4h ;# 
   517  07B4                     # 11028 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   518                           LCDDATA21 equ 07B5h ;# 
   519  07B5                     # 11090 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   520                           LCDDATA22 equ 07B6h ;# 
   521  07B6                     # 11152 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   522                           LCDDATA23 equ 07B7h ;# 
   523  07B7                     # 11202 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   524                           STATUS_SHAD equ 0FE4h ;# 
   525  0FE4                     # 11234 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   526                           WREG_SHAD equ 0FE5h ;# 
   527  0FE5                     # 11254 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   528                           BSR_SHAD equ 0FE6h ;# 
   529  0FE6                     # 11274 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   530                           PCLATH_SHAD equ 0FE7h ;# 
   531  0FE7                     # 11294 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   532                           FSR0L_SHAD equ 0FE8h ;# 
   533  0FE8                     # 11314 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   534                           FSR0H_SHAD equ 0FE9h ;# 
   535  0FE9                     # 11334 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   536                           FSR1L_SHAD equ 0FEAh ;# 
   537  0FEA                     # 11354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   538                           FSR1H_SHAD equ 0FEBh ;# 
   539  0FEB                     # 11374 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   540                           STKPTR equ 0FEDh ;# 
   541  0FED                     # 11394 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   542                           TOSL equ 0FEEh ;# 
   543  0FEE                     # 11414 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   544                           TOSH equ 0FEFh ;# 
   545  0FEF                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   546                           INDF0 equ 00h ;# 
   547  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   548                           INDF1 equ 01h ;# 
   549  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   550                           PCL equ 02h ;# 
   551  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   552                           STATUS equ 03h ;# 
   553  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   554                           FSR0L equ 04h ;# 
   555  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   556                           FSR0H equ 05h ;# 
   557  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   558                           FSR1L equ 06h ;# 
   559  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   560                           FSR1H equ 07h ;# 
   561  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   562                           BSR equ 08h ;# 
   563  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   564                           WREG equ 09h ;# 
   565  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   566                           PCLATH equ 0Ah ;# 
   567  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   568                           INTCON equ 0Bh ;# 
   569  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   570                           PORTA equ 0Ch ;# 
   571  000C                     # 658 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   572                           PORTB equ 0Dh ;# 
   573  000D                     # 793 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   574                           PORTC equ 0Eh ;# 
   575  000E                     # 1010 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   576                           PORTD equ 0Fh ;# 
   577  000F                     # 1208 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   578                           PORTE equ 010h ;# 
   579  0010                     # 1379 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   580                           PIR1 equ 011h ;# 
   581  0011                     # 1462 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   582                           PIR2 equ 012h ;# 
   583  0012                     # 1524 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   584                           PIR3 equ 013h ;# 
   585  0013                     # 1570 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   586                           PIR4 equ 014h ;# 
   587  0014                     # 1609 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   588                           TMR0 equ 015h ;# 
   589  0015                     # 1629 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   590                           TMR1 equ 016h ;# 
   591  0016                     # 1636 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   592                           TMR1L equ 016h ;# 
   593  0016                     # 1656 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   594                           TMR1H equ 017h ;# 
   595  0017                     # 1676 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   596                           T1CON equ 018h ;# 
   597  0018                     # 1748 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   598                           T1GCON equ 019h ;# 
   599  0019                     # 1825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   600                           TMR2 equ 01Ah ;# 
   601  001A                     # 1845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   602                           PR2 equ 01Bh ;# 
   603  001B                     # 1865 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   604                           T2CON equ 01Ch ;# 
   605  001C                     # 1936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   606                           CPSCON0 equ 01Eh ;# 
   607  001E                     # 1996 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   608                           CPSCON1 equ 01Fh ;# 
   609  001F                     # 2048 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   610                           TRISA equ 08Ch ;# 
   611  008C                     # 2110 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   612                           TRISB equ 08Dh ;# 
   613  008D                     # 2172 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   614                           TRISC equ 08Eh ;# 
   615  008E                     # 2234 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   616                           TRISD equ 08Fh ;# 
   617  008F                     # 2296 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   618                           TRISE equ 090h ;# 
   619  0090                     # 2358 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   620                           PIE1 equ 091h ;# 
   621  0091                     # 2441 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   622                           PIE2 equ 092h ;# 
   623  0092                     # 2503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   624                           PIE3 equ 093h ;# 
   625  0093                     # 2549 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   626                           PIE4 equ 094h ;# 
   627  0094                     # 2588 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   628                           OPTION_REG equ 095h ;# 
   629  0095                     # 2671 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   630                           PCON equ 096h ;# 
   631  0096                     # 2722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   632                           WDTCON equ 097h ;# 
   633  0097                     # 2781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   634                           OSCTUNE equ 098h ;# 
   635  0098                     # 2839 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   636                           OSCCON equ 099h ;# 
   637  0099                     # 2911 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   638                           OSCSTAT equ 09Ah ;# 
   639  009A                     # 2973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   640                           ADRES equ 09Bh ;# 
   641  009B                     # 2980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   642                           ADRESL equ 09Bh ;# 
   643  009B                     # 3000 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   644                           ADRESH equ 09Ch ;# 
   645  009C                     # 3020 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   646                           ADCON0 equ 09Dh ;# 
   647  009D                     # 3109 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   648                           ADCON1 equ 09Eh ;# 
   649  009E                     # 3181 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   650                           LATA equ 010Ch ;# 
   651  010C                     # 3243 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   652                           LATB equ 010Dh ;# 
   653  010D                     # 3305 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   654                           LATC equ 010Eh ;# 
   655  010E                     # 3367 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   656                           LATD equ 010Fh ;# 
   657  010F                     # 3437 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   658                           LATE equ 0110h ;# 
   659  0110                     # 3499 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   660                           CM1CON0 equ 0111h ;# 
   661  0111                     # 3556 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   662                           CM1CON1 equ 0112h ;# 
   663  0112                     # 3622 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   664                           CM2CON0 equ 0113h ;# 
   665  0113                     # 3679 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   666                           CM2CON1 equ 0114h ;# 
   667  0114                     # 3745 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   668                           CMOUT equ 0115h ;# 
   669  0115                     # 3777 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   670                           BORCON equ 0116h ;# 
   671  0116                     # 3804 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   672                           FVRCON equ 0117h ;# 
   673  0117                     # 3870 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   674                           DACCON0 equ 0118h ;# 
   675  0118                     # 3931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   676                           DACCON1 equ 0119h ;# 
   677  0119                     # 3983 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   678                           SRCON0 equ 011Ah ;# 
   679  011A                     # 4054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   680                           SRCON1 equ 011Bh ;# 
   681  011B                     # 4116 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   682                           APFCON equ 011Dh ;# 
   683  011D                     # 4178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   684                           CM3CON0 equ 011Eh ;# 
   685  011E                     # 4235 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   686                           CM3CON1 equ 011Fh ;# 
   687  011F                     # 4301 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   688                           ANSELA equ 018Ch ;# 
   689  018C                     # 4354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   690                           ANSELE equ 0190h ;# 
   691  0190                     # 4394 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   692                           EEADR equ 0191h ;# 
   693  0191                     # 4401 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   694                           EEADRL equ 0191h ;# 
   695  0191                     # 4421 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   696                           EEADRH equ 0192h ;# 
   697  0192                     # 4441 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   698                           EEDAT equ 0193h ;# 
   699  0193                     # 4448 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   700                           EEDATL equ 0193h ;# 
   701  0193                     # 4453 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   702                           EEDATA equ 0193h ;# 
   703  0193                     # 4486 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   704                           EEDATH equ 0194h ;# 
   705  0194                     # 4506 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   706                           EECON1 equ 0195h ;# 
   707  0195                     # 4568 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   708                           EECON2 equ 0196h ;# 
   709  0196                     # 4588 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   710                           RC1REG equ 0199h ;# 
   711  0199                     # 4593 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   712                           RCREG equ 0199h ;# 
   713  0199                     # 4626 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   714                           TX1REG equ 019Ah ;# 
   715  019A                     # 4631 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   716                           TXREG equ 019Ah ;# 
   717  019A                     # 4664 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   718                           SP1BRG equ 019Bh ;# 
   719  019B                     # 4671 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   720                           SP1BRGL equ 019Bh ;# 
   721  019B                     # 4676 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   722                           SPBRG equ 019Bh ;# 
   723  019B                     # 4680 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   724                           SPBRGL equ 019Bh ;# 
   725  019B                     # 4725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   726                           SP1BRGH equ 019Ch ;# 
   727  019C                     # 4730 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   728                           SPBRGH equ 019Ch ;# 
   729  019C                     # 4763 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   730                           RC1STA equ 019Dh ;# 
   731  019D                     # 4768 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   732                           RCSTA equ 019Dh ;# 
   733  019D                     # 4885 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   734                           TX1STA equ 019Eh ;# 
   735  019E                     # 4890 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   736                           TXSTA equ 019Eh ;# 
   737  019E                     # 5007 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   738                           BAUD1CON equ 019Fh ;# 
   739  019F                     # 5059 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   740                           WPUB equ 020Dh ;# 
   741  020D                     # 5129 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   742                           SSP1BUF equ 0211h ;# 
   743  0211                     # 5134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   744                           SSPBUF equ 0211h ;# 
   745  0211                     # 5167 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   746                           SSP1ADD equ 0212h ;# 
   747  0212                     # 5172 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   748                           SSPADD equ 0212h ;# 
   749  0212                     # 5205 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   750                           SSP1MSK equ 0213h ;# 
   751  0213                     # 5210 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   752                           SSPMSK equ 0213h ;# 
   753  0213                     # 5243 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   754                           SSP1STAT equ 0214h ;# 
   755  0214                     # 5248 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   756                           SSPSTAT equ 0214h ;# 
   757  0214                     # 5365 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   758                           SSP1CON1 equ 0215h ;# 
   759  0215                     # 5370 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   760                           SSPCON equ 0215h ;# 
   761  0215                     # 5374 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   762                           SSPCON1 equ 0215h ;# 
   763  0215                     # 5545 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   764                           SSP1CON2 equ 0216h ;# 
   765  0216                     # 5550 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   766                           SSPCON2 equ 0216h ;# 
   767  0216                     # 5667 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   768                           SSP1CON3 equ 0217h ;# 
   769  0217                     # 5672 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   770                           SSPCON3 equ 0217h ;# 
   771  0217                     # 5789 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   772                           SSP2BUF equ 0219h ;# 
   773  0219                     # 5809 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   774                           SSP2ADD equ 021Ah ;# 
   775  021A                     # 5829 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   776                           SSP2MSK equ 021Bh ;# 
   777  021B                     # 5849 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   778                           SSP2STAT equ 021Ch ;# 
   779  021C                     # 5911 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   780                           SSP2CON1 equ 021Dh ;# 
   781  021D                     # 5973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   782                           SSP2CON2 equ 021Eh ;# 
   783  021E                     # 6035 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   784                           SSP2CON3 equ 021Fh ;# 
   785  021F                     # 6097 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   786                           PORTF equ 028Ch ;# 
   787  028C                     # 6422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   788                           PORTG equ 028Dh ;# 
   789  028D                     # 6655 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   790                           CCPR1 equ 0291h ;# 
   791  0291                     # 6662 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   792                           CCPR1L equ 0291h ;# 
   793  0291                     # 6682 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   794                           CCPR1H equ 0292h ;# 
   795  0292                     # 6702 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   796                           CCP1CON equ 0293h ;# 
   797  0293                     # 6784 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   798                           PWM1CON equ 0294h ;# 
   799  0294                     # 6846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   800                           CCP1AS equ 0295h ;# 
   801  0295                     # 6851 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   802                           ECCP1AS equ 0295h ;# 
   803  0295                     # 6968 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   804                           PSTR1CON equ 0296h ;# 
   805  0296                     # 7012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   806                           CCPR2 equ 0298h ;# 
   807  0298                     # 7019 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   808                           CCPR2L equ 0298h ;# 
   809  0298                     # 7039 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   810                           CCPR2H equ 0299h ;# 
   811  0299                     # 7059 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   812                           CCP2CON equ 029Ah ;# 
   813  029A                     # 7141 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   814                           PWM2CON equ 029Bh ;# 
   815  029B                     # 7203 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   816                           CCP2AS equ 029Ch ;# 
   817  029C                     # 7208 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   818                           ECCP2AS equ 029Ch ;# 
   819  029C                     # 7325 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   820                           PSTR2CON equ 029Dh ;# 
   821  029D                     # 7369 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   822                           CCPTMRS0 equ 029Eh ;# 
   823  029E                     # 7457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   824                           CCPTMRS1 equ 029Fh ;# 
   825  029F                     # 7491 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   826                           TRISF equ 030Ch ;# 
   827  030C                     # 7553 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   828                           TRISG equ 030Dh ;# 
   829  030D                     # 7603 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   830                           CCPR3 equ 0311h ;# 
   831  0311                     # 7610 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   832                           CCPR3L equ 0311h ;# 
   833  0311                     # 7630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   834                           CCPR3H equ 0312h ;# 
   835  0312                     # 7650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   836                           CCP3CON equ 0313h ;# 
   837  0313                     # 7712 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   838                           PWM3CON equ 0314h ;# 
   839  0314                     # 7774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   840                           CCP3AS equ 0315h ;# 
   841  0315                     # 7779 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   842                           ECCP3AS equ 0315h ;# 
   843  0315                     # 7896 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   844                           PSTR3CON equ 0316h ;# 
   845  0316                     # 7940 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   846                           CCPR4 equ 0318h ;# 
   847  0318                     # 7947 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   848                           CCPR4L equ 0318h ;# 
   849  0318                     # 7967 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   850                           CCPR4H equ 0319h ;# 
   851  0319                     # 7987 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   852                           CCP4CON equ 031Ah ;# 
   853  031A                     # 8037 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   854                           CCPR5 equ 031Ch ;# 
   855  031C                     # 8044 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   856                           CCPR5L equ 031Ch ;# 
   857  031C                     # 8064 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   858                           CCPR5H equ 031Dh ;# 
   859  031D                     # 8084 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   860                           CCP5CON equ 031Eh ;# 
   861  031E                     # 8134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   862                           LATF equ 038Ch ;# 
   863  038C                     # 8196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   864                           LATG equ 038Dh ;# 
   865  038D                     # 8246 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   866                           IOCBP equ 0394h ;# 
   867  0394                     # 8316 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   868                           IOCBN equ 0395h ;# 
   869  0395                     # 8386 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   870                           IOCBF equ 0396h ;# 
   871  0396                     # 8456 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   872                           ANSELF equ 040Ch ;# 
   873  040C                     # 8526 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   874                           ANSELG equ 040Dh ;# 
   875  040D                     # 8574 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   876                           TMR4 equ 0415h ;# 
   877  0415                     # 8594 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   878                           PR4 equ 0416h ;# 
   879  0416                     # 8614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   880                           T4CON equ 0417h ;# 
   881  0417                     # 8685 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   882                           TMR6 equ 041Ch ;# 
   883  041C                     # 8705 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   884                           PR6 equ 041Dh ;# 
   885  041D                     # 8725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   886                           T6CON equ 041Eh ;# 
   887  041E                     # 8796 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   888                           WPUG equ 048Dh ;# 
   889  048D                     # 8817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   890                           RC2REG equ 0491h ;# 
   891  0491                     # 8837 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   892                           TX2REG equ 0492h ;# 
   893  0492                     # 8857 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   894                           SP2BRGL equ 0493h ;# 
   895  0493                     # 8862 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   896                           SPBRG2 equ 0493h ;# 
   897  0493                     # 8895 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   898                           SP2BRGH equ 0494h ;# 
   899  0494                     # 8915 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   900                           RC2STA equ 0495h ;# 
   901  0495                     # 8977 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   902                           TX2STA equ 0496h ;# 
   903  0496                     # 9039 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   904                           BAUD2CON equ 0497h ;# 
   905  0497                     # 9091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   906                           LCDCON equ 0791h ;# 
   907  0791                     # 9162 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   908                           LCDPS equ 0792h ;# 
   909  0792                     # 9232 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   910                           LCDREF equ 0793h ;# 
   911  0793                     # 9284 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   912                           LCDCST equ 0794h ;# 
   913  0794                     # 9324 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   914                           LCDRL equ 0795h ;# 
   915  0795                     # 9402 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   916                           LCDSE0 equ 0798h ;# 
   917  0798                     # 9464 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   918                           LCDSE1 equ 0799h ;# 
   919  0799                     # 9526 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   920                           LCDSE2 equ 079Ah ;# 
   921  079A                     # 9588 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   922                           LCDSE3 equ 079Bh ;# 
   923  079B                     # 9650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   924                           LCDSE4 equ 079Ch ;# 
   925  079C                     # 9712 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   926                           LCDSE5 equ 079Dh ;# 
   927  079D                     # 9762 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   928                           LCDDATA0 equ 07A0h ;# 
   929  07A0                     # 9824 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   930                           LCDDATA1 equ 07A1h ;# 
   931  07A1                     # 9886 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   932                           LCDDATA2 equ 07A2h ;# 
   933  07A2                     # 9948 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   934                           LCDDATA3 equ 07A3h ;# 
   935  07A3                     # 10010 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   936                           LCDDATA4 equ 07A4h ;# 
   937  07A4                     # 10072 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   938                           LCDDATA5 equ 07A5h ;# 
   939  07A5                     # 10134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   940                           LCDDATA6 equ 07A6h ;# 
   941  07A6                     # 10196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   942                           LCDDATA7 equ 07A7h ;# 
   943  07A7                     # 10258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   944                           LCDDATA8 equ 07A8h ;# 
   945  07A8                     # 10320 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   946                           LCDDATA9 equ 07A9h ;# 
   947  07A9                     # 10382 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   948                           LCDDATA10 equ 07AAh ;# 
   949  07AA                     # 10444 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   950                           LCDDATA11 equ 07ABh ;# 
   951  07AB                     # 10506 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   952                           LCDDATA12 equ 07ACh ;# 
   953  07AC                     # 10568 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   954                           LCDDATA13 equ 07ADh ;# 
   955  07AD                     # 10630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   956                           LCDDATA14 equ 07AEh ;# 
   957  07AE                     # 10680 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   958                           LCDDATA15 equ 07AFh ;# 
   959  07AF                     # 10742 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   960                           LCDDATA16 equ 07B0h ;# 
   961  07B0                     # 10804 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   962                           LCDDATA17 equ 07B1h ;# 
   963  07B1                     # 10854 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   964                           LCDDATA18 equ 07B2h ;# 
   965  07B2                     # 10916 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   966                           LCDDATA19 equ 07B3h ;# 
   967  07B3                     # 10978 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   968                           LCDDATA20 equ 07B4h ;# 
   969  07B4                     # 11028 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   970                           LCDDATA21 equ 07B5h ;# 
   971  07B5                     # 11090 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   972                           LCDDATA22 equ 07B6h ;# 
   973  07B6                     # 11152 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   974                           LCDDATA23 equ 07B7h ;# 
   975  07B7                     # 11202 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   976                           STATUS_SHAD equ 0FE4h ;# 
   977  0FE4                     # 11234 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   978                           WREG_SHAD equ 0FE5h ;# 
   979  0FE5                     # 11254 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   980                           BSR_SHAD equ 0FE6h ;# 
   981  0FE6                     # 11274 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   982                           PCLATH_SHAD equ 0FE7h ;# 
   983  0FE7                     # 11294 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   984                           FSR0L_SHAD equ 0FE8h ;# 
   985  0FE8                     # 11314 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   986                           FSR0H_SHAD equ 0FE9h ;# 
   987  0FE9                     # 11334 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   988                           FSR1L_SHAD equ 0FEAh ;# 
   989  0FEA                     # 11354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   990                           FSR1H_SHAD equ 0FEBh ;# 
   991  0FEB                     # 11374 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   992                           STKPTR equ 0FEDh ;# 
   993  0FED                     # 11394 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   994                           TOSL equ 0FEEh ;# 
   995  0FEE                     # 11414 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1946.h"
   996                           TOSH equ 0FEFh ;# 
   997  0FEF                     	FNCALL	_main,_CONVERT_Data_1
   998                           	FNCALL	_main,_UART2_Data_Ready
   999                           	FNCALL	_main,_UART2_Init
  1000                           	FNCALL	_main,_UART2_Read_Text
  1001                           	FNCALL	_main,_UART_Init
  1002                           	FNCALL	_main,_UART_TX_Empty
  1003                           	FNCALL	_main,_UART_Write_Text_Length
  1004                           	FNCALL	_main,_config_interrupt
  1005                           	FNCALL	_UART_Write_Text_Length,_UART_Write
  1006                           	FNCALL	_UART_Init,___aldiv
  1007                           	FNCALL	_UART2_Read_Text,_UART2_Read
  1008                           	FNCALL	_UART2_Init,___aldiv
  1009                           	FNCALL	_CONVERT_Data_1,_crc16
  1010                           	FNCALL	_CONVERT_Data_1,_reflect_byte
  1011                           	FNROOT	_main
  1012                           	FNCALL	_ISR,_CONVERT_Data_11Byte
  1013                           	FNCALL	_ISR,_CONVERT_Data_5Byte
  1014                           	FNCALL	_ISR,_UART2_Write_Text
  1015                           	FNCALL	_ISR,_UART2_Write_Text_Phan_Tu_Thu_13
  1016                           	FNCALL	_ISR,_UART2_Write_Text_Phan_Tu_Thu_7
  1017                           	FNCALL	_ISR,_UART2_Write_Text_Phan_Tu_Thu_8
  1018                           	FNCALL	_ISR,_UART_Data_Ready
  1019                           	FNCALL	_ISR,_UART_Read
  1020                           	FNCALL	_ISR,i1_CONVERT_Data_1
  1021                           	FNCALL	i1_CONVERT_Data_1,i1_crc16
  1022                           	FNCALL	i1_CONVERT_Data_1,i1_reflect_byte
  1023                           	FNCALL	_UART2_Write_Text_Phan_Tu_Thu_8,_UART2_Write
  1024                           	FNCALL	_UART2_Write_Text_Phan_Tu_Thu_7,_UART2_Write
  1025                           	FNCALL	_UART2_Write_Text_Phan_Tu_Thu_13,_UART2_Write
  1026                           	FNCALL	_UART2_Write_Text,_UART2_Write
  1027                           	FNCALL	_CONVERT_Data_5Byte,i1_crc16
  1028                           	FNCALL	_CONVERT_Data_5Byte,i1_reflect_byte
  1029                           	FNCALL	_CONVERT_Data_11Byte,i1_crc16
  1030                           	FNCALL	_CONVERT_Data_11Byte,i1_reflect_byte
  1031                           	FNCALL	intlevel1,_ISR
  1032                           	global	intlevel1
  1033                           	FNROOT	intlevel1
  1034                           	global	_crc32_lookup_table
  1035                           psect	stringtext1,class=STRCODE,delta=2,noexec
  1036                           global __pstringtext1
  1037                           __pstringtext1:
  1038  014D                     	file	"./crcLIBhex.h"
  1039                           	line	62
  1040                           _crc32_lookup_table:
  1041  014D                     	retlw	low(0)
  1042  014D  3400               	retlw	high(0)
  1043  014E  3400               	retlw	low highword(0)
  1044  014F  3400               	retlw	high highword(0)
  1045  0150  3400               
  1046                           	retlw	096h
  1047  0151  3496               	retlw	030h
  1048  0152  3430               	retlw	07h
  1049  0153  3407               	retlw	077h
  1050  0154  3477               
  1051                           	retlw	02Ch
  1052  0155  342C               	retlw	061h
  1053  0156  3461               	retlw	0Eh
  1054  0157  340E               	retlw	0EEh
  1055  0158  34EE               
  1056                           	retlw	0BAh
  1057  0159  34BA               	retlw	051h
  1058  015A  3451               	retlw	09h
  1059  015B  3409               	retlw	099h
  1060  015C  3499               
  1061                           	retlw	019h
  1062  015D  3419               	retlw	0C4h
  1063  015E  34C4               	retlw	06Dh
  1064  015F  346D               	retlw	07h
  1065  0160  3407               
  1066                           	retlw	08Fh
  1067  0161  348F               	retlw	0F4h
  1068  0162  34F4               	retlw	06Ah
  1069  0163  346A               	retlw	070h
  1070  0164  3470               
  1071                           	retlw	035h
  1072  0165  3435               	retlw	0A5h
  1073  0166  34A5               	retlw	063h
  1074  0167  3463               	retlw	0E9h
  1075  0168  34E9               
  1076                           	retlw	0A3h
  1077  0169  34A3               	retlw	095h
  1078  016A  3495               	retlw	064h
  1079  016B  3464               	retlw	09Eh
  1080  016C  349E               
  1081                           	retlw	032h
  1082  016D  3432               	retlw	088h
  1083  016E  3488               	retlw	0DBh
  1084  016F  34DB               	retlw	0Eh
  1085  0170  340E               
  1086                           	retlw	0A4h
  1087  0171  34A4               	retlw	0B8h
  1088  0172  34B8               	retlw	0DCh
  1089  0173  34DC               	retlw	079h
  1090  0174  3479               
  1091                           	retlw	01Eh
  1092  0175  341E               	retlw	0E9h
  1093  0176  34E9               	retlw	0D5h
  1094  0177  34D5               	retlw	0E0h
  1095  0178  34E0               
  1096                           	retlw	088h
  1097  0179  3488               	retlw	0D9h
  1098  017A  34D9               	retlw	0D2h
  1099  017B  34D2               	retlw	097h
  1100  017C  3497               
  1101                           	retlw	02Bh
  1102  017D  342B               	retlw	04Ch
  1103  017E  344C               	retlw	0B6h
  1104  017F  34B6               	retlw	09h
  1105  0180  3409               
  1106                           	retlw	0BDh
  1107  0181  34BD               	retlw	07Ch
  1108  0182  347C               	retlw	0B1h
  1109  0183  34B1               	retlw	07Eh
  1110  0184  347E               
  1111                           	retlw	07h
  1112  0185  3407               	retlw	02Dh
  1113  0186  342D               	retlw	0B8h
  1114  0187  34B8               	retlw	0E7h
  1115  0188  34E7               
  1116                           	retlw	091h
  1117  0189  3491               	retlw	01Dh
  1118  018A  341D               	retlw	0BFh
  1119  018B  34BF               	retlw	090h
  1120  018C  3490               
  1121                           	retlw	064h
  1122  018D  3464               	retlw	010h
  1123  018E  3410               	retlw	0B7h
  1124  018F  34B7               	retlw	01Dh
  1125  0190  341D               
  1126                           	retlw	0F2h
  1127  0191  34F2               	retlw	020h
  1128  0192  3420               	retlw	0B0h
  1129  0193  34B0               	retlw	06Ah
  1130  0194  346A               
  1131                           	retlw	048h
  1132  0195  3448               	retlw	071h
  1133  0196  3471               	retlw	0B9h
  1134  0197  34B9               	retlw	0F3h
  1135  0198  34F3               
  1136                           	retlw	0DEh
  1137  0199  34DE               	retlw	041h
  1138  019A  3441               	retlw	0BEh
  1139  019B  34BE               	retlw	084h
  1140  019C  3484               
  1141                           	retlw	07Dh
  1142  019D  347D               	retlw	0D4h
  1143  019E  34D4               	retlw	0DAh
  1144  019F  34DA               	retlw	01Ah
  1145  01A0  341A               
  1146                           	retlw	0EBh
  1147  01A1  34EB               	retlw	0E4h
  1148  01A2  34E4               	retlw	0DDh
  1149  01A3  34DD               	retlw	06Dh
  1150  01A4  346D               
  1151                           	retlw	051h
  1152  01A5  3451               	retlw	0B5h
  1153  01A6  34B5               	retlw	0D4h
  1154  01A7  34D4               	retlw	0F4h
  1155  01A8  34F4               
  1156                           	retlw	0C7h
  1157  01A9  34C7               	retlw	085h
  1158  01AA  3485               	retlw	0D3h
  1159  01AB  34D3               	retlw	083h
  1160  01AC  3483               
  1161                           	retlw	056h
  1162  01AD  3456               	retlw	098h
  1163  01AE  3498               	retlw	06Ch
  1164  01AF  346C               	retlw	013h
  1165  01B0  3413               
  1166                           	retlw	0C0h
  1167  01B1  34C0               	retlw	0A8h
  1168  01B2  34A8               	retlw	06Bh
  1169  01B3  346B               	retlw	064h
  1170  01B4  3464               
  1171                           	retlw	07Ah
  1172  01B5  347A               	retlw	0F9h
  1173  01B6  34F9               	retlw	062h
  1174  01B7  3462               	retlw	0FDh
  1175  01B8  34FD               
  1176                           	retlw	0ECh
  1177  01B9  34EC               	retlw	0C9h
  1178  01BA  34C9               	retlw	065h
  1179  01BB  3465               	retlw	08Ah
  1180  01BC  348A               
  1181                           	retlw	04Fh
  1182  01BD  344F               	retlw	05Ch
  1183  01BE  345C               	retlw	01h
  1184  01BF  3401               	retlw	014h
  1185  01C0  3414               
  1186                           	retlw	0D9h
  1187  01C1  34D9               	retlw	06Ch
  1188  01C2  346C               	retlw	06h
  1189  01C3  3406               	retlw	063h
  1190  01C4  3463               
  1191                           	retlw	063h
  1192  01C5  3463               	retlw	03Dh
  1193  01C6  343D               	retlw	0Fh
  1194  01C7  340F               	retlw	0FAh
  1195  01C8  34FA               
  1196                           	retlw	0F5h
  1197  01C9  34F5               	retlw	0Dh
  1198  01CA  340D               	retlw	08h
  1199  01CB  3408               	retlw	08Dh
  1200  01CC  348D               
  1201                           	retlw	0C8h
  1202  01CD  34C8               	retlw	020h
  1203  01CE  3420               	retlw	06Eh
  1204  01CF  346E               	retlw	03Bh
  1205  01D0  343B               
  1206                           	retlw	05Eh
  1207  01D1  345E               	retlw	010h
  1208  01D2  3410               	retlw	069h
  1209  01D3  3469               	retlw	04Ch
  1210  01D4  344C               
  1211                           	retlw	0E4h
  1212  01D5  34E4               	retlw	041h
  1213  01D6  3441               	retlw	060h
  1214  01D7  3460               	retlw	0D5h
  1215  01D8  34D5               
  1216                           	retlw	072h
  1217  01D9  3472               	retlw	071h
  1218  01DA  3471               	retlw	067h
  1219  01DB  3467               	retlw	0A2h
  1220  01DC  34A2               
  1221                           	retlw	0D1h
  1222  01DD  34D1               	retlw	0E4h
  1223  01DE  34E4               	retlw	03h
  1224  01DF  3403               	retlw	03Ch
  1225  01E0  343C               
  1226                           	retlw	047h
  1227  01E1  3447               	retlw	0D4h
  1228  01E2  34D4               	retlw	04h
  1229  01E3  3404               	retlw	04Bh
  1230  01E4  344B               
  1231                           	retlw	0FDh
  1232  01E5  34FD               	retlw	085h
  1233  01E6  3485               	retlw	0Dh
  1234  01E7  340D               	retlw	0D2h
  1235  01E8  34D2               
  1236                           	retlw	06Bh
  1237  01E9  346B               	retlw	0B5h
  1238  01EA  34B5               	retlw	0Ah
  1239  01EB  340A               	retlw	0A5h
  1240  01EC  34A5               
  1241                           	retlw	0FAh
  1242  01ED  34FA               	retlw	0A8h
  1243  01EE  34A8               	retlw	0B5h
  1244  01EF  34B5               	retlw	035h
  1245  01F0  3435               
  1246                           	retlw	06Ch
  1247  01F1  346C               	retlw	098h
  1248  01F2  3498               	retlw	0B2h
  1249  01F3  34B2               	retlw	042h
  1250  01F4  3442               
  1251                           	retlw	0D6h
  1252  01F5  34D6               	retlw	0C9h
  1253  01F6  34C9               	retlw	0BBh
  1254  01F7  34BB               	retlw	0DBh
  1255  01F8  34DB               
  1256                           	retlw	040h
  1257  01F9  3440               	retlw	0F9h
  1258  01FA  34F9               	retlw	0BCh
  1259  01FB  34BC               	retlw	0ACh
  1260  01FC  34AC               
  1261                           	retlw	0E3h
  1262  01FD  34E3               	retlw	06Ch
  1263  01FE  346C               	retlw	0D8h
  1264  01FF  34D8               	retlw	032h
  1265  0200  3432               
  1266                           	retlw	075h
  1267  0201  3475               	retlw	05Ch
  1268  0202  345C               	retlw	0DFh
  1269  0203  34DF               	retlw	045h
  1270  0204  3445               
  1271                           	retlw	0CFh
  1272  0205  34CF               	retlw	0Dh
  1273  0206  340D               	retlw	0D6h
  1274  0207  34D6               	retlw	0DCh
  1275  0208  34DC               
  1276                           	retlw	059h
  1277  0209  3459               	retlw	03Dh
  1278  020A  343D               	retlw	0D1h
  1279  020B  34D1               	retlw	0ABh
  1280  020C  34AB               
  1281                           	retlw	0ACh
  1282  020D  34AC               	retlw	030h
  1283  020E  3430               	retlw	0D9h
  1284  020F  34D9               	retlw	026h
  1285  0210  3426               
  1286                           	retlw	03Ah
  1287  0211  343A               	retlw	0
  1288  0212  3400               	retlw	0DEh
  1289  0213  34DE               	retlw	051h
  1290  0214  3451               
  1291                           	retlw	080h
  1292  0215  3480               	retlw	051h
  1293  0216  3451               	retlw	0D7h
  1294  0217  34D7               	retlw	0C8h
  1295  0218  34C8               
  1296                           	retlw	016h
  1297  0219  3416               	retlw	061h
  1298  021A  3461               	retlw	0D0h
  1299  021B  34D0               	retlw	0BFh
  1300  021C  34BF               
  1301                           	retlw	0B5h
  1302  021D  34B5               	retlw	0F4h
  1303  021E  34F4               	retlw	0B4h
  1304  021F  34B4               	retlw	021h
  1305  0220  3421               
  1306                           	retlw	023h
  1307  0221  3423               	retlw	0C4h
  1308  0222  34C4               	retlw	0B3h
  1309  0223  34B3               	retlw	056h
  1310  0224  3456               
  1311                           	retlw	099h
  1312  0225  3499               	retlw	095h
  1313  0226  3495               	retlw	0BAh
  1314  0227  34BA               	retlw	0CFh
  1315  0228  34CF               
  1316                           	retlw	0Fh
  1317  0229  340F               	retlw	0A5h
  1318  022A  34A5               	retlw	0BDh
  1319  022B  34BD               	retlw	0B8h
  1320  022C  34B8               
  1321                           	retlw	09Eh
  1322  022D  349E               	retlw	0B8h
  1323  022E  34B8               	retlw	02h
  1324  022F  3402               	retlw	028h
  1325  0230  3428               
  1326                           	retlw	08h
  1327  0231  3408               	retlw	088h
  1328  0232  3488               	retlw	05h
  1329  0233  3405               	retlw	05Fh
  1330  0234  345F               
  1331                           	retlw	0B2h
  1332  0235  34B2               	retlw	0D9h
  1333  0236  34D9               	retlw	0Ch
  1334  0237  340C               	retlw	0C6h
  1335  0238  34C6               
  1336                           	retlw	024h
  1337  0239  3424               	retlw	0E9h
  1338  023A  34E9               	retlw	0Bh
  1339  023B  340B               	retlw	0B1h
  1340  023C  34B1               
  1341                           	retlw	087h
  1342  023D  3487               	retlw	07Ch
  1343  023E  347C               	retlw	06Fh
  1344  023F  346F               	retlw	02Fh
  1345  0240  342F               
  1346                           	retlw	011h
  1347  0241  3411               	retlw	04Ch
  1348  0242  344C               	retlw	068h
  1349  0243  3468               	retlw	058h
  1350  0244  3458               
  1351                           	retlw	0ABh
  1352  0245  34AB               	retlw	01Dh
  1353  0246  341D               	retlw	061h
  1354  0247  3461               	retlw	0C1h
  1355  0248  34C1               
  1356                           	retlw	03Dh
  1357  0249  343D               	retlw	02Dh
  1358  024A  342D               	retlw	066h
  1359  024B  3466               	retlw	0B6h
  1360  024C  34B6               
  1361                           	retlw	090h
  1362  024D  3490               	retlw	041h
  1363  024E  3441               	retlw	0DCh
  1364  024F  34DC               	retlw	076h
  1365  0250  3476               
  1366                           	retlw	06h
  1367  0251  3406               	retlw	071h
  1368  0252  3471               	retlw	0DBh
  1369  0253  34DB               	retlw	01h
  1370  0254  3401               
  1371                           	retlw	0BCh
  1372  0255  34BC               	retlw	020h
  1373  0256  3420               	retlw	0D2h
  1374  0257  34D2               	retlw	098h
  1375  0258  3498               
  1376                           	retlw	02Ah
  1377  0259  342A               	retlw	010h
  1378  025A  3410               	retlw	0D5h
  1379  025B  34D5               	retlw	0EFh
  1380  025C  34EF               
  1381                           	retlw	089h
  1382  025D  3489               	retlw	085h
  1383  025E  3485               	retlw	0B1h
  1384  025F  34B1               	retlw	071h
  1385  0260  3471               
  1386                           	retlw	01Fh
  1387  0261  341F               	retlw	0B5h
  1388  0262  34B5               	retlw	0B6h
  1389  0263  34B6               	retlw	06h
  1390  0264  3406               
  1391                           	retlw	0A5h
  1392  0265  34A5               	retlw	0E4h
  1393  0266  34E4               	retlw	0BFh
  1394  0267  34BF               	retlw	09Fh
  1395  0268  349F               
  1396                           	retlw	033h
  1397  0269  3433               	retlw	0D4h
  1398  026A  34D4               	retlw	0B8h
  1399  026B  34B8               	retlw	0E8h
  1400  026C  34E8               
  1401                           	retlw	0A2h
  1402  026D  34A2               	retlw	0C9h
  1403  026E  34C9               	retlw	07h
  1404  026F  3407               	retlw	078h
  1405  0270  3478               
  1406                           	retlw	034h
  1407  0271  3434               	retlw	0F9h
  1408  0272  34F9               	retlw	0
  1409  0273  3400               	retlw	0Fh
  1410  0274  340F               
  1411                           	retlw	08Eh
  1412  0275  348E               	retlw	0A8h
  1413  0276  34A8               	retlw	09h
  1414  0277  3409               	retlw	096h
  1415  0278  3496               
  1416                           	retlw	018h
  1417  0279  3418               	retlw	098h
  1418  027A  3498               	retlw	0Eh
  1419  027B  340E               	retlw	0E1h
  1420  027C  34E1               
  1421                           	retlw	0BBh
  1422  027D  34BB               	retlw	0Dh
  1423  027E  340D               	retlw	06Ah
  1424  027F  346A               	retlw	07Fh
  1425  0280  347F               
  1426                           	retlw	02Dh
  1427  0281  342D               	retlw	03Dh
  1428  0282  343D               	retlw	06Dh
  1429  0283  346D               	retlw	08h
  1430  0284  3408               
  1431                           	retlw	097h
  1432  0285  3497               	retlw	06Ch
  1433  0286  346C               	retlw	064h
  1434  0287  3464               	retlw	091h
  1435  0288  3491               
  1436                           	retlw	01h
  1437  0289  3401               	retlw	05Ch
  1438  028A  345C               	retlw	063h
  1439  028B  3463               	retlw	0E6h
  1440  028C  34E6               
  1441                           	retlw	0F4h
  1442  028D  34F4               	retlw	051h
  1443  028E  3451               	retlw	06Bh
  1444  028F  346B               	retlw	06Bh
  1445  0290  346B               
  1446                           	retlw	062h
  1447  0291  3462               	retlw	061h
  1448  0292  3461               	retlw	06Ch
  1449  0293  346C               	retlw	01Ch
  1450  0294  341C               
  1451                           	retlw	0D8h
  1452  0295  34D8               	retlw	030h
  1453  0296  3430               	retlw	065h
  1454  0297  3465               	retlw	085h
  1455  0298  3485               
  1456                           	retlw	04Eh
  1457  0299  344E               	retlw	0
  1458  029A  3400               	retlw	062h
  1459  029B  3462               	retlw	0F2h
  1460  029C  34F2               
  1461                           	retlw	0EDh
  1462  029D  34ED               	retlw	095h
  1463  029E  3495               	retlw	06h
  1464  029F  3406               	retlw	06Ch
  1465  02A0  346C               
  1466                           	retlw	07Bh
  1467  02A1  347B               	retlw	0A5h
  1468  02A2  34A5               	retlw	01h
  1469  02A3  3401               	retlw	01Bh
  1470  02A4  341B               
  1471                           	retlw	0C1h
  1472  02A5  34C1               	retlw	0F4h
  1473  02A6  34F4               	retlw	08h
  1474  02A7  3408               	retlw	082h
  1475  02A8  3482               
  1476                           	retlw	057h
  1477  02A9  3457               	retlw	0C4h
  1478  02AA  34C4               	retlw	0Fh
  1479  02AB  340F               	retlw	0F5h
  1480  02AC  34F5               
  1481                           	retlw	0C6h
  1482  02AD  34C6               	retlw	0D9h
  1483  02AE  34D9               	retlw	0B0h
  1484  02AF  34B0               	retlw	065h
  1485  02B0  3465               
  1486                           	retlw	050h
  1487  02B1  3450               	retlw	0E9h
  1488  02B2  34E9               	retlw	0B7h
  1489  02B3  34B7               	retlw	012h
  1490  02B4  3412               
  1491                           	retlw	0EAh
  1492  02B5  34EA               	retlw	0B8h
  1493  02B6  34B8               	retlw	0BEh
  1494  02B7  34BE               	retlw	08Bh
  1495  02B8  348B               
  1496                           	retlw	07Ch
  1497  02B9  347C               	retlw	088h
  1498  02BA  3488               	retlw	0B9h
  1499  02BB  34B9               	retlw	0FCh
  1500  02BC  34FC               
  1501                           	retlw	0DFh
  1502  02BD  34DF               	retlw	01Dh
  1503  02BE  341D               	retlw	0DDh
  1504  02BF  34DD               	retlw	062h
  1505  02C0  3462               
  1506                           	retlw	049h
  1507  02C1  3449               	retlw	02Dh
  1508  02C2  342D               	retlw	0DAh
  1509  02C3  34DA               	retlw	015h
  1510  02C4  3415               
  1511                           	retlw	0F3h
  1512  02C5  34F3               	retlw	07Ch
  1513  02C6  347C               	retlw	0D3h
  1514  02C7  34D3               	retlw	08Ch
  1515  02C8  348C               
  1516                           	retlw	065h
  1517  02C9  3465               	retlw	04Ch
  1518  02CA  344C               	retlw	0D4h
  1519  02CB  34D4               	retlw	0FBh
  1520  02CC  34FB               
  1521                           	retlw	058h
  1522  02CD  3458               	retlw	061h
  1523  02CE  3461               	retlw	0B2h
  1524  02CF  34B2               	retlw	04Dh
  1525  02D0  344D               
  1526                           	retlw	0CEh
  1527  02D1  34CE               	retlw	051h
  1528  02D2  3451               	retlw	0B5h
  1529  02D3  34B5               	retlw	03Ah
  1530  02D4  343A               
  1531                           	retlw	074h
  1532  02D5  3474               	retlw	0
  1533  02D6  3400               	retlw	0BCh
  1534  02D7  34BC               	retlw	0A3h
  1535  02D8  34A3               
  1536                           	retlw	0E2h
  1537  02D9  34E2               	retlw	030h
  1538  02DA  3430               	retlw	0BBh
  1539  02DB  34BB               	retlw	0D4h
  1540  02DC  34D4               
  1541                           	retlw	041h
  1542  02DD  3441               	retlw	0A5h
  1543  02DE  34A5               	retlw	0DFh
  1544  02DF  34DF               	retlw	04Ah
  1545  02E0  344A               
  1546                           	retlw	0D7h
  1547  02E1  34D7               	retlw	095h
  1548  02E2  3495               	retlw	0D8h
  1549  02E3  34D8               	retlw	03Dh
  1550  02E4  343D               
  1551                           	retlw	06Dh
  1552  02E5  346D               	retlw	0C4h
  1553  02E6  34C4               	retlw	0D1h
  1554  02E7  34D1               	retlw	0A4h
  1555  02E8  34A4               
  1556                           	retlw	0FBh
  1557  02E9  34FB               	retlw	0F4h
  1558  02EA  34F4               	retlw	0D6h
  1559  02EB  34D6               	retlw	0D3h
  1560  02EC  34D3               
  1561                           	retlw	06Ah
  1562  02ED  346A               	retlw	0E9h
  1563  02EE  34E9               	retlw	069h
  1564  02EF  3469               	retlw	043h
  1565  02F0  3443               
  1566                           	retlw	0FCh
  1567  02F1  34FC               	retlw	0D9h
  1568  02F2  34D9               	retlw	06Eh
  1569  02F3  346E               	retlw	034h
  1570  02F4  3434               
  1571                           	retlw	046h
  1572  02F5  3446               	retlw	088h
  1573  02F6  3488               	retlw	067h
  1574  02F7  3467               	retlw	0ADh
  1575  02F8  34AD               
  1576                           	retlw	0D0h
  1577  02F9  34D0               	retlw	0B8h
  1578  02FA  34B8               	retlw	060h
  1579  02FB  3460               	retlw	0DAh
  1580  02FC  34DA               
  1581                           	retlw	073h
  1582  02FD  3473               	retlw	02Dh
  1583  02FE  342D               	retlw	04h
  1584  02FF  3404               	retlw	044h
  1585  0300  3444               
  1586                           	retlw	0E5h
  1587  0301  34E5               	retlw	01Dh
  1588  0302  341D               	retlw	03h
  1589  0303  3403               	retlw	033h
  1590  0304  3433               
  1591                           	retlw	05Fh
  1592  0305  345F               	retlw	04Ch
  1593  0306  344C               	retlw	0Ah
  1594  0307  340A               	retlw	0AAh
  1595  0308  34AA               
  1596                           	retlw	0C9h
  1597  0309  34C9               	retlw	07Ch
  1598  030A  347C               	retlw	0Dh
  1599  030B  340D               	retlw	0DDh
  1600  030C  34DD               
  1601                           	retlw	03Ch
  1602  030D  343C               	retlw	071h
  1603  030E  3471               	retlw	05h
  1604  030F  3405               	retlw	050h
  1605  0310  3450               
  1606                           	retlw	0AAh
  1607  0311  34AA               	retlw	041h
  1608  0312  3441               	retlw	02h
  1609  0313  3402               	retlw	027h
  1610  0314  3427               
  1611                           	retlw	010h
  1612  0315  3410               	retlw	010h
  1613  0316  3410               	retlw	0Bh
  1614  0317  340B               	retlw	0BEh
  1615  0318  34BE               
  1616                           	retlw	086h
  1617  0319  3486               	retlw	020h
  1618  031A  3420               	retlw	0Ch
  1619  031B  340C               	retlw	0C9h
  1620  031C  34C9               
  1621                           	retlw	025h
  1622  031D  3425               	retlw	0B5h
  1623  031E  34B5               	retlw	068h
  1624  031F  3468               	retlw	057h
  1625  0320  3457               
  1626                           	retlw	0B3h
  1627  0321  34B3               	retlw	085h
  1628  0322  3485               	retlw	06Fh
  1629  0323  346F               	retlw	020h
  1630  0324  3420               
  1631                           	retlw	09h
  1632  0325  3409               	retlw	0D4h
  1633  0326  34D4               	retlw	066h
  1634  0327  3466               	retlw	0B9h
  1635  0328  34B9               
  1636                           	retlw	09Fh
  1637  0329  349F               	retlw	0E4h
  1638  032A  34E4               	retlw	061h
  1639  032B  3461               	retlw	0CEh
  1640  032C  34CE               
  1641                           	retlw	0Eh
  1642  032D  340E               	retlw	0F9h
  1643  032E  34F9               	retlw	0DEh
  1644  032F  34DE               	retlw	05Eh
  1645  0330  345E               
  1646                           	retlw	098h
  1647  0331  3498               	retlw	0C9h
  1648  0332  34C9               	retlw	0D9h
  1649  0333  34D9               	retlw	029h
  1650  0334  3429               
  1651                           	retlw	022h
  1652  0335  3422               	retlw	098h
  1653  0336  3498               	retlw	0D0h
  1654  0337  34D0               	retlw	0B0h
  1655  0338  34B0               
  1656                           	retlw	0B4h
  1657  0339  34B4               	retlw	0A8h
  1658  033A  34A8               	retlw	0D7h
  1659  033B  34D7               	retlw	0C7h
  1660  033C  34C7               
  1661                           	retlw	017h
  1662  033D  3417               	retlw	03Dh
  1663  033E  343D               	retlw	0B3h
  1664  033F  34B3               	retlw	059h
  1665  0340  3459               
  1666                           	retlw	081h
  1667  0341  3481               	retlw	0Dh
  1668  0342  340D               	retlw	0B4h
  1669  0343  34B4               	retlw	02Eh
  1670  0344  342E               
  1671                           	retlw	03Bh
  1672  0345  343B               	retlw	05Ch
  1673  0346  345C               	retlw	0BDh
  1674  0347  34BD               	retlw	0B7h
  1675  0348  34B7               
  1676                           	retlw	0ADh
  1677  0349  34AD               	retlw	06Ch
  1678  034A  346C               	retlw	0BAh
  1679  034B  34BA               	retlw	0C0h
  1680  034C  34C0               
  1681                           	retlw	020h
  1682  034D  3420               	retlw	083h
  1683  034E  3483               	retlw	0B8h
  1684  034F  34B8               	retlw	0EDh
  1685  0350  34ED               
  1686                           	retlw	0B6h
  1687  0351  34B6               	retlw	0B3h
  1688  0352  34B3               	retlw	0BFh
  1689  0353  34BF               	retlw	09Ah
  1690  0354  349A               
  1691                           	retlw	0Ch
  1692  0355  340C               	retlw	0E2h
  1693  0356  34E2               	retlw	0B6h
  1694  0357  34B6               	retlw	03h
  1695  0358  3403               
  1696                           	retlw	09Ah
  1697  0359  349A               	retlw	0D2h
  1698  035A  34D2               	retlw	0B1h
  1699  035B  34B1               	retlw	074h
  1700  035C  3474               
  1701                           	retlw	039h
  1702  035D  3439               	retlw	047h
  1703  035E  3447               	retlw	0D5h
  1704  035F  34D5               	retlw	0EAh
  1705  0360  34EA               
  1706                           	retlw	0AFh
  1707  0361  34AF               	retlw	077h
  1708  0362  3477               	retlw	0D2h
  1709  0363  34D2               	retlw	09Dh
  1710  0364  349D               
  1711                           	retlw	015h
  1712  0365  3415               	retlw	026h
  1713  0366  3426               	retlw	0DBh
  1714  0367  34DB               	retlw	04h
  1715  0368  3404               
  1716                           	retlw	083h
  1717  0369  3483               	retlw	016h
  1718  036A  3416               	retlw	0DCh
  1719  036B  34DC               	retlw	073h
  1720  036C  3473               
  1721                           	retlw	012h
  1722  036D  3412               	retlw	0Bh
  1723  036E  340B               	retlw	063h
  1724  036F  3463               	retlw	0E3h
  1725  0370  34E3               
  1726                           	retlw	084h
  1727  0371  3484               	retlw	03Bh
  1728  0372  343B               	retlw	064h
  1729  0373  3464               	retlw	094h
  1730  0374  3494               
  1731                           	retlw	03Eh
  1732  0375  343E               	retlw	06Ah
  1733  0376  346A               	retlw	06Dh
  1734  0377  346D               	retlw	0Dh
  1735  0378  340D               
  1736                           	retlw	0A8h
  1737  0379  34A8               	retlw	05Ah
  1738  037A  345A               	retlw	06Ah
  1739  037B  346A               	retlw	07Ah
  1740  037C  347A               
  1741                           	retlw	0Bh
  1742  037D  340B               	retlw	0CFh
  1743  037E  34CF               	retlw	0Eh
  1744  037F  340E               	retlw	0E4h
  1745  0380  34E4               
  1746                           	retlw	09Dh
  1747  0381  349D               	retlw	0FFh
  1748  0382  34FF               	retlw	09h
  1749  0383  3409               	retlw	093h
  1750  0384  3493               
  1751                           	retlw	027h
  1752  0385  3427               	retlw	0AEh
  1753  0386  34AE               	retlw	0
  1754  0387  3400               	retlw	0Ah
  1755  0388  340A               
  1756                           	retlw	0B1h
  1757  0389  34B1               	retlw	09Eh
  1758  038A  349E               	retlw	07h
  1759  038B  3407               	retlw	07Dh
  1760  038C  347D               
  1761                           	retlw	044h
  1762  038D  3444               	retlw	093h
  1763  038E  3493               	retlw	0Fh
  1764  038F  340F               	retlw	0F0h
  1765  0390  34F0               
  1766                           	retlw	0D2h
  1767  0391  34D2               	retlw	0A3h
  1768  0392  34A3               	retlw	08h
  1769  0393  3408               	retlw	087h
  1770  0394  3487               
  1771                           	retlw	068h
  1772  0395  3468               	retlw	0F2h
  1773  0396  34F2               	retlw	01h
  1774  0397  3401               	retlw	01Eh
  1775  0398  341E               
  1776                           	retlw	0FEh
  1777  0399  34FE               	retlw	0C2h
  1778  039A  34C2               	retlw	06h
  1779  039B  3406               	retlw	069h
  1780  039C  3469               
  1781                           	retlw	05Dh
  1782  039D  345D               	retlw	057h
  1783  039E  3457               	retlw	062h
  1784  039F  3462               	retlw	0F7h
  1785  03A0  34F7               
  1786                           	retlw	0CBh
  1787  03A1  34CB               	retlw	067h
  1788  03A2  3467               	retlw	065h
  1789  03A3  3465               	retlw	080h
  1790  03A4  3480               
  1791                           	retlw	071h
  1792  03A5  3471               	retlw	036h
  1793  03A6  3436               	retlw	06Ch
  1794  03A7  346C               	retlw	019h
  1795  03A8  3419               
  1796                           	retlw	0E7h
  1797  03A9  34E7               	retlw	06h
  1798  03AA  3406               	retlw	06Bh
  1799  03AB  346B               	retlw	06Eh
  1800  03AC  346E               
  1801                           	retlw	076h
  1802  03AD  3476               	retlw	01Bh
  1803  03AE  341B               	retlw	0D4h
  1804  03AF  34D4               	retlw	0FEh
  1805  03B0  34FE               
  1806                           	retlw	0E0h
  1807  03B1  34E0               	retlw	02Bh
  1808  03B2  342B               	retlw	0D3h
  1809  03B3  34D3               	retlw	089h
  1810  03B4  3489               
  1811                           	retlw	05Ah
  1812  03B5  345A               	retlw	07Ah
  1813  03B6  347A               	retlw	0DAh
  1814  03B7  34DA               	retlw	010h
  1815  03B8  3410               
  1816                           	retlw	0CCh
  1817  03B9  34CC               	retlw	04Ah
  1818  03BA  344A               	retlw	0DDh
  1819  03BB  34DD               	retlw	067h
  1820  03BC  3467               
  1821                           	retlw	06Fh
  1822  03BD  346F               	retlw	0DFh
  1823  03BE  34DF               	retlw	0B9h
  1824  03BF  34B9               	retlw	0F9h
  1825  03C0  34F9               
  1826                           	retlw	0F9h
  1827  03C1  34F9               	retlw	0EFh
  1828  03C2  34EF               	retlw	0BEh
  1829  03C3  34BE               	retlw	08Eh
  1830  03C4  348E               
  1831                           	retlw	043h
  1832  03C5  3443               	retlw	0BEh
  1833  03C6  34BE               	retlw	0B7h
  1834  03C7  34B7               	retlw	017h
  1835  03C8  3417               
  1836                           	retlw	0D5h
  1837  03C9  34D5               	retlw	08Eh
  1838  03CA  348E               	retlw	0B0h
  1839  03CB  34B0               	retlw	060h
  1840  03CC  3460               
  1841                           	retlw	0E8h
  1842  03CD  34E8               	retlw	0A3h
  1843  03CE  34A3               	retlw	0D6h
  1844  03CF  34D6               	retlw	0D6h
  1845  03D0  34D6               
  1846                           	retlw	07Eh
  1847  03D1  347E               	retlw	093h
  1848  03D2  3493               	retlw	0D1h
  1849  03D3  34D1               	retlw	0A1h
  1850  03D4  34A1               
  1851                           	retlw	0C4h
  1852  03D5  34C4               	retlw	0C2h
  1853  03D6  34C2               	retlw	0D8h
  1854  03D7  34D8               	retlw	038h
  1855  03D8  3438               
  1856                           	retlw	052h
  1857  03D9  3452               	retlw	0F2h
  1858  03DA  34F2               	retlw	0DFh
  1859  03DB  34DF               	retlw	04Fh
  1860  03DC  344F               
  1861                           	retlw	0F1h
  1862  03DD  34F1               	retlw	067h
  1863  03DE  3467               	retlw	0BBh
  1864  03DF  34BB               	retlw	0D1h
  1865  03E0  34D1               
  1866                           	retlw	067h
  1867  03E1  3467               	retlw	057h
  1868  03E2  3457               	retlw	0BCh
  1869  03E3  34BC               	retlw	0A6h
  1870  03E4  34A6               
  1871                           	retlw	0DDh
  1872  03E5  34DD               	retlw	06h
  1873  03E6  3406               	retlw	0B5h
  1874  03E7  34B5               	retlw	03Fh
  1875  03E8  343F               
  1876                           	retlw	04Bh
  1877  03E9  344B               	retlw	036h
  1878  03EA  3436               	retlw	0B2h
  1879  03EB  34B2               	retlw	048h
  1880  03EC  3448               
  1881                           	retlw	0DAh
  1882  03ED  34DA               	retlw	02Bh
  1883  03EE  342B               	retlw	0Dh
  1884  03EF  340D               	retlw	0D8h
  1885  03F0  34D8               
  1886                           	retlw	04Ch
  1887  03F1  344C               	retlw	01Bh
  1888  03F2  341B               	retlw	0Ah
  1889  03F3  340A               	retlw	0AFh
  1890  03F4  34AF               
  1891                           	retlw	0F6h
  1892  03F5  34F6               	retlw	04Ah
  1893  03F6  344A               	retlw	03h
  1894  03F7  3403               	retlw	036h
  1895  03F8  3436               
  1896                           	retlw	060h
  1897  03F9  3460               	retlw	07Ah
  1898  03FA  347A               	retlw	04h
  1899  03FB  3404               	retlw	041h
  1900  03FC  3441               
  1901                           	retlw	0C3h
  1902  03FD  34C3               	retlw	0EFh
  1903  03FE  34EF               	retlw	060h
  1904  03FF  3460               	retlw	0DFh
  1905  0400  34DF               
  1906                           	retlw	055h
  1907  0401  3455               	retlw	0DFh
  1908  0402  34DF               	retlw	067h
  1909  0403  3467               	retlw	0A8h
  1910  0404  34A8               
  1911                           	retlw	0EFh
  1912  0405  34EF               	retlw	08Eh
  1913  0406  348E               	retlw	06Eh
  1914  0407  346E               	retlw	031h
  1915  0408  3431               
  1916                           	retlw	079h
  1917  0409  3479               	retlw	0BEh
  1918  040A  34BE               	retlw	069h
  1919  040B  3469               	retlw	046h
  1920  040C  3446               
  1921                           	retlw	08Ch
  1922  040D  348C               	retlw	0B3h
  1923  040E  34B3               	retlw	061h
  1924  040F  3461               	retlw	0CBh
  1925  0410  34CB               
  1926                           	retlw	01Ah
  1927  0411  341A               	retlw	083h
  1928  0412  3483               	retlw	066h
  1929  0413  3466               	retlw	0BCh
  1930  0414  34BC               
  1931                           	retlw	0A0h
  1932  0415  34A0               	retlw	0D2h
  1933  0416  34D2               	retlw	06Fh
  1934  0417  346F               	retlw	025h
  1935  0418  3425               
  1936                           	retlw	036h
  1937  0419  3436               	retlw	0E2h
  1938  041A  34E2               	retlw	068h
  1939  041B  3468               	retlw	052h
  1940  041C  3452               
  1941                           	retlw	095h
  1942  041D  3495               	retlw	077h
  1943  041E  3477               	retlw	0Ch
  1944  041F  340C               	retlw	0CCh
  1945  0420  34CC               
  1946                           	retlw	03h
  1947  0421  3403               	retlw	047h
  1948  0422  3447               	retlw	0Bh
  1949  0423  340B               	retlw	0BBh
  1950  0424  34BB               
  1951                           	retlw	0B9h
  1952  0425  34B9               	retlw	016h
  1953  0426  3416               	retlw	02h
  1954  0427  3402               	retlw	022h
  1955  0428  3422               
  1956                           	retlw	02Fh
  1957  0429  342F               	retlw	026h
  1958  042A  3426               	retlw	05h
  1959  042B  3405               	retlw	055h
  1960  042C  3455               
  1961                           	retlw	0BEh
  1962  042D  34BE               	retlw	03Bh
  1963  042E  343B               	retlw	0BAh
  1964  042F  34BA               	retlw	0C5h
  1965  0430  34C5               
  1966                           	retlw	028h
  1967  0431  3428               	retlw	0Bh
  1968  0432  340B               	retlw	0BDh
  1969  0433  34BD               	retlw	0B2h
  1970  0434  34B2               
  1971                           	retlw	092h
  1972  0435  3492               	retlw	05Ah
  1973  0436  345A               	retlw	0B4h
  1974  0437  34B4               	retlw	02Bh
  1975  0438  342B               
  1976                           	retlw	04h
  1977  0439  3404               	retlw	06Ah
  1978  043A  346A               	retlw	0B3h
  1979  043B  34B3               	retlw	05Ch
  1980  043C  345C               
  1981                           	retlw	0A7h
  1982  043D  34A7               	retlw	0FFh
  1983  043E  34FF               	retlw	0D7h
  1984  043F  34D7               	retlw	0C2h
  1985  0440  34C2               
  1986                           	retlw	031h
  1987  0441  3431               	retlw	0CFh
  1988  0442  34CF               	retlw	0D0h
  1989  0443  34D0               	retlw	0B5h
  1990  0444  34B5               
  1991                           	retlw	08Bh
  1992  0445  348B               	retlw	09Eh
  1993  0446  349E               	retlw	0D9h
  1994  0447  34D9               	retlw	02Ch
  1995  0448  342C               
  1996                           	retlw	01Dh
  1997  0449  341D               	retlw	0AEh
  1998  044A  34AE               	retlw	0DEh
  1999  044B  34DE               	retlw	05Bh
  2000  044C  345B               
  2001                           	retlw	0B0h
  2002  044D  34B0               	retlw	0C2h
  2003  044E  34C2               	retlw	064h
  2004  044F  3464               	retlw	09Bh
  2005  0450  349B               
  2006                           	retlw	026h
  2007  0451  3426               	retlw	0F2h
  2008  0452  34F2               	retlw	063h
  2009  0453  3463               	retlw	0ECh
  2010  0454  34EC               
  2011                           	retlw	09Ch
  2012  0455  349C               	retlw	0A3h
  2013  0456  34A3               	retlw	06Ah
  2014  0457  346A               	retlw	075h
  2015  0458  3475               
  2016                           	retlw	0Ah
  2017  0459  340A               	retlw	093h
  2018  045A  3493               	retlw	06Dh
  2019  045B  346D               	retlw	02h
  2020  045C  3402               
  2021                           	retlw	0A9h
  2022  045D  34A9               	retlw	06h
  2023  045E  3406               	retlw	09h
  2024  045F  3409               	retlw	09Ch
  2025  0460  349C               
  2026                           	retlw	03Fh
  2027  0461  343F               	retlw	036h
  2028  0462  3436               	retlw	0Eh
  2029  0463  340E               	retlw	0EBh
  2030  0464  34EB               
  2031                           	retlw	085h
  2032  0465  3485               	retlw	067h
  2033  0466  3467               	retlw	07h
  2034  0467  3407               	retlw	072h
  2035  0468  3472               
  2036                           	retlw	013h
  2037  0469  3413               	retlw	057h
  2038  046A  3457               	retlw	0
  2039  046B  3400               	retlw	05h
  2040  046C  3405               
  2041                           	retlw	082h
  2042  046D  3482               	retlw	04Ah
  2043  046E  344A               	retlw	0BFh
  2044  046F  34BF               	retlw	095h
  2045  0470  3495               
  2046                           	retlw	014h
  2047  0471  3414               	retlw	07Ah
  2048  0472  347A               	retlw	0B8h
  2049  0473  34B8               	retlw	0E2h
  2050  0474  34E2               
  2051                           	retlw	0AEh
  2052  0475  34AE               	retlw	02Bh
  2053  0476  342B               	retlw	0B1h
  2054  0477  34B1               	retlw	07Bh
  2055  0478  347B               
  2056                           	retlw	038h
  2057  0479  3438               	retlw	01Bh
  2058  047A  341B               	retlw	0B6h
  2059  047B  34B6               	retlw	0Ch
  2060  047C  340C               
  2061                           	retlw	09Bh
  2062  047D  349B               	retlw	08Eh
  2063  047E  348E               	retlw	0D2h
  2064  047F  34D2               	retlw	092h
  2065  0480  3492               
  2066                           	retlw	0Dh
  2067  0481  340D               	retlw	0BEh
  2068  0482  34BE               	retlw	0D5h
  2069  0483  34D5               	retlw	0E5h
  2070  0484  34E5               
  2071                           	retlw	0B7h
  2072  0485  34B7               	retlw	0EFh
  2073  0486  34EF               	retlw	0DCh
  2074  0487  34DC               	retlw	07Ch
  2075  0488  347C               
  2076                           	retlw	021h
  2077  0489  3421               	retlw	0DFh
  2078  048A  34DF               	retlw	0DBh
  2079  048B  34DB               	retlw	0Bh
  2080  048C  340B               
  2081                           	retlw	0D4h
  2082  048D  34D4               	retlw	0D2h
  2083  048E  34D2               	retlw	0D3h
  2084  048F  34D3               	retlw	086h
  2085  0490  3486               
  2086                           	retlw	042h
  2087  0491  3442               	retlw	0E2h
  2088  0492  34E2               	retlw	0D4h
  2089  0493  34D4               	retlw	0F1h
  2090  0494  34F1               
  2091                           	retlw	0F8h
  2092  0495  34F8               	retlw	0B3h
  2093  0496  34B3               	retlw	0DDh
  2094  0497  34DD               	retlw	068h
  2095  0498  3468               
  2096                           	retlw	06Eh
  2097  0499  346E               	retlw	083h
  2098  049A  3483               	retlw	0DAh
  2099  049B  34DA               	retlw	01Fh
  2100  049C  341F               
  2101                           	retlw	0CDh
  2102  049D  34CD               	retlw	016h
  2103  049E  3416               	retlw	0BEh
  2104  049F  34BE               	retlw	081h
  2105  04A0  3481               
  2106                           	retlw	05Bh
  2107  04A1  345B               	retlw	026h
  2108  04A2  3426               	retlw	0B9h
  2109  04A3  34B9               	retlw	0F6h
  2110  04A4  34F6               
  2111                           	retlw	0E1h
  2112  04A5  34E1               	retlw	077h
  2113  04A6  3477               	retlw	0B0h
  2114  04A7  34B0               	retlw	06Fh
  2115  04A8  346F               
  2116                           	retlw	077h
  2117  04A9  3477               	retlw	047h
  2118  04AA  3447               	retlw	0B7h
  2119  04AB  34B7               	retlw	018h
  2120  04AC  3418               
  2121                           	retlw	0E6h
  2122  04AD  34E6               	retlw	05Ah
  2123  04AE  345A               	retlw	08h
  2124  04AF  3408               	retlw	088h
  2125  04B0  3488               
  2126                           	retlw	070h
  2127  04B1  3470               	retlw	06Ah
  2128  04B2  346A               	retlw	0Fh
  2129  04B3  340F               	retlw	0FFh
  2130  04B4  34FF               
  2131                           	retlw	0CAh
  2132  04B5  34CA               	retlw	03Bh
  2133  04B6  343B               	retlw	06h
  2134  04B7  3406               	retlw	066h
  2135  04B8  3466               
  2136                           	retlw	05Ch
  2137  04B9  345C               	retlw	0Bh
  2138  04BA  340B               	retlw	01h
  2139  04BB  3401               	retlw	011h
  2140  04BC  3411               
  2141                           	retlw	0FFh
  2142  04BD  34FF               	retlw	09Eh
  2143  04BE  349E               	retlw	065h
  2144  04BF  3465               	retlw	08Fh
  2145  04C0  348F               
  2146                           	retlw	069h
  2147  04C1  3469               	retlw	0AEh
  2148  04C2  34AE               	retlw	062h
  2149  04C3  3462               	retlw	0F8h
  2150  04C4  34F8               
  2151                           	retlw	0D3h
  2152  04C5  34D3               	retlw	0FFh
  2153  04C6  34FF               	retlw	06Bh
  2154  04C7  346B               	retlw	061h
  2155  04C8  3461               
  2156                           	retlw	045h
  2157  04C9  3445               	retlw	0CFh
  2158  04CA  34CF               	retlw	06Ch
  2159  04CB  346C               	retlw	016h
  2160  04CC  3416               
  2161                           	retlw	078h
  2162  04CD  3478               	retlw	0E2h
  2163  04CE  34E2               	retlw	0Ah
  2164  04CF  340A               	retlw	0A0h
  2165  04D0  34A0               
  2166                           	retlw	0EEh
  2167  04D1  34EE               	retlw	0D2h
  2168  04D2  34D2               	retlw	0Dh
  2169  04D3  340D               	retlw	0D7h
  2170  04D4  34D7               
  2171                           	retlw	054h
  2172  04D5  3454               	retlw	083h
  2173  04D6  3483               	retlw	04h
  2174  04D7  3404               	retlw	04Eh
  2175  04D8  344E               
  2176                           	retlw	0C2h
  2177  04D9  34C2               	retlw	0B3h
  2178  04DA  34B3               	retlw	03h
  2179  04DB  3403               	retlw	039h
  2180  04DC  3439               
  2181                           	retlw	061h
  2182  04DD  3461               	retlw	026h
  2183  04DE  3426               	retlw	067h
  2184  04DF  3467               	retlw	0A7h
  2185  04E0  34A7               
  2186                           	retlw	0F7h
  2187  04E1  34F7               	retlw	016h
  2188  04E2  3416               	retlw	060h
  2189  04E3  3460               	retlw	0D0h
  2190  04E4  34D0               
  2191                           	retlw	04Dh
  2192  04E5  344D               	retlw	047h
  2193  04E6  3447               	retlw	069h
  2194  04E7  3469               	retlw	049h
  2195  04E8  3449               
  2196                           	retlw	0DBh
  2197  04E9  34DB               	retlw	077h
  2198  04EA  3477               	retlw	06Eh
  2199  04EB  346E               	retlw	03Eh
  2200  04EC  343E               
  2201                           	retlw	04Ah
  2202  04ED  344A               	retlw	06Ah
  2203  04EE  346A               	retlw	0D1h
  2204  04EF  34D1               	retlw	0AEh
  2205  04F0  34AE               
  2206                           	retlw	0DCh
  2207  04F1  34DC               	retlw	05Ah
  2208  04F2  345A               	retlw	0D6h
  2209  04F3  34D6               	retlw	0D9h
  2210  04F4  34D9               
  2211                           	retlw	066h
  2212  04F5  3466               	retlw	0Bh
  2213  04F6  340B               	retlw	0DFh
  2214  04F7  34DF               	retlw	040h
  2215  04F8  3440               
  2216                           	retlw	0F0h
  2217  04F9  34F0               	retlw	03Bh
  2218  04FA  343B               	retlw	0D8h
  2219  04FB  34D8               	retlw	037h
  2220  04FC  3437               
  2221                           	retlw	053h
  2222  04FD  3453               	retlw	0AEh
  2223  04FE  34AE               	retlw	0BCh
  2224  04FF  34BC               	retlw	0A9h
  2225  0500  34A9               
  2226                           	retlw	0C5h
  2227  0501  34C5               	retlw	09Eh
  2228  0502  349E               	retlw	0BBh
  2229  0503  34BB               	retlw	0DEh
  2230  0504  34DE               
  2231                           	retlw	07Fh
  2232  0505  347F               	retlw	0CFh
  2233  0506  34CF               	retlw	0B2h
  2234  0507  34B2               	retlw	047h
  2235  0508  3447               
  2236                           	retlw	0E9h
  2237  0509  34E9               	retlw	0FFh
  2238  050A  34FF               	retlw	0B5h
  2239  050B  34B5               	retlw	030h
  2240  050C  3430               
  2241                           	retlw	01Ch
  2242  050D  341C               	retlw	0F2h
  2243  050E  34F2               	retlw	0BDh
  2244  050F  34BD               	retlw	0BDh
  2245  0510  34BD               
  2246                           	retlw	08Ah
  2247  0511  348A               	retlw	0C2h
  2248  0512  34C2               	retlw	0BAh
  2249  0513  34BA               	retlw	0CAh
  2250  0514  34CA               
  2251                           	retlw	030h
  2252  0515  3430               	retlw	093h
  2253  0516  3493               	retlw	0B3h
  2254  0517  34B3               	retlw	053h
  2255  0518  3453               
  2256                           	retlw	0A6h
  2257  0519  34A6               	retlw	0A3h
  2258  051A  34A3               	retlw	0B4h
  2259  051B  34B4               	retlw	024h
  2260  051C  3424               
  2261                           	retlw	05h
  2262  051D  3405               	retlw	036h
  2263  051E  3436               	retlw	0D0h
  2264  051F  34D0               	retlw	0BAh
  2265  0520  34BA               
  2266                           	retlw	093h
  2267  0521  3493               	retlw	06h
  2268  0522  3406               	retlw	0D7h
  2269  0523  34D7               	retlw	0CDh
  2270  0524  34CD               
  2271                           	retlw	029h
  2272  0525  3429               	retlw	057h
  2273  0526  3457               	retlw	0DEh
  2274  0527  34DE               	retlw	054h
  2275  0528  3454               
  2276                           	retlw	0BFh
  2277  0529  34BF               	retlw	067h
  2278  052A  3467               	retlw	0D9h
  2279  052B  34D9               	retlw	023h
  2280  052C  3423               
  2281                           	retlw	02Eh
  2282  052D  342E               	retlw	07Ah
  2283  052E  347A               	retlw	066h
  2284  052F  3466               	retlw	0B3h
  2285  0530  34B3               
  2286                           	retlw	0B8h
  2287  0531  34B8               	retlw	04Ah
  2288  0532  344A               	retlw	061h
  2289  0533  3461               	retlw	0C4h
  2290  0534  34C4               
  2291                           	retlw	02h
  2292  0535  3402               	retlw	01Bh
  2293  0536  341B               	retlw	068h
  2294  0537  3468               	retlw	05Dh
  2295  0538  345D               
  2296                           	retlw	094h
  2297  0539  3494               	retlw	02Bh
  2298  053A  342B               	retlw	06Fh
  2299  053B  346F               	retlw	02Ah
  2300  053C  342A               
  2301                           	retlw	037h
  2302  053D  3437               	retlw	0BEh
  2303  053E  34BE               	retlw	0Bh
  2304  053F  340B               	retlw	0B4h
  2305  0540  34B4               
  2306                           	retlw	0A1h
  2307  0541  34A1               	retlw	08Eh
  2308  0542  348E               	retlw	0Ch
  2309  0543  340C               	retlw	0C3h
  2310  0544  34C3               
  2311                           	retlw	01Bh
  2312  0545  341B               	retlw	0DFh
  2313  0546  34DF               	retlw	05h
  2314  0547  3405               	retlw	05Ah
  2315  0548  345A               
  2316                           	retlw	08Dh
  2317  0549  348D               	retlw	0EFh
  2318  054A  34EF               	retlw	02h
  2319  054B  3402               	retlw	02Dh
  2320  054C  342D               
  2321                           	global __end_of_crc32_lookup_table
  2322                           __end_of_crc32_lookup_table:
  2323  054D                     psect	stringtext2,class=STRCODE,delta=2,noexec
  2324                           global __pstringtext2
  2325                           __pstringtext2:
  2326  1005                     	file	"./crcLIBhex.h"
  2327                           	line	61
  2328                           _CRC32_POLYNOMIAL:
  2329  1005                     	retlw	0B7h
  2330  1005  34B7               	retlw	01Dh
  2331  1006  341D               	retlw	0C1h
  2332  1007  34C1               	retlw	04h
  2333  1008  3404               
  2334                           	global __end_of_CRC32_POLYNOMIAL
  2335                           __end_of_CRC32_POLYNOMIAL:
  2336  1009                     	global	_CRC16_INIT
  2337                           psect	stringtext3,class=STRCODE,delta=2,noexec
  2338                           global __pstringtext3
  2339                           __pstringtext3:
  2340  1009                     	file	"./crcLIBhex.h"
  2341                           	line	60
  2342                           _CRC16_INIT:
  2343  1009                     	retlw	0FFh
  2344  1009  34FF               	retlw	0FFh
  2345  100A  34FF               
  2346                           	global __end_of_CRC16_INIT
  2347                           __end_of_CRC16_INIT:
  2348  100B                     	global	_CRC16_POLYNOMIAL
  2349                           psect	stringtext4,class=STRCODE,delta=2,noexec
  2350                           global __pstringtext4
  2351                           __pstringtext4:
  2352  100B                     	file	"./crcLIBhex.h"
  2353                           	line	59
  2354                           _CRC16_POLYNOMIAL:
  2355  100B                     	retlw	05h
  2356  100B  3405               	retlw	080h
  2357  100C  3480               
  2358                           	global __end_of_CRC16_POLYNOMIAL
  2359                           __end_of_CRC16_POLYNOMIAL:
  2360  100D                     	global	_CRC8_INIT
  2361                           psect	stringtext5,class=STRCODE,delta=2,noexec
  2362                           global __pstringtext5
  2363                           __pstringtext5:
  2364  100D                     	file	"./crcLIBhex.h"
  2365                           	line	58
  2366                           _CRC8_INIT:
  2367  100D                     	retlw	low(0)
  2368  100D  3400               	retlw	high(0)
  2369  100E  3400               
  2370                           	global __end_of_CRC8_INIT
  2371                           __end_of_CRC8_INIT:
  2372  100F                     	global	_CRC8_POLYNOMIAL
  2373                           psect	stringtext6,class=STRCODE,delta=2,noexec
  2374                           global __pstringtext6
  2375                           __pstringtext6:
  2376  1000                     	file	"./crcLIBhex.h"
  2377                           	line	57
  2378                           _CRC8_POLYNOMIAL:
  2379  1000                     	retlw	018h
  2380  1000  3418               	retlw	0
  2381  1001  3400               
  2382                           	global __end_of_CRC8_POLYNOMIAL
  2383                           __end_of_CRC8_POLYNOMIAL:
  2384  1002                     	global	_crc32_lookup_table
  2385                           	global	_CRC16_INIT
  2386                           	global	_CRC16_POLYNOMIAL
  2387                           	global	_CRC8_INIT
  2388                           	global	_CRC8_POLYNOMIAL
  2389                           	global	CONVERT_Data_5Byte@F4678
  2390                           	global	CONVERT_Data_5Byte@F4676
  2391                           	global	ISR@F4700
  2392                           	global	CONVERT_Data_11Byte@F4692
  2393                           	global	CONVERT_Data_5Byte@F4681
  2394                           	global	CONVERT_Data_1@F4667
  2395                           	global	CONVERT_Data_1@F4665
  2396                           	global	main@F4712
  2397                           	global	CONVERT_Data_1@F4670
  2398                           	global	CONVERT_Data_6Byte@F4659
  2399                           	global	main@F4706
  2400                           	global	ISR@F4698
  2401                           	global	CONVERT_Data_11Byte@F4689
  2402                           	global	CONVERT_Data_11Byte@F4687
  2403                           	global	main@F4710
  2404                           	global	CONVERT_Data_6Byte@F4656
  2405                           	global	CONVERT_Data_6Byte@F4654
  2406                           	global	_INTCON
  2407                           _INTCON	set	0xB
  2408  000B                     	global	_PIR4bits
  2409                           _PIR4bits	set	0x14
  2410  0014                     	global	_PIR1bits
  2411                           _PIR1bits	set	0x11
  2412  0011                     	global	_OSCCON
  2413                           _OSCCON	set	0x99
  2414  0099                     	global	_PIE1bits
  2415                           _PIE1bits	set	0x91
  2416  0091                     	global	_TRISC6
  2417                           _TRISC6	set	0x476
  2418  0476                     	global	_TRISC7
  2419                           _TRISC7	set	0x477
  2420  0477                     	global	_TX1REG
  2421                           _TX1REG	set	0x19A
  2422  019A                     	global	_RC1REG
  2423                           _RC1REG	set	0x199
  2424  0199                     	global	_RC1STAbits
  2425                           _RC1STAbits	set	0x19D
  2426  019D                     	global	_SP1BRGL
  2427                           _SP1BRGL	set	0x19B
  2428  019B                     	global	_TX1STAbits
  2429                           _TX1STAbits	set	0x19E
  2430  019E                     	global	_TRISG1
  2431                           _TRISG1	set	0x1869
  2432  1869                     	global	_TRISG2
  2433                           _TRISG2	set	0x186A
  2434  186A                     	global	_ANSELG
  2435                           _ANSELG	set	0x40D
  2436  040D                     	global	_TX2REG
  2437                           _TX2REG	set	0x492
  2438  0492                     	global	_RC2REG
  2439                           _RC2REG	set	0x491
  2440  0491                     	global	_RC2STAbits
  2441                           _RC2STAbits	set	0x495
  2442  0495                     	global	_SP2BRGL
  2443                           _SP2BRGL	set	0x493
  2444  0493                     	global	_TX2STAbits
  2445                           _TX2STAbits	set	0x496
  2446  0496                     	
  2447                           STR_1:	
  2448  1002                     	retlw	79	;'O'
  2449  1002  344F               	retlw	75	;'K'
  2450  1003  344B               	retlw	0
  2451  1004  3400               psect	stringtext7,class=STRCODE,delta=2,noexec
  2452                           global __pstringtext7
  2453                           __pstringtext7:
  2454  0000                     STR_2	equ	STR_1+0
  2455  1002                     STR_3	equ	STR_1+0
  2456  1002                     ; #config settings
  2457                           global __CFG_FOSC$INTOSC
  2458                           __CFG_FOSC$INTOSC equ 0x0
  2459  0000                     global __CFG_WDTE$OFF
  2460                           __CFG_WDTE$OFF equ 0x0
  2461  0000                     global __CFG_PWRTE$OFF
  2462                           __CFG_PWRTE$OFF equ 0x0
  2463  0000                     global __CFG_MCLRE$ON
  2464                           __CFG_MCLRE$ON equ 0x0
  2465  0000                     global __CFG_CP$OFF
  2466                           __CFG_CP$OFF equ 0x0
  2467  0000                     global __CFG_CPD$OFF
  2468                           __CFG_CPD$OFF equ 0x0
  2469  0000                     global __CFG_BOREN$ON
  2470                           __CFG_BOREN$ON equ 0x0
  2471  0000                     global __CFG_CLKOUTEN$OFF
  2472                           __CFG_CLKOUTEN$OFF equ 0x0
  2473  0000                     global __CFG_IESO$ON
  2474                           __CFG_IESO$ON equ 0x0
  2475  0000                     global __CFG_FCMEN$ON
  2476                           __CFG_FCMEN$ON equ 0x0
  2477  0000                     global __CFG_WRT$OFF
  2478                           __CFG_WRT$OFF equ 0x0
  2479  0000                     global __CFG_VCAPEN$OFF
  2480                           __CFG_VCAPEN$OFF equ 0x0
  2481  0000                     global __CFG_PLLEN$ON
  2482                           __CFG_PLLEN$ON equ 0x0
  2483  0000                     global __CFG_STVREN$ON
  2484                           __CFG_STVREN$ON equ 0x0
  2485  0000                     global __CFG_BORV$LO
  2486                           __CFG_BORV$LO equ 0x0
  2487  0000                     global __CFG_LVP$ON
  2488                           __CFG_LVP$ON equ 0x0
  2489  0000                     	file	"C:\Users\vanda\AppData\Local\Temp\s1e4."
  2490                           	line	#
  2491                           psect cinit,class=CODE,delta=2
  2492                           global start_initialization
  2493                           start_initialization:
  2494  0130                     
  2495                           global __initialization
  2496                           __initialization:
  2497  0130                     psect	bssCOMMON,class=COMMON,space=1,noexec
  2498                           global __pbssCOMMON
  2499                           __pbssCOMMON:
  2500  007D                     _address_data:
  2501  007D                            ds      1
  2502  007D                     
  2503                           psect	bssBANK0,class=BANK0,space=1,noexec
  2504                           global __pbssBANK0
  2505                           __pbssBANK0:
  2506  005F                     CONVERT_Data_5Byte@F4678:
  2507  005F                            ds      5
  2508  005F                     
  2509                           CONVERT_Data_5Byte@F4676:
  2510  0064                            ds      5
  2511  0064                     
  2512                           ISR@F4700:
  2513  0069                            ds      2
  2514  0069                     
  2515                           CONVERT_Data_11Byte@F4692:
  2516  006B                            ds      2
  2517  006B                     
  2518                           CONVERT_Data_5Byte@F4681:
  2519  006D                            ds      2
  2520  006D                     
  2521                           psect	bssBANK1,class=BANK1,space=1,noexec
  2522                           global __pbssBANK1
  2523                           __pbssBANK1:
  2524  00D8                     CONVERT_Data_1@F4667:
  2525  00D8                            ds      6
  2526  00D8                     
  2527                           CONVERT_Data_1@F4665:
  2528  00DE                            ds      6
  2529  00DE                     
  2530                           main@F4712:
  2531  00E4                            ds      2
  2532  00E4                     
  2533                           CONVERT_Data_1@F4670:
  2534  00E6                            ds      2
  2535  00E6                     
  2536                           CONVERT_Data_6Byte@F4659:
  2537  00E8                            ds      2
  2538  00E8                     
  2539                           main@F4706:
  2540  00EA                            ds      1
  2541  00EA                     
  2542                           psect	bssBANK2,class=BANK2,space=1,noexec
  2543                           global __pbssBANK2
  2544                           __pbssBANK2:
  2545  0120                     ISR@F4698:
  2546  0120                            ds      13
  2547  0120                     
  2548                           CONVERT_Data_11Byte@F4689:
  2549  012D                            ds      11
  2550  012D                     
  2551                           CONVERT_Data_11Byte@F4687:
  2552  0138                            ds      11
  2553  0138                     
  2554                           main@F4710:
  2555  0143                            ds      8
  2556  0143                     
  2557                           CONVERT_Data_6Byte@F4656:
  2558  014B                            ds      6
  2559  014B                     
  2560                           CONVERT_Data_6Byte@F4654:
  2561  0151                            ds      6
  2562  0151                     
  2563                           	file	"C:\Users\vanda\AppData\Local\Temp\s1e4."
  2564                           	line	#
  2565                           psect clrtext,class=CODE,delta=2
  2566                           global clear_ram0
  2567                           ;	Called with FSR0 containing the base address, and
  2568                           ;	WREG with the size to clear
  2569                           clear_ram0:
  2570  07FA                     	clrwdt			;clear the watchdog before getting into this loop
  2571  07FA  0064               clrloop0:
  2572  07FB                     	clrf	indf0		;clear RAM location pointed to by FSR
  2573  07FB  0180               	addfsr	0,1
  2574  07FC  3101               	decfsz wreg		;Have we reached the end of clearing yet?
  2575  07FD  0B89               	goto clrloop0	;have we reached the end yet?
  2576  07FE  2FFB               	retlw	0		;all done for this memory range, return
  2577  07FF  3400               ; Clear objects allocated to COMMON
  2578                           psect cinit,class=CODE,delta=2,merge=1
  2579                           	global __pbssCOMMON
  2580                           	clrf	((__pbssCOMMON)+0)&07Fh
  2581  0130  01FD               ; Clear objects allocated to BANK0
  2582                           psect cinit,class=CODE,delta=2,merge=1
  2583                           	global __pbssBANK0
  2584                           	movlw	low(__pbssBANK0)
  2585  0131  305F               	movwf	fsr0l
  2586  0132  0084               	movlw	high(__pbssBANK0)
  2587  0133  3000               	movwf	fsr0h
  2588  0134  0085               	movlw	010h
  2589  0135  3010               	fcall	clear_ram0
  2590  0136  3187  27FA  3181   ; Clear objects allocated to BANK1
  2591                           psect cinit,class=CODE,delta=2,merge=1
  2592                           	global __pbssBANK1
  2593                           	movlw	low(__pbssBANK1)
  2594  0139  30D8               	movwf	fsr0l
  2595  013A  0084               	movlw	high(__pbssBANK1)
  2596  013B  3000               	movwf	fsr0h
  2597  013C  0085               	movlw	013h
  2598  013D  3013               	fcall	clear_ram0
  2599  013E  3187  27FA  3181   ; Clear objects allocated to BANK2
  2600                           psect cinit,class=CODE,delta=2,merge=1
  2601                           	global __pbssBANK2
  2602                           	movlw	low(__pbssBANK2)
  2603  0141  3020               	movwf	fsr0l
  2604  0142  0084               	movlw	high(__pbssBANK2)
  2605  0143  3001               	movwf	fsr0h
  2606  0144  0085               	movlw	037h
  2607  0145  3037               	fcall	clear_ram0
  2608  0146  3187  27FA  3181   psect cinit,class=CODE,delta=2,merge=1
  2609                           global end_of_initialization,__end_of__initialization
  2610                           
  2611                           ;End of C runtime variable initialization code
  2612                           
  2613                           end_of_initialization:
  2614  0149                     __end_of__initialization:
  2615  0149                     	bcf int$flags,0 ;clear compiler interrupt flag (level 1)
  2616  0149  107E               movlb 0
  2617  014A  0020               ljmp _main	;jump to C main() function
  2618  014B  318C  2CF3         psect	cstackBANK1,class=BANK1,space=1,noexec
  2619                           global __pcstackBANK1
  2620                           __pcstackBANK1:
  2621  00A0                     ??_UART_TX_Empty:	; 1 bytes @ 0x0
  2622  00A0                     ??_UART_Write:	; 1 bytes @ 0x0
  2623  00A0                     ??_UART2_Data_Ready:	; 1 bytes @ 0x0
  2624  00A0                     ??_UART2_Read:	; 1 bytes @ 0x0
  2625  00A0                     ?_UART2_Read_Text:	; 1 bytes @ 0x0
  2626  00A0                     ?_reflect_byte:	; 1 bytes @ 0x0
  2627  00A0                     ??_config_interrupt:	; 1 bytes @ 0x0
  2628  00A0                     	global	?_crc16
  2629                           ?_crc16:	; 2 bytes @ 0x0
  2630  00A0                     	global	?___aldiv
  2631                           ?___aldiv:	; 4 bytes @ 0x0
  2632  00A0                     	global	UART_Write@data
  2633                           UART_Write@data:	; 1 bytes @ 0x0
  2634  00A0                     	global	reflect_byte@byte_ref
  2635                           reflect_byte@byte_ref:	; 1 bytes @ 0x0
  2636  00A0                     	global	UART2_Read_Text@length
  2637                           UART2_Read_Text@length:	; 2 bytes @ 0x0
  2638  00A0                     	global	crc16@dataLen
  2639                           crc16@dataLen:	; 2 bytes @ 0x0
  2640  00A0                     	global	___aldiv@divisor
  2641                           ___aldiv@divisor:	; 4 bytes @ 0x0
  2642  00A0                     	ds	1
  2643  00A0                     ?_UART_Write_Text_Length:	; 1 bytes @ 0x1
  2644  00A1                     	global	reflect_byte@index
  2645                           reflect_byte@index:	; 1 bytes @ 0x1
  2646  00A1                     	global	UART_Write_Text_Length@length
  2647                           UART_Write_Text_Length@length:	; 2 bytes @ 0x1
  2648  00A1                     	ds	1
  2649  00A1                     ??_UART2_Read_Text:	; 1 bytes @ 0x2
  2650  00A2                     ??_crc16:	; 1 bytes @ 0x2
  2651  00A2                     ??_reflect_byte:	; 1 bytes @ 0x2
  2652  00A2                     	ds	1
  2653  00A2                     ??_UART_Write_Text_Length:	; 1 bytes @ 0x3
  2654  00A3                     	ds	1
  2655  00A3                     	global	UART_Write_Text_Length@str
  2656                           UART_Write_Text_Length@str:	; 1 bytes @ 0x4
  2657  00A4                     	global	UART2_Read_Text@Output
  2658                           UART2_Read_Text@Output:	; 1 bytes @ 0x4
  2659  00A4                     	global	___aldiv@dividend
  2660                           ___aldiv@dividend:	; 4 bytes @ 0x4
  2661  00A4                     	ds	1
  2662  00A4                     	global	reflect_byte@temp
  2663                           reflect_byte@temp:	; 1 bytes @ 0x5
  2664  00A5                     	global	UART_Write_Text_Length@count
  2665                           UART_Write_Text_Length@count:	; 2 bytes @ 0x5
  2666  00A5                     	global	UART2_Read_Text@i
  2667                           UART2_Read_Text@i:	; 2 bytes @ 0x5
  2668  00A5                     	ds	1
  2669  00A5                     	global	reflect_byte@j
  2670                           reflect_byte@j:	; 1 bytes @ 0x6
  2671  00A6                     	ds	1
  2672  00A6                     	global	reflect_byte@byte
  2673                           reflect_byte@byte:	; 1 bytes @ 0x7
  2674  00A7                     	ds	1
  2675  00A7                     ??___aldiv:	; 1 bytes @ 0x8
  2676  00A8                     	global	reflect_byte@i
  2677                           reflect_byte@i:	; 1 bytes @ 0x8
  2678  00A8                     	ds	1
  2679  00A8                     	global	___aldiv@counter
  2680                           ___aldiv@counter:	; 1 bytes @ 0x9
  2681  00A9                     	ds	1
  2682  00A9                     	global	___aldiv@sign
  2683                           ___aldiv@sign:	; 1 bytes @ 0xA
  2684  00AA                     	ds	1
  2685  00AA                     	global	___aldiv@quotient
  2686                           ___aldiv@quotient:	; 4 bytes @ 0xB
  2687  00AB                     	ds	1
  2688  00AB                     	global	crc16@iByte
  2689                           crc16@iByte:	; 2 bytes @ 0xC
  2690  00AC                     	ds	2
  2691  00AC                     	global	crc16@i
  2692                           crc16@i:	; 1 bytes @ 0xE
  2693  00AE                     	ds	1
  2694  00AE                     ?_UART_Init:	; 1 bytes @ 0xF
  2695  00AF                     ?_UART2_Init:	; 1 bytes @ 0xF
  2696  00AF                     	global	crc16@crcData
  2697                           crc16@crcData:	; 1 bytes @ 0xF
  2698  00AF                     	global	UART_Init@baudrate
  2699                           UART_Init@baudrate:	; 4 bytes @ 0xF
  2700  00AF                     	global	UART2_Init@baudrate
  2701                           UART2_Init@baudrate:	; 4 bytes @ 0xF
  2702  00AF                     	ds	1
  2703  00AF                     	global	crc16@crc
  2704                           crc16@crc:	; 4 bytes @ 0x10
  2705  00B0                     	ds	3
  2706  00B0                     ??_UART_Init:	; 1 bytes @ 0x13
  2707  00B3                     ??_UART2_Init:	; 1 bytes @ 0x13
  2708  00B3                     	ds	1
  2709  00B3                     ?_CONVERT_Data_1:	; 1 bytes @ 0x14
  2710  00B4                     	global	CONVERT_Data_1@output_ref
  2711                           CONVERT_Data_1@output_ref:	; 1 bytes @ 0x14
  2712  00B4                     	ds	1
  2713  00B4                     ??_CONVERT_Data_1:	; 1 bytes @ 0x15
  2714  00B5                     	ds	2
  2715  00B5                     	global	CONVERT_Data_1@txt
  2716                           CONVERT_Data_1@txt:	; 6 bytes @ 0x17
  2717  00B7                     	ds	4
  2718  00B7                     	global	UART_Init@x
  2719                           UART_Init@x:	; 2 bytes @ 0x1B
  2720  00BB                     	global	UART2_Init@x
  2721                           UART2_Init@x:	; 2 bytes @ 0x1B
  2722  00BB                     	ds	2
  2723  00BB                     	global	CONVERT_Data_1@input_ref
  2724                           CONVERT_Data_1@input_ref:	; 6 bytes @ 0x1D
  2725  00BD                     	ds	6
  2726  00BD                     	global	CONVERT_Data_1@output
  2727                           CONVERT_Data_1@output:	; 2 bytes @ 0x23
  2728  00C3                     	ds	2
  2729  00C3                     	global	CONVERT_Data_1@input
  2730                           CONVERT_Data_1@input:	; 1 bytes @ 0x25
  2731  00C5                     	ds	1
  2732  00C5                     	global	CONVERT_Data_1@crc
  2733                           CONVERT_Data_1@crc:	; 2 bytes @ 0x26
  2734  00C6                     	ds	2
  2735  00C6                     	global	CONVERT_Data_1@i
  2736                           CONVERT_Data_1@i:	; 2 bytes @ 0x28
  2737  00C8                     	ds	2
  2738  00C8                     ??_main:	; 1 bytes @ 0x2A
  2739  00CA                     	ds	1
  2740  00CA                     	global	main@j
  2741                           main@j:	; 2 bytes @ 0x2B
  2742  00CB                     	ds	2
  2743  00CB                     	global	main@temp
  2744                           main@temp:	; 1 bytes @ 0x2D
  2745  00CD                     	ds	1
  2746  00CD                     	global	main@data
  2747                           main@data:	; 8 bytes @ 0x2E
  2748  00CE                     	ds	8
  2749  00CE                     	global	main@crc_code
  2750                           main@crc_code:	; 2 bytes @ 0x36
  2751  00D6                     	ds	2
  2752  00D6                     psect	cstackCOMMON,class=COMMON,space=1,noexec
  2753                           global __pcstackCOMMON
  2754                           __pcstackCOMMON:
  2755  0070                     ?_UART_TX_Empty:	; 1 bytes @ 0x0
  2756  0070                     ?_UART_Data_Ready:	; 1 bytes @ 0x0
  2757  0070                     ??_UART_Data_Ready:	; 1 bytes @ 0x0
  2758  0070                     ?_UART_Read:	; 1 bytes @ 0x0
  2759  0070                     ??_UART_Read:	; 1 bytes @ 0x0
  2760  0070                     ?_UART_Write:	; 1 bytes @ 0x0
  2761  0070                     ?_UART2_Data_Ready:	; 1 bytes @ 0x0
  2762  0070                     ?_UART2_Read:	; 1 bytes @ 0x0
  2763  0070                     ?_UART2_Write:	; 1 bytes @ 0x0
  2764  0070                     ??_UART2_Write:	; 1 bytes @ 0x0
  2765  0070                     ?_UART2_Write_Text_Phan_Tu_Thu_7:	; 1 bytes @ 0x0
  2766  0070                     ?_UART2_Write_Text_Phan_Tu_Thu_8:	; 1 bytes @ 0x0
  2767  0070                     ?_UART2_Write_Text_Phan_Tu_Thu_13:	; 1 bytes @ 0x0
  2768  0070                     ?_config_interrupt:	; 1 bytes @ 0x0
  2769  0070                     ?_ISR:	; 1 bytes @ 0x0
  2770  0070                     ?_main:	; 1 bytes @ 0x0
  2771  0070                     ?i1_reflect_byte:	; 1 bytes @ 0x0
  2772  0070                     	global	?i1_crc16
  2773                           ?i1_crc16:	; 2 bytes @ 0x0
  2774  0070                     	global	UART2_Write@data
  2775                           UART2_Write@data:	; 1 bytes @ 0x0
  2776  0070                     	global	i1reflect_byte@byte_ref
  2777                           i1reflect_byte@byte_ref:	; 1 bytes @ 0x0
  2778  0070                     	global	i1crc16@dataLen
  2779                           i1crc16@dataLen:	; 2 bytes @ 0x0
  2780  0070                     	ds	1
  2781  0070                     ?_UART2_Write_Text:	; 1 bytes @ 0x1
  2782  0071                     ??_UART2_Write_Text_Phan_Tu_Thu_7:	; 1 bytes @ 0x1
  2783  0071                     ??_UART2_Write_Text_Phan_Tu_Thu_8:	; 1 bytes @ 0x1
  2784  0071                     ??_UART2_Write_Text_Phan_Tu_Thu_13:	; 1 bytes @ 0x1
  2785  0071                     	global	i1reflect_byte@index
  2786                           i1reflect_byte@index:	; 1 bytes @ 0x1
  2787  0071                     	global	UART2_Write_Text@text
  2788                           UART2_Write_Text@text:	; 2 bytes @ 0x1
  2789  0071                     	ds	1
  2790  0071                     ??i1_crc16:	; 1 bytes @ 0x2
  2791  0072                     ??i1_reflect_byte:	; 1 bytes @ 0x2
  2792  0072                     	global	UART2_Write_Text_Phan_Tu_Thu_7@text
  2793                           UART2_Write_Text_Phan_Tu_Thu_7@text:	; 1 bytes @ 0x2
  2794  0072                     	global	UART2_Write_Text_Phan_Tu_Thu_8@text
  2795                           UART2_Write_Text_Phan_Tu_Thu_8@text:	; 1 bytes @ 0x2
  2796  0072                     	global	UART2_Write_Text_Phan_Tu_Thu_13@text
  2797                           UART2_Write_Text_Phan_Tu_Thu_13@text:	; 1 bytes @ 0x2
  2798  0072                     	ds	1
  2799  0072                     ??_UART2_Write_Text:	; 1 bytes @ 0x3
  2800  0073                     	global	UART2_Write_Text_Phan_Tu_Thu_7@i
  2801                           UART2_Write_Text_Phan_Tu_Thu_7@i:	; 2 bytes @ 0x3
  2802  0073                     	global	UART2_Write_Text_Phan_Tu_Thu_8@i
  2803                           UART2_Write_Text_Phan_Tu_Thu_8@i:	; 2 bytes @ 0x3
  2804  0073                     	global	UART2_Write_Text_Phan_Tu_Thu_13@i
  2805                           UART2_Write_Text_Phan_Tu_Thu_13@i:	; 2 bytes @ 0x3
  2806  0073                     	ds	1
  2807  0073                     	global	UART2_Write_Text@i
  2808                           UART2_Write_Text@i:	; 2 bytes @ 0x4
  2809  0074                     	ds	1
  2810  0074                     	global	i1reflect_byte@byte
  2811                           i1reflect_byte@byte:	; 1 bytes @ 0x5
  2812  0075                     	ds	1
  2813  0075                     	global	i1reflect_byte@temp
  2814                           i1reflect_byte@temp:	; 1 bytes @ 0x6
  2815  0076                     	ds	1
  2816  0076                     	global	i1reflect_byte@j
  2817                           i1reflect_byte@j:	; 1 bytes @ 0x7
  2818  0077                     	ds	1
  2819  0077                     	global	i1reflect_byte@i
  2820                           i1reflect_byte@i:	; 1 bytes @ 0x8
  2821  0078                     	ds	4
  2822  0078                     ?_CONVERT_Data_5Byte:	; 1 bytes @ 0xC
  2823  007C                     ?_CONVERT_Data_11Byte:	; 1 bytes @ 0xC
  2824  007C                     ?i1_CONVERT_Data_1:	; 1 bytes @ 0xC
  2825  007C                     	global	CONVERT_Data_5Byte@output_ref
  2826                           CONVERT_Data_5Byte@output_ref:	; 1 bytes @ 0xC
  2827  007C                     	global	CONVERT_Data_11Byte@output_ref
  2828                           CONVERT_Data_11Byte@output_ref:	; 1 bytes @ 0xC
  2829  007C                     	global	i1CONVERT_Data_1@output_ref
  2830                           i1CONVERT_Data_1@output_ref:	; 1 bytes @ 0xC
  2831  007C                     	ds	1
  2832  007C                     psect	cstackBANK0,class=BANK0,space=1,noexec
  2833                           global __pcstackBANK0
  2834                           __pcstackBANK0:
  2835  0020                     	global	i1crc16@iByte
  2836                           i1crc16@iByte:	; 2 bytes @ 0x0
  2837  0020                     	ds	2
  2838  0020                     	global	i1crc16@crcData
  2839                           i1crc16@crcData:	; 1 bytes @ 0x2
  2840  0022                     	ds	1
  2841  0022                     	global	i1crc16@i
  2842                           i1crc16@i:	; 1 bytes @ 0x3
  2843  0023                     	ds	1
  2844  0023                     	global	i1crc16@crc
  2845                           i1crc16@crc:	; 4 bytes @ 0x4
  2846  0024                     	ds	4
  2847  0024                     ??_CONVERT_Data_5Byte:	; 1 bytes @ 0x8
  2848  0028                     ??_CONVERT_Data_11Byte:	; 1 bytes @ 0x8
  2849  0028                     ??i1_CONVERT_Data_1:	; 1 bytes @ 0x8
  2850  0028                     	ds	2
  2851  0028                     	global	i1CONVERT_Data_1@input
  2852                           i1CONVERT_Data_1@input:	; 1 bytes @ 0xA
  2853  002A                     	global	CONVERT_Data_5Byte@txt
  2854                           CONVERT_Data_5Byte@txt:	; 5 bytes @ 0xA
  2855  002A                     	global	CONVERT_Data_11Byte@txt
  2856                           CONVERT_Data_11Byte@txt:	; 11 bytes @ 0xA
  2857  002A                     	ds	1
  2858  002A                     	global	i1CONVERT_Data_1@input_ref
  2859                           i1CONVERT_Data_1@input_ref:	; 6 bytes @ 0xB
  2860  002B                     	ds	4
  2861  002B                     	global	CONVERT_Data_5Byte@input_ref
  2862                           CONVERT_Data_5Byte@input_ref:	; 5 bytes @ 0xF
  2863  002F                     	ds	2
  2864  002F                     	global	i1CONVERT_Data_1@txt
  2865                           i1CONVERT_Data_1@txt:	; 6 bytes @ 0x11
  2866  0031                     	ds	3
  2867  0031                     	global	CONVERT_Data_5Byte@input
  2868                           CONVERT_Data_5Byte@input:	; 1 bytes @ 0x14
  2869  0034                     	ds	1
  2870  0034                     	global	CONVERT_Data_5Byte@output
  2871                           CONVERT_Data_5Byte@output:	; 2 bytes @ 0x15
  2872  0035                     	global	CONVERT_Data_11Byte@input_ref
  2873                           CONVERT_Data_11Byte@input_ref:	; 11 bytes @ 0x15
  2874  0035                     	ds	2
  2875  0035                     	global	CONVERT_Data_5Byte@crc
  2876                           CONVERT_Data_5Byte@crc:	; 2 bytes @ 0x17
  2877  0037                     	global	i1CONVERT_Data_1@output
  2878                           i1CONVERT_Data_1@output:	; 2 bytes @ 0x17
  2879  0037                     	ds	2
  2880  0037                     	global	CONVERT_Data_5Byte@i
  2881                           CONVERT_Data_5Byte@i:	; 2 bytes @ 0x19
  2882  0039                     	global	i1CONVERT_Data_1@crc
  2883                           i1CONVERT_Data_1@crc:	; 2 bytes @ 0x19
  2884  0039                     	ds	2
  2885  0039                     	global	i1CONVERT_Data_1@i
  2886                           i1CONVERT_Data_1@i:	; 2 bytes @ 0x1B
  2887  003B                     	ds	5
  2888  003B                     	global	CONVERT_Data_11Byte@input
  2889                           CONVERT_Data_11Byte@input:	; 1 bytes @ 0x20
  2890  0040                     	ds	1
  2891  0040                     	global	CONVERT_Data_11Byte@output
  2892                           CONVERT_Data_11Byte@output:	; 2 bytes @ 0x21
  2893  0041                     	ds	2
  2894  0041                     	global	CONVERT_Data_11Byte@crc
  2895                           CONVERT_Data_11Byte@crc:	; 2 bytes @ 0x23
  2896  0043                     	ds	2
  2897  0043                     	global	CONVERT_Data_11Byte@i
  2898                           CONVERT_Data_11Byte@i:	; 2 bytes @ 0x25
  2899  0045                     	ds	2
  2900  0045                     ??_ISR:	; 1 bytes @ 0x27
  2901  0047                     	ds	5
  2902  0047                     	global	ISR@data1
  2903                           ISR@data1:	; 13 bytes @ 0x2C
  2904  004C                     	ds	13
  2905  004C                     	global	ISR@i
  2906                           ISR@i:	; 2 bytes @ 0x39
  2907  0059                     	ds	2
  2908  0059                     	global	ISR@len
  2909                           ISR@len:	; 1 bytes @ 0x3B
  2910  005B                     	ds	1
  2911  005B                     	global	ISR@flag
  2912                           ISR@flag:	; 1 bytes @ 0x3C
  2913  005C                     	ds	1
  2914  005C                     	global	ISR@crc_code_1
  2915                           ISR@crc_code_1:	; 2 bytes @ 0x3D
  2916  005D                     	ds	2
  2917  005D                     ;!
  2918                           ;!Data Sizes:
  2919                           ;!    Strings     3
  2920                           ;!    Constant    1036
  2921                           ;!    Data        0
  2922                           ;!    BSS         91
  2923                           ;!    Persistent  0
  2924                           ;!    Stack       0
  2925                           ;!
  2926                           ;!Auto Spaces:
  2927                           ;!    Space          Size  Autos    Used
  2928                           ;!    COMMON           14     13      14
  2929                           ;!    BANK0            80     63      79
  2930                           ;!    BANK1            80     56      75
  2931                           ;!    BANK2            80      0      55
  2932                           ;!    BANK3            80      0       0
  2933                           ;!    BANK4            80      0       0
  2934                           ;!    BANK5            80      0       0
  2935                           ;!    BANK6            16      0       0
  2936                           
  2937                           ;!
  2938                           ;!Pointer List with Targets:
  2939                           ;!
  2940                           ;!    CONVERT_Data_11Byte@output_ref	PTR unsigned char  size(1) Largest target is 2
  2941                           ;!		 -> ISR@crc_code_1(BANK0[2]), 
  2942                           ;!
  2943                           ;!    CONVERT_Data_11Byte@input	PTR unsigned char  size(1) Largest target is 13
  2944                           ;!		 -> ISR@data1(BANK0[13]), 
  2945                           ;!
  2946                           ;!    CONVERT_Data_5Byte@output_ref	PTR unsigned char  size(1) Largest target is 2
  2947                           ;!		 -> ISR@crc_code_1(BANK0[2]), 
  2948                           ;!
  2949                           ;!    CONVERT_Data_5Byte@input	PTR unsigned char  size(1) Largest target is 13
  2950                           ;!		 -> ISR@data1(BANK0[13]), 
  2951                           ;!
  2952                           ;!    CONVERT_Data_1@output_ref	PTR unsigned char  size(1) Largest target is 2
  2953                           ;!		 -> main@crc_code(BANK1[2]), ISR@crc_code_1(BANK0[2]), 
  2954                           ;!
  2955                           ;!    CONVERT_Data_1@input	PTR unsigned char  size(1) Largest target is 13
  2956                           ;!		 -> main@data(BANK1[8]), ISR@data1(BANK0[13]), 
  2957                           ;!
  2958                           ;!    reflect_byte@byte_ref	PTR unsigned char  size(1) Largest target is 11
  2959                           ;!		 -> main@crc_code(BANK1[2]), ISR@crc_code_1(BANK0[2]), CONVERT_Data_11Byte@input_ref
                                 (BANK0[11]), CONVERT_Data_5Byte@input_ref(BANK0[5]), 
  2960                           ;!		 -> CONVERT_Data_1@input_ref(BANK1[6]), CONVERT_Data_6Byte@input_ref(COMMON[6]), 
  2961                           ;!
  2962                           ;!    reflect_byte@byte	PTR unsigned char  size(1) Largest target is 13
  2963                           ;!		 -> main@data(BANK1[8]), ISR@data1(BANK0[13]), CONVERT_Data_11Byte@output(BANK0[2]),
                                  CONVERT_Data_5Byte@output(BANK0[2]), 
  2964                           ;!		 -> CONVERT_Data_1@output(BANK1[2]), CONVERT_Data_6Byte@output(COMMON[2]), 
  2965                           ;!
  2966                           ;!    crc16@crcData	PTR unsigned char  size(1) Largest target is 11
  2967                           ;!		 -> CONVERT_Data_11Byte@txt(BANK0[11]), CONVERT_Data_5Byte@txt(BANK0[5]), CONVERT_Da
                                 ta_1@txt(BANK1[6]), CONVERT_Data_6Byte@txt(COMMON[6]), 
  2968                           ;!
  2969                           ;!    UART2_Write_Text_Phan_Tu_Thu_13@text	PTR unsigned char  size(1) Largest target is 
                                 13
  2970                           ;!		 -> ISR@data1(BANK0[13]), 
  2971                           ;!
  2972                           ;!    UART2_Write_Text_Phan_Tu_Thu_8@text	PTR unsigned char  size(1) Largest target is 1
                                 3
  2973                           ;!		 -> ISR@data1(BANK0[13]), 
  2974                           ;!
  2975                           ;!    UART2_Write_Text_Phan_Tu_Thu_7@text	PTR unsigned char  size(1) Largest target is 1
                                 3
  2976                           ;!		 -> ISR@data1(BANK0[13]), 
  2977                           ;!
  2978                           ;!    UART2_Write_Text@text	PTR unsigned char  size(2) Largest target is 3
  2979                           ;!		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 
  2980                           ;!
  2981                           ;!    UART2_Read_Text@Output	PTR unsigned char  size(1) Largest target is 8
  2982                           ;!		 -> main@data(BANK1[8]), 
  2983                           ;!
  2984                           ;!    UART_Write_Text_Length@str	PTR unsigned char  size(1) Largest target is 8
  2985                           ;!		 -> main@data(BANK1[8]), 
  2986                           ;!
  2987                           
  2988                           
  2989                           ;!
  2990                           ;!Critical Paths under _main in COMMON
  2991                           ;!
  2992                           ;!    None.
  2993                           ;!
  2994                           ;!Critical Paths under _ISR in COMMON
  2995                           ;!
  2996                           ;!    _ISR->_CONVERT_Data_11Byte
  2997                           ;!    _ISR->_CONVERT_Data_5Byte
  2998                           ;!    _ISR->i1_CONVERT_Data_1
  2999                           ;!    i1_CONVERT_Data_1->i1_crc16
  3000                           ;!    _UART2_Write_Text_Phan_Tu_Thu_8->_UART2_Write
  3001                           ;!    _UART2_Write_Text_Phan_Tu_Thu_7->_UART2_Write
  3002                           ;!    _UART2_Write_Text_Phan_Tu_Thu_13->_UART2_Write
  3003                           ;!    _UART2_Write_Text->_UART2_Write
  3004                           ;!    _CONVERT_Data_5Byte->i1_crc16
  3005                           ;!    _CONVERT_Data_11Byte->i1_crc16
  3006                           ;!
  3007                           ;!Critical Paths under _main in BANK0
  3008                           ;!
  3009                           ;!    None.
  3010                           ;!
  3011                           ;!Critical Paths under _ISR in BANK0
  3012                           ;!
  3013                           ;!    _ISR->_CONVERT_Data_11Byte
  3014                           ;!    i1_CONVERT_Data_1->i1_crc16
  3015                           ;!    _CONVERT_Data_5Byte->i1_crc16
  3016                           ;!    _CONVERT_Data_11Byte->i1_crc16
  3017                           ;!
  3018                           ;!Critical Paths under _main in BANK1
  3019                           ;!
  3020                           ;!    _main->_CONVERT_Data_1
  3021                           ;!    _UART_Write_Text_Length->_UART_Write
  3022                           ;!    _UART_Init->___aldiv
  3023                           ;!    _UART2_Init->___aldiv
  3024                           ;!    _CONVERT_Data_1->_crc16
  3025                           ;!
  3026                           ;!Critical Paths under _ISR in BANK1
  3027                           ;!
  3028                           ;!    None.
  3029                           ;!
  3030                           ;!Critical Paths under _main in BANK2
  3031                           ;!
  3032                           ;!    None.
  3033                           ;!
  3034                           ;!Critical Paths under _ISR in BANK2
  3035                           ;!
  3036                           ;!    None.
  3037                           ;!
  3038                           ;!Critical Paths under _main in BANK3
  3039                           ;!
  3040                           ;!    None.
  3041                           ;!
  3042                           ;!Critical Paths under _ISR in BANK3
  3043                           ;!
  3044                           ;!    None.
  3045                           ;!
  3046                           ;!Critical Paths under _main in BANK4
  3047                           ;!
  3048                           ;!    None.
  3049                           ;!
  3050                           ;!Critical Paths under _ISR in BANK4
  3051                           ;!
  3052                           ;!    None.
  3053                           ;!
  3054                           ;!Critical Paths under _main in BANK5
  3055                           ;!
  3056                           ;!    None.
  3057                           ;!
  3058                           ;!Critical Paths under _ISR in BANK5
  3059                           ;!
  3060                           ;!    None.
  3061                           ;!
  3062                           ;!Critical Paths under _main in BANK6
  3063                           ;!
  3064                           ;!    None.
  3065                           ;!
  3066                           ;!Critical Paths under _ISR in BANK6
  3067                           ;!
  3068                           ;!    None.
  3069                           
  3070 ;;
  3071 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  3072 ;;
  3073                           
  3074                           ;!
  3075                           ;!Call Graph Tables:
  3076                           ;!
  3077                           ;! ---------------------------------------------------------------------------------
  3078                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  3079                           ;! ---------------------------------------------------------------------------------
  3080                           ;! (0) _main                                                16    16      0    5594
  3081                           ;!                                             42 BANK1     14    14      0
  3082                           ;!                     _CONVERT_Data_1
  3083                           ;!                   _UART2_Data_Ready
  3084                           ;!                         _UART2_Init
  3085                           ;!                    _UART2_Read_Text
  3086                           ;!                          _UART_Init
  3087                           ;!                      _UART_TX_Empty
  3088                           ;!             _UART_Write_Text_Length
  3089                           ;!                   _config_interrupt
  3090                           ;! ---------------------------------------------------------------------------------
  3091                           ;! (1) _config_interrupt                                     0     0      0       0
  3092                           ;! ---------------------------------------------------------------------------------
  3093                           ;! (1) _UART_Write_Text_Length                               6     4      2     223
  3094                           ;!                                              1 BANK1      6     4      2
  3095                           ;!                         _UART_Write
  3096                           ;! ---------------------------------------------------------------------------------
  3097                           ;! (2) _UART_Write                                           1     1      0      22
  3098                           ;!                                              0 BANK1      1     1      0
  3099                           ;! ---------------------------------------------------------------------------------
  3100                           ;! (1) _UART_TX_Empty                                        0     0      0       0
  3101                           ;! ---------------------------------------------------------------------------------
  3102                           ;! (1) _UART_Init                                           14    10      4    1140
  3103                           ;!                                             15 BANK1     14    10      4
  3104                           ;!                            ___aldiv
  3105                           ;! ---------------------------------------------------------------------------------
  3106                           ;! (1) _UART2_Read_Text                                      7     5      2     199
  3107                           ;!                                              0 BANK1      7     5      2
  3108                           ;!                         _UART2_Read
  3109                           ;! ---------------------------------------------------------------------------------
  3110                           ;! (2) _UART2_Read                                           0     0      0       0
  3111                           ;! ---------------------------------------------------------------------------------
  3112                           ;! (1) _UART2_Init                                          14    10      4    1140
  3113                           ;!                                             15 BANK1     14    10      4
  3114                           ;!                            ___aldiv
  3115                           ;! ---------------------------------------------------------------------------------
  3116                           ;! (2) ___aldiv                                             15     7      8     908
  3117                           ;!                                              0 BANK1     15     7      8
  3118                           ;! ---------------------------------------------------------------------------------
  3119                           ;! (1) _UART2_Data_Ready                                     0     0      0       0
  3120                           ;! ---------------------------------------------------------------------------------
  3121                           ;! (1) _CONVERT_Data_1                                      22    21      1    2673
  3122                           ;!                                             20 BANK1     22    21      1
  3123                           ;!                              _crc16
  3124                           ;!                       _reflect_byte
  3125                           ;! ---------------------------------------------------------------------------------
  3126                           ;! (2) _reflect_byte                                         9     7      2    1541
  3127                           ;!                                              0 BANK1      9     7      2
  3128                           ;! ---------------------------------------------------------------------------------
  3129                           ;! (2) _crc16                                               20    18      2     612
  3130                           ;!                                              0 BANK1     20    18      2
  3131                           ;! ---------------------------------------------------------------------------------
  3132                           ;! Estimated maximum stack depth 2
  3133                           ;! ---------------------------------------------------------------------------------
  3134                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  3135                           ;! ---------------------------------------------------------------------------------
  3136                           ;! (3) _ISR                                                 24    24      0    5564
  3137                           ;!                                             39 BANK0     24    24      0
  3138                           ;!                _CONVERT_Data_11Byte
  3139                           ;!                 _CONVERT_Data_5Byte
  3140                           ;!                   _UART2_Write_Text
  3141                           ;!    _UART2_Write_Text_Phan_Tu_Thu_13
  3142                           ;!     _UART2_Write_Text_Phan_Tu_Thu_7
  3143                           ;!     _UART2_Write_Text_Phan_Tu_Thu_8
  3144                           ;!                    _UART_Data_Ready
  3145                           ;!                          _UART_Read
  3146                           ;!                   i1_CONVERT_Data_1
  3147                           ;! ---------------------------------------------------------------------------------
  3148                           ;! (4) i1_CONVERT_Data_1                                    22    21      1    1237
  3149                           ;!                                             12 COMMON     1     0      1
  3150                           ;!                                              8 BANK0     21    21      0
  3151                           ;!                            i1_crc16
  3152                           ;!                     i1_reflect_byte
  3153                           ;! ---------------------------------------------------------------------------------
  3154                           ;! (4) _UART_Read                                            0     0      0       0
  3155                           ;! ---------------------------------------------------------------------------------
  3156                           ;! (4) _UART_Data_Ready                                      0     0      0       0
  3157                           ;! ---------------------------------------------------------------------------------
  3158                           ;! (4) _UART2_Write_Text_Phan_Tu_Thu_8                       4     4      0     145
  3159                           ;!                                              1 COMMON     4     4      0
  3160                           ;!                        _UART2_Write
  3161                           ;! ---------------------------------------------------------------------------------
  3162                           ;! (4) _UART2_Write_Text_Phan_Tu_Thu_7                       4     4      0     145
  3163                           ;!                                              1 COMMON     4     4      0
  3164                           ;!                        _UART2_Write
  3165                           ;! ---------------------------------------------------------------------------------
  3166                           ;! (4) _UART2_Write_Text_Phan_Tu_Thu_13                      4     4      0     145
  3167                           ;!                                              1 COMMON     4     4      0
  3168                           ;!                        _UART2_Write
  3169                           ;! ---------------------------------------------------------------------------------
  3170                           ;! (4) _UART2_Write_Text                                     5     3      2     340
  3171                           ;!                                              1 COMMON     5     3      2
  3172                           ;!                        _UART2_Write
  3173                           ;! ---------------------------------------------------------------------------------
  3174                           ;! (5) _UART2_Write                                          1     1      0      22
  3175                           ;!                                              0 COMMON     1     1      0
  3176                           ;! ---------------------------------------------------------------------------------
  3177                           ;! (4) _CONVERT_Data_5Byte                                  20    19      1    1324
  3178                           ;!                                             12 COMMON     1     0      1
  3179                           ;!                                              8 BANK0     19    19      0
  3180                           ;!                            i1_crc16
  3181                           ;!                     i1_reflect_byte
  3182                           ;! ---------------------------------------------------------------------------------
  3183                           ;! (4) _CONVERT_Data_11Byte                                 32    31      1    1324
  3184                           ;!                                             12 COMMON     1     0      1
  3185                           ;!                                              8 BANK0     31    31      0
  3186                           ;!                            i1_crc16
  3187                           ;!                     i1_reflect_byte
  3188                           ;! ---------------------------------------------------------------------------------
  3189                           ;! (5) i1_reflect_byte                                       9     7      2     581
  3190                           ;!                                              0 COMMON     9     7      2
  3191                           ;! ---------------------------------------------------------------------------------
  3192                           ;! (5) i1_crc16                                             20    18      2     306
  3193                           ;!                                              0 COMMON    12    10      2
  3194                           ;!                                              0 BANK0      8     8      0
  3195                           ;! ---------------------------------------------------------------------------------
  3196                           ;! Estimated maximum stack depth 5
  3197                           ;! ---------------------------------------------------------------------------------
  3198                           ;!
  3199                           ;! Call Graph Graphs:
  3200                           ;!
  3201                           ;! _main (ROOT)
  3202                           ;!   _CONVERT_Data_1
  3203                           ;!     _crc16
  3204                           ;!     _reflect_byte
  3205                           ;!   _UART2_Data_Ready
  3206                           ;!   _UART2_Init
  3207                           ;!     ___aldiv
  3208                           ;!   _UART2_Read_Text
  3209                           ;!     _UART2_Read
  3210                           ;!   _UART_Init
  3211                           ;!     ___aldiv
  3212                           ;!   _UART_TX_Empty
  3213                           ;!   _UART_Write_Text_Length
  3214                           ;!     _UART_Write
  3215                           ;!   _config_interrupt
  3216                           ;!
  3217                           ;! _ISR (ROOT)
  3218                           ;!   _CONVERT_Data_11Byte
  3219                           ;!     i1_crc16
  3220                           ;!     i1_reflect_byte
  3221                           ;!   _CONVERT_Data_5Byte
  3222                           ;!     i1_crc16
  3223                           ;!     i1_reflect_byte
  3224                           ;!   _UART2_Write_Text
  3225                           ;!     _UART2_Write
  3226                           ;!   _UART2_Write_Text_Phan_Tu_Thu_13
  3227                           ;!     _UART2_Write
  3228                           ;!   _UART2_Write_Text_Phan_Tu_Thu_7
  3229                           ;!     _UART2_Write
  3230                           ;!   _UART2_Write_Text_Phan_Tu_Thu_8
  3231                           ;!     _UART2_Write
  3232                           ;!   _UART_Data_Ready
  3233                           ;!   _UART_Read
  3234                           ;!   i1_CONVERT_Data_1
  3235                           ;!     i1_crc16
  3236                           ;!     i1_reflect_byte
  3237                           ;!
  3238                           
  3239                           ;! Address spaces:
  3240                           
  3241                           ;!Name               Size   Autos  Total    Cost      Usage
  3242                           ;!BIGRAM             1F0      0       0       0        0.0%
  3243                           ;!EEDATA             100      0       0       0        0.0%
  3244                           ;!NULL                 0      0       0       0        0.0%
  3245                           ;!CODE                 0      0       0       0        0.0%
  3246                           ;!BITCOMMON            E      0       0       1        0.0%
  3247                           ;!BITSFR0              0      0       0       1        0.0%
  3248                           ;!SFR0                 0      0       0       1        0.0%
  3249                           ;!COMMON               E      D       E       2      100.0%
  3250                           ;!BITSFR1              0      0       0       2        0.0%
  3251                           ;!SFR1                 0      0       0       2        0.0%
  3252                           ;!BITSFR2              0      0       0       3        0.0%
  3253                           ;!SFR2                 0      0       0       3        0.0%
  3254                           ;!STACK                0      0       0       3        0.0%
  3255                           ;!BITSFR3              0      0       0       4        0.0%
  3256                           ;!SFR3                 0      0       0       4        0.0%
  3257                           ;!ABS                  0      0      DF       4        0.0%
  3258                           ;!BITBANK0            50      0       0       5        0.0%
  3259                           ;!BITSFR4              0      0       0       5        0.0%
  3260                           ;!SFR4                 0      0       0       5        0.0%
  3261                           ;!BANK0               50     3F      4F       6       98.8%
  3262                           ;!BITSFR5              0      0       0       6        0.0%
  3263                           ;!SFR5                 0      0       0       6        0.0%
  3264                           ;!BITBANK1            50      0       0       7        0.0%
  3265                           ;!BITSFR6              0      0       0       7        0.0%
  3266                           ;!SFR6                 0      0       0       7        0.0%
  3267                           ;!BANK1               50     38      4B       8       93.8%
  3268                           ;!BITSFR7              0      0       0       8        0.0%
  3269                           ;!SFR7                 0      0       0       8        0.0%
  3270                           ;!BITBANK2            50      0       0       9        0.0%
  3271                           ;!BITSFR8              0      0       0       9        0.0%
  3272                           ;!SFR8                 0      0       0       9        0.0%
  3273                           ;!BANK2               50      0      37      10       68.8%
  3274                           ;!BITSFR9              0      0       0      10        0.0%
  3275                           ;!SFR9                 0      0       0      10        0.0%
  3276                           ;!BITBANK3            50      0       0      11        0.0%
  3277                           ;!BITSFR10             0      0       0      11        0.0%
  3278                           ;!SFR10                0      0       0      11        0.0%
  3279                           ;!BANK3               50      0       0      12        0.0%
  3280                           ;!BITSFR11             0      0       0      12        0.0%
  3281                           ;!SFR11                0      0       0      12        0.0%
  3282                           ;!BITBANK4            50      0       0      13        0.0%
  3283                           ;!BITSFR12             0      0       0      13        0.0%
  3284                           ;!SFR12                0      0       0      13        0.0%
  3285                           ;!BANK4               50      0       0      14        0.0%
  3286                           ;!BITSFR13             0      0       0      14        0.0%
  3287                           ;!SFR13                0      0       0      14        0.0%
  3288                           ;!BITBANK5            50      0       0      15        0.0%
  3289                           ;!BITSFR14             0      0       0      15        0.0%
  3290                           ;!SFR14                0      0       0      15        0.0%
  3291                           ;!BANK5               50      0       0      16        0.0%
  3292                           ;!BITSFR15             0      0       0      16        0.0%
  3293                           ;!SFR15                0      0       0      16        0.0%
  3294                           ;!BITBANK6            10      0       0      17        0.0%
  3295                           ;!BITSFR16             0      0       0      17        0.0%
  3296                           ;!SFR16                0      0       0      17        0.0%
  3297                           ;!BANK6               10      0       0      18        0.0%
  3298                           ;!BITSFR17             0      0       0      18        0.0%
  3299                           ;!SFR17                0      0       0      18        0.0%
  3300                           ;!BITSFR18             0      0       0      19        0.0%
  3301                           ;!SFR18                0      0       0      19        0.0%
  3302                           ;!DATA                 0      0      DF      19        0.0%
  3303                           ;!BITSFR19             0      0       0      20        0.0%
  3304                           ;!SFR19                0      0       0      20        0.0%
  3305                           ;!BITSFR20             0      0       0      21        0.0%
  3306                           ;!SFR20                0      0       0      21        0.0%
  3307                           ;!BITSFR21             0      0       0      22        0.0%
  3308                           ;!SFR21                0      0       0      22        0.0%
  3309                           ;!BITSFR22             0      0       0      23        0.0%
  3310                           ;!SFR22                0      0       0      23        0.0%
  3311                           ;!BITSFR23             0      0       0      24        0.0%
  3312                           ;!SFR23                0      0       0      24        0.0%
  3313                           ;!BITSFR24             0      0       0      25        0.0%
  3314                           ;!SFR24                0      0       0      25        0.0%
  3315                           ;!BITSFR25             0      0       0      26        0.0%
  3316                           ;!SFR25                0      0       0      26        0.0%
  3317                           ;!BITSFR26             0      0       0      27        0.0%
  3318                           ;!SFR26                0      0       0      27        0.0%
  3319                           ;!BITSFR27             0      0       0      28        0.0%
  3320                           ;!SFR27                0      0       0      28        0.0%
  3321                           ;!BITSFR28             0      0       0      29        0.0%
  3322                           ;!SFR28                0      0       0      29        0.0%
  3323                           ;!BITSFR29             0      0       0      30        0.0%
  3324                           ;!SFR29                0      0       0      30        0.0%
  3325                           ;!BITSFR30             0      0       0      31        0.0%
  3326                           ;!SFR30                0      0       0      31        0.0%
  3327                           ;!BITSFR31             0      0       0      32        0.0%
  3328                           ;!SFR31                0      0       0      32        0.0%
  3329                           
  3330                           	global	_main
  3331                           
  3332 ;; *************** function _main *****************
  3333 ;; Defined at:
  3334 ;;		line 255 in file "main.c"
  3335 ;; Parameters:    Size  Location     Type
  3336 ;;		None
  3337 ;; Auto vars:     Size  Location     Type
  3338 ;;  data            8   46[BANK1 ] unsigned char [8]
  3339 ;;  crc_code        2   54[BANK1 ] unsigned char [2]
  3340 ;;  j               2   43[BANK1 ] unsigned int 
  3341 ;;  i               2    0        unsigned int 
  3342 ;;  temp            1   45[BANK1 ] unsigned char [1]
  3343 ;; Return value:  Size  Location     Type
  3344 ;;                  1    wreg      void 
  3345 ;; Registers used:
  3346 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3347 ;; Tracked objects:
  3348 ;;		On entry : B1F/0
  3349 ;;		On exit  : 0/0
  3350 ;;		Unchanged: 0/0
  3351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3352 ;;      Params:         0       0       0       0       0       0       0       0
  3353 ;;      Locals:         0       0      13       0       0       0       0       0
  3354 ;;      Temps:          0       0       1       0       0       0       0       0
  3355 ;;      Totals:         0       0      14       0       0       0       0       0
  3356 ;;Total ram usage:       14 bytes
  3357 ;; Hardware stack levels required when called:    5
  3358 ;; This function calls:
  3359 ;;		_CONVERT_Data_1
  3360 ;;		_UART2_Data_Ready
  3361 ;;		_UART2_Init
  3362 ;;		_UART2_Read_Text
  3363 ;;		_UART_Init
  3364 ;;		_UART_TX_Empty
  3365 ;;		_UART_Write_Text_Length
  3366 ;;		_config_interrupt
  3367 ;; This function is called by:
  3368 ;;		Startup code after reset
  3369 ;; This function uses a non-reentrant model
  3370 ;;
  3371                           psect	maintext,global,class=CODE,delta=2,merge=1,split=1,group=0
  3372                           	file	"main.c"
  3373                           	line	255
  3374                           global __pmaintext
  3375                           __pmaintext:	;psect for function _main
  3376  0CF3                     psect	maintext
  3377                           	file	"main.c"
  3378                           	line	255
  3379                           	global	__size_of_main
  3380                           	__size_of_main	equ	__end_of_main-_main
  3381  0072                     	
  3382                           _main:	
  3383  0CF3                     ;incstack = 0
  3384                           	opt	stack 11
  3385                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3386                           	line	258
  3387                           	
  3388                           l2102:	
  3389  0CF3                     ;main.c: 258:     OSCCON = 0b01111010;
  3390                           	movlw	low(07Ah)
  3391  0CF3  307A               	movlb 1	; select bank1
  3392  0CF4  0021               	movwf	(153)^080h	;volatile
  3393  0CF5  0099               	line	259
  3394                           ;main.c: 259:     unsigned char temp[1] = "";
  3395                           	movf	(main@F4706)^080h,w
  3396  0CF6  086A               	movwf	(??_main+0)^080h+0
  3397  0CF7  00CA               	movf	(??_main+0)^080h+0,w
  3398  0CF8  084A               	movwf	(main@temp)^080h
  3399  0CF9  00CD               	line	260
  3400                           	
  3401                           l2104:	
  3402  0CFA                     ;main.c: 260:     unsigned int i, j = 0;
  3403                           	clrf	(main@j)^080h
  3404  0CFA  01CB               	clrf	(main@j+1)^080h
  3405  0CFB  01CC               	line	262
  3406                           	
  3407                           l2106:	
  3408  0CFC                     ;main.c: 262:     UART_Init(9600);
  3409                           	movlw	0
  3410  0CFC  3000               	movwf	(UART_Init@baudrate+3)^080h
  3411  0CFD  00B2               	movlw	0
  3412  0CFE  3000               	movwf	(UART_Init@baudrate+2)^080h
  3413  0CFF  00B1               	movlw	025h
  3414  0D00  3025               	movwf	(UART_Init@baudrate+1)^080h
  3415  0D01  00B0               	movlw	080h
  3416  0D02  3080               	movwf	(UART_Init@baudrate)^080h
  3417  0D03  00AF               
  3418                           	fcall	_UART_Init
  3419  0D04  318F  2751  318C   	line	263
  3420                           	
  3421                           l2108:	
  3422  0D07                     ;main.c: 263:     UART2_Init(9600);
  3423                           	movlw	0
  3424  0D07  3000               	movlb 1	; select bank1
  3425  0D08  0021               	movwf	(UART2_Init@baudrate+3)^080h
  3426  0D09  00B2               	movlw	0
  3427  0D0A  3000               	movwf	(UART2_Init@baudrate+2)^080h
  3428  0D0B  00B1               	movlw	025h
  3429  0D0C  3025               	movwf	(UART2_Init@baudrate+1)^080h
  3430  0D0D  00B0               	movlw	080h
  3431  0D0E  3080               	movwf	(UART2_Init@baudrate)^080h
  3432  0D0F  00AF               
  3433                           	fcall	_UART2_Init
  3434  0D10  3185  254D  318C   	line	264
  3435                           	
  3436                           l2110:	
  3437  0D13                     ;main.c: 264:     config_interrupt();
  3438                           	fcall	_config_interrupt
  3439  0D13  318B  2309  318C   	goto	l2112
  3440  0D16  2D17               	line	265
  3441                           ;main.c: 265:     while (1) {
  3442                           	
  3443                           l300:	
  3444  0D17                     	line	267
  3445                           	
  3446                           l2112:	
  3447  0D17                     ;main.c: 267:         unsigned char data[8] = "";
  3448                           	movlw	low(main@F4710)
  3449  0D17  3043               	movwf	fsr1l
  3450  0D18  0086               	movlw	high(main@F4710)
  3451  0D19  3001               	movwf	fsr1h
  3452  0D1A  0087               	movlw	low(main@data)
  3453  0D1B  30CE               	movwf	fsr0l
  3454  0D1C  0084               	movlw	high(main@data)
  3455  0D1D  3000               	movwf	fsr0h
  3456  0D1E  0085               	movlw	8
  3457  0D1F  3008               	movlb 1	; select bank1
  3458  0D20  0021               	movwf	(??_main+0)^080h+0
  3459  0D21  00CA               u2360:
  3460  0D22                     	moviw	fsr1++
  3461  0D22  0016               	movwi	fsr0++
  3462  0D23  001A               	decfsz	(??_main+0)^080h+0,f
  3463  0D24  0BCA               	goto	u2360
  3464  0D25  2D22               	line	268
  3465                           	
  3466                           l2114:	
  3467  0D26                     ;main.c: 268:         unsigned char crc_code[2] = "";
  3468                           	movf	(main@F4712+1)^080h,w
  3469  0D26  0865               	movwf	(main@crc_code+1)^080h
  3470  0D27  00D7               	movf	(main@F4712)^080h,w
  3471  0D28  0864               	movwf	(main@crc_code)^080h
  3472  0D29  00D6               	line	269
  3473                           	
  3474                           l2116:	
  3475  0D2A                     ;main.c: 269:         if (UART2_Data_Ready()) {
  3476                           	fcall	_UART2_Data_Ready
  3477  0D2A  318B  2314  318C   	xorlw	low(0)&0ffh
  3478  0D2D  3A00               	skipnz
  3479  0D2E  1903               	goto	u2371
  3480  0D2F  2D31               	goto	u2370
  3481  0D30  2D32               u2371:
  3482  0D31                     	goto	l2112
  3483  0D31  2D17               u2370:
  3484  0D32                     	line	270
  3485                           	
  3486                           l2118:	
  3487  0D32                     ;main.c: 270:             UART2_Read_Text(data, 6);
  3488                           	movlw	06h
  3489  0D32  3006               	movlb 1	; select bank1
  3490  0D33  0021               	movwf	(UART2_Read_Text@length)^080h
  3491  0D34  00A0               	movlw	0
  3492  0D35  3000               	movwf	((UART2_Read_Text@length)^080h)+1
  3493  0D36  00A1               	movlw	(low(main@data|((0x0)<<8)))&0ffh
  3494  0D37  30CE               	fcall	_UART2_Read_Text
  3495  0D38  318B  237C  318C   	line	271
  3496                           	
  3497                           l2120:	
  3498  0D3B                     ;main.c: 271:             CONVERT_Data_1(data, crc_code);
  3499                           	movlw	(low(main@crc_code|((0x0)<<8)))&0ffh
  3500  0D3B  30D6               	movlb 1	; select bank1
  3501  0D3C  0021               	movwf	(??_main+0)^080h+0
  3502  0D3D  00CA               	movf	(??_main+0)^080h+0,w
  3503  0D3E  084A               	movwf	(CONVERT_Data_1@output_ref)^080h
  3504  0D3F  00B4               	movlw	(low(main@data|((0x0)<<8)))&0ffh
  3505  0D40  30CE               	fcall	_CONVERT_Data_1
  3506  0D41  318E  2659  318C   	line	272
  3507                           	
  3508                           l2122:	
  3509  0D44                     ;main.c: 272:             data[6] = crc_code[0];
  3510                           	movlb 1	; select bank1
  3511  0D44  0021               	movf	(main@crc_code)^080h,w
  3512  0D45  0856               	movwf	(??_main+0)^080h+0
  3513  0D46  00CA               	movf	(??_main+0)^080h+0,w
  3514  0D47  084A               	movwf	0+(main@data)^080h+06h
  3515  0D48  00D4               	line	273
  3516                           	
  3517                           l2124:	
  3518  0D49                     ;main.c: 273:             data[7] = crc_code[1];
  3519                           	movf	0+(main@crc_code)^080h+01h,w
  3520  0D49  0857               	movwf	(??_main+0)^080h+0
  3521  0D4A  00CA               	movf	(??_main+0)^080h+0,w
  3522  0D4B  084A               	movwf	0+(main@data)^080h+07h
  3523  0D4C  00D5               	line	274
  3524                           	
  3525                           l2126:	
  3526  0D4D                     ;main.c: 274:             data[8] = '\0';
  3527                           	clrf	0+(main@data)^080h+08h
  3528  0D4D  01D6               	line	277
  3529                           	
  3530                           l2128:	
  3531  0D4E                     ;main.c: 277:             if (UART_TX_Empty()) {
  3532                           	fcall	_UART_TX_Empty
  3533  0D4E  318B  2304  318C   	xorlw	low(0)&0ffh
  3534  0D51  3A00               	skipnz
  3535  0D52  1903               	goto	u2381
  3536  0D53  2D55               	goto	u2380
  3537  0D54  2D56               u2381:
  3538  0D55                     	goto	l2112
  3539  0D55  2D17               u2380:
  3540  0D56                     	line	278
  3541                           	
  3542                           l2130:	
  3543  0D56                     ;main.c: 278:                 UART_Write_Text_Length(data, 8);
  3544                           	movlw	08h
  3545  0D56  3008               	movlb 1	; select bank1
  3546  0D57  0021               	movwf	(UART_Write_Text_Length@length)^080h
  3547  0D58  00A1               	movlw	0
  3548  0D59  3000               	movwf	((UART_Write_Text_Length@length)^080h)+1
  3549  0D5A  00A2               	movlw	(low(main@data|((0x0)<<8)))&0ffh
  3550  0D5B  30CE               	fcall	_UART_Write_Text_Length
  3551  0D5C  318B  239F  318C   	goto	l2112
  3552  0D5F  2D17               	line	280
  3553                           ;main.c: 280:             }
  3554                           	
  3555                           l306:	
  3556  0D60                     	goto	l2112
  3557  0D60  2D17               	line	281
  3558                           ;main.c: 281:         }
  3559                           	
  3560                           l305:	
  3561  0D61                     	goto	l2112
  3562  0D61  2D17               	line	306
  3563                           ;main.c: 306:     }
  3564                           	
  3565                           l307:	
  3566  0D62                     	goto	l2112
  3567  0D62  2D17               	
  3568                           l308:	
  3569  0D63                     	line	308
  3570                           	
  3571                           l309:	
  3572  0D63                     	global	start
  3573                           	ljmp	start
  3574  0D63  3181  292E         	opt stack 0
  3575                           GLOBAL	__end_of_main
  3576                           	__end_of_main:
  3577  0D65                     	signat	_main,89
  3578                           	global	_config_interrupt
  3579                           
  3580 ;; *************** function _config_interrupt *****************
  3581 ;; Defined at:
  3582 ;;		line 156 in file "main.c"
  3583 ;; Parameters:    Size  Location     Type
  3584 ;;		None
  3585 ;; Auto vars:     Size  Location     Type
  3586 ;;		None
  3587 ;; Return value:  Size  Location     Type
  3588 ;;                  1    wreg      void 
  3589 ;; Registers used:
  3590 ;;		wreg
  3591 ;; Tracked objects:
  3592 ;;		On entry : 0/0
  3593 ;;		On exit  : 0/0
  3594 ;;		Unchanged: 0/0
  3595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3596 ;;      Params:         0       0       0       0       0       0       0       0
  3597 ;;      Locals:         0       0       0       0       0       0       0       0
  3598 ;;      Temps:          0       0       0       0       0       0       0       0
  3599 ;;      Totals:         0       0       0       0       0       0       0       0
  3600 ;;Total ram usage:        0 bytes
  3601 ;; Hardware stack levels used:    1
  3602 ;; Hardware stack levels required when called:    3
  3603 ;; This function calls:
  3604 ;;		Nothing
  3605 ;; This function is called by:
  3606 ;;		_main
  3607 ;; This function uses a non-reentrant model
  3608 ;;
  3609                           psect	text1,local,class=CODE,delta=2,merge=1,inline,group=0
  3610                           	line	156
  3611                           global __ptext1
  3612                           __ptext1:	;psect for function _config_interrupt
  3613  0B09                     psect	text1
  3614                           	file	"main.c"
  3615                           	line	156
  3616                           	global	__size_of_config_interrupt
  3617                           	__size_of_config_interrupt	equ	__end_of_config_interrupt-_config_interrupt
  3618  0005                     	
  3619                           _config_interrupt:	
  3620  0B09                     ;incstack = 0
  3621                           	opt	stack 12
  3622                           ; Regs used in _config_interrupt: [wreg]
  3623                           	line	158
  3624                           	
  3625                           l1916:	
  3626  0B09                     ;main.c: 158:     INTCON = 0xC0;
  3627                           	movlw	low(0C0h)
  3628  0B09  30C0               	movwf	(11)	;volatile
  3629  0B0A  008B               	line	160
  3630                           	
  3631                           l1918:	
  3632  0B0B                     ;main.c: 160:     PIE1bits.RCIE = 1;
  3633                           	movlb 1	; select bank1
  3634  0B0B  0021               	bsf	(145)^080h,5	;volatile
  3635  0B0C  1691               	line	161
  3636                           	
  3637                           l266:	
  3638  0B0D                     	return
  3639  0B0D  0008               	opt stack 0
  3640                           GLOBAL	__end_of_config_interrupt
  3641                           	__end_of_config_interrupt:
  3642  0B0E                     	signat	_config_interrupt,89
  3643                           	global	_UART_Write_Text_Length
  3644                           
  3645 ;; *************** function _UART_Write_Text_Length *****************
  3646 ;; Defined at:
  3647 ;;		line 69 in file "./uart.h"
  3648 ;; Parameters:    Size  Location     Type
  3649 ;;  str             1    wreg     PTR unsigned char 
  3650 ;;		 -> main@data(8), 
  3651 ;;  length          2    1[BANK1 ] int 
  3652 ;; Auto vars:     Size  Location     Type
  3653 ;;  str             1    4[BANK1 ] PTR unsigned char 
  3654 ;;		 -> main@data(8), 
  3655 ;;  count           2    5[BANK1 ] volatile int 
  3656 ;; Return value:  Size  Location     Type
  3657 ;;                  1    wreg      void 
  3658 ;; Registers used:
  3659 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3660 ;; Tracked objects:
  3661 ;;		On entry : 0/0
  3662 ;;		On exit  : 0/0
  3663 ;;		Unchanged: 0/0
  3664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3665 ;;      Params:         0       0       2       0       0       0       0       0
  3666 ;;      Locals:         0       0       3       0       0       0       0       0
  3667 ;;      Temps:          0       0       1       0       0       0       0       0
  3668 ;;      Totals:         0       0       6       0       0       0       0       0
  3669 ;;Total ram usage:        6 bytes
  3670 ;; Hardware stack levels used:    1
  3671 ;; Hardware stack levels required when called:    4
  3672 ;; This function calls:
  3673 ;;		_UART_Write
  3674 ;; This function is called by:
  3675 ;;		_main
  3676 ;; This function uses a non-reentrant model
  3677 ;;
  3678                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  3679                           	file	"./uart.h"
  3680                           	line	69
  3681                           global __ptext2
  3682                           __ptext2:	;psect for function _UART_Write_Text_Length
  3683  0B9F                     psect	text2
  3684                           	file	"./uart.h"
  3685                           	line	69
  3686                           	global	__size_of_UART_Write_Text_Length
  3687                           	__size_of_UART_Write_Text_Length	equ	__end_of_UART_Write_Text_Length-_UART_Write_Text_L
                                 ength
  3688  002C                     	
  3689                           _UART_Write_Text_Length:	
  3690  0B9F                     ;incstack = 0
  3691                           	opt	stack 11
  3692                           ; Regs used in _UART_Write_Text_Length: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
                                 k]
  3693                           ;UART_Write_Text_Length@str stored from wreg
  3694                           	movlb 1	; select bank1
  3695  0B9F  0021               	movwf	(UART_Write_Text_Length@str)^080h
  3696  0BA0  00A4               	line	71
  3697                           	
  3698                           l1740:	
  3699  0BA1                     ;./uart.h: 69: void UART_Write_Text_Length (char* str, int length );./uart.h: 70: {;./ua
                                 rt.h: 71:     volatile int count=0;
  3700                           	clrf	(UART_Write_Text_Length@count)^080h	;volatile
  3701  0BA1  01A5               	clrf	(UART_Write_Text_Length@count+1)^080h	;volatile
  3702  0BA2  01A6               	goto	l1742
  3703  0BA3  2BA4               	line	72
  3704                           ;./uart.h: 72:     do {
  3705                           	
  3706                           l81:	
  3707  0BA4                     	line	73
  3708                           	
  3709                           l1742:	
  3710  0BA4                     ;./uart.h: 73:         UART_Write(*str++);
  3711                           	movf	(UART_Write_Text_Length@str)^080h,w
  3712  0BA4  0824               	movwf	fsr1l
  3713  0BA5  0086               	clrf fsr1h	
  3714  0BA6  0187               	
  3715                           	movf	indf1,w
  3716  0BA7  0801               	fcall	_UART_Write
  3717  0BA8  318B  2325  318B   	
  3718                           l1744:	
  3719  0BAB                     	movlw	low(01h)
  3720  0BAB  3001               	movlb 1	; select bank1
  3721  0BAC  0021               	movwf	(??_UART_Write_Text_Length+0)^080h+0
  3722  0BAD  00A3               	movf	(??_UART_Write_Text_Length+0)^080h+0,w
  3723  0BAE  0823               	addwf	(UART_Write_Text_Length@str)^080h,f
  3724  0BAF  07A4               	line	74
  3725                           	
  3726                           l1746:	
  3727  0BB0                     ;./uart.h: 74:         count++;
  3728                           	movlw	01h
  3729  0BB0  3001               	addwf	(UART_Write_Text_Length@count)^080h,f	;volatile
  3730  0BB1  07A5               	movlw	0
  3731  0BB2  3000               	addwfc	(UART_Write_Text_Length@count+1)^080h,f	;volatile
  3732  0BB3  3DA6               	line	75
  3733                           	
  3734                           l1748:	
  3735  0BB4                     ;./uart.h: 75:         if((*str=='\0')&&(count == length ))
  3736                           	movf	(UART_Write_Text_Length@str)^080h,w
  3737  0BB4  0824               	movwf	fsr1l
  3738  0BB5  0086               	clrf fsr1h	
  3739  0BB6  0187               	
  3740                           	movf	(indf1),w
  3741  0BB7  0801               	btfss	status,2
  3742  0BB8  1D03               	goto	u1751
  3743  0BB9  2BBB               	goto	u1750
  3744  0BBA  2BBC               u1751:
  3745  0BBB                     	goto	l1742
  3746  0BBB  2BA4               u1750:
  3747  0BBC                     	
  3748                           l1750:	
  3749  0BBC                     	movf	(UART_Write_Text_Length@length+1)^080h,w
  3750  0BBC  0822               	xorwf	(UART_Write_Text_Length@count+1)^080h,w	;volatile
  3751  0BBD  0626               	skipz
  3752  0BBE  1D03               	goto	u1765
  3753  0BBF  2BC2               	movf	(UART_Write_Text_Length@length)^080h,w
  3754  0BC0  0821               	xorwf	(UART_Write_Text_Length@count)^080h,w	;volatile
  3755  0BC1  0625               u1765:
  3756  0BC2                     
  3757                           	skipz
  3758  0BC2  1D03               	goto	u1761
  3759  0BC3  2BC5               	goto	u1760
  3760  0BC4  2BC6               u1761:
  3761  0BC5                     	goto	l1742
  3762  0BC5  2BA4               u1760:
  3763  0BC6                     	line	77
  3764                           	
  3765                           l1752:	
  3766  0BC6                     ;./uart.h: 76:         {;./uart.h: 77:             count=0;
  3767                           	clrf	(UART_Write_Text_Length@count)^080h	;volatile
  3768  0BC6  01A5               	clrf	(UART_Write_Text_Length@count+1)^080h	;volatile
  3769  0BC7  01A6               	line	78
  3770                           ;./uart.h: 78:             break;
  3771                           	goto	l84
  3772  0BC8  2BCA               	line	79
  3773                           ;./uart.h: 79:         }
  3774                           	
  3775                           l82:	
  3776  0BC9                     	line	81
  3777                           ;./uart.h: 81:     }
  3778                           	goto	l1742
  3779  0BC9  2BA4               	
  3780                           l83:	
  3781  0BCA                     	line	84
  3782                           	
  3783                           l84:	
  3784  0BCA                     	return
  3785  0BCA  0008               	opt stack 0
  3786                           GLOBAL	__end_of_UART_Write_Text_Length
  3787                           	__end_of_UART_Write_Text_Length:
  3788  0BCB                     	signat	_UART_Write_Text_Length,8313
  3789                           	global	_UART_Write
  3790                           
  3791 ;; *************** function _UART_Write *****************
  3792 ;; Defined at:
  3793 ;;		line 54 in file "./uart.h"
  3794 ;; Parameters:    Size  Location     Type
  3795 ;;  data            1    wreg     unsigned char 
  3796 ;; Auto vars:     Size  Location     Type
  3797 ;;  data            1    0[BANK1 ] unsigned char 
  3798 ;; Return value:  Size  Location     Type
  3799 ;;                  1    wreg      void 
  3800 ;; Registers used:
  3801 ;;		wreg
  3802 ;; Tracked objects:
  3803 ;;		On entry : 0/0
  3804 ;;		On exit  : 0/0
  3805 ;;		Unchanged: 0/0
  3806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3807 ;;      Params:         0       0       0       0       0       0       0       0
  3808 ;;      Locals:         0       0       1       0       0       0       0       0
  3809 ;;      Temps:          0       0       0       0       0       0       0       0
  3810 ;;      Totals:         0       0       1       0       0       0       0       0
  3811 ;;Total ram usage:        1 bytes
  3812 ;; Hardware stack levels used:    1
  3813 ;; Hardware stack levels required when called:    3
  3814 ;; This function calls:
  3815 ;;		Nothing
  3816 ;; This function is called by:
  3817 ;;		_UART_Write_Text_Length
  3818 ;;		_UART_Write_Text
  3819 ;; This function uses a non-reentrant model
  3820 ;;
  3821                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  3822                           	line	54
  3823                           global __ptext3
  3824                           __ptext3:	;psect for function _UART_Write
  3825  0B25                     psect	text3
  3826                           	file	"./uart.h"
  3827                           	line	54
  3828                           	global	__size_of_UART_Write
  3829                           	__size_of_UART_Write	equ	__end_of_UART_Write-_UART_Write
  3830  000E                     	
  3831                           _UART_Write:	
  3832  0B25                     ;incstack = 0
  3833                           	opt	stack 11
  3834                           ; Regs used in _UART_Write: [wreg]
  3835                           ;UART_Write@data stored from wreg
  3836                           	movlb 1	; select bank1
  3837  0B25  0021               	movwf	(UART_Write@data)^080h
  3838  0B26  00A0               	line	56
  3839                           	
  3840                           l1538:	
  3841  0B27                     ;./uart.h: 54: void UART_Write(char data);./uart.h: 55: {;./uart.h: 56:   while(!TX1STAb
                                 its.TRMT);
  3842                           	goto	l69
  3843  0B27  2B28               	
  3844                           l70:	
  3845  0B28                     	
  3846                           l69:	
  3847  0B28                     	movlb 3	; select bank3
  3848  0B28  0023               	btfss	(414)^0180h,1	;volatile
  3849  0B29  1C9E               	goto	u1271
  3850  0B2A  2B2C               	goto	u1270
  3851  0B2B  2B2D               u1271:
  3852  0B2C                     	goto	l69
  3853  0B2C  2B28               u1270:
  3854  0B2D                     	goto	l1540
  3855  0B2D  2B2E               	
  3856                           l71:	
  3857  0B2E                     	line	57
  3858                           	
  3859                           l1540:	
  3860  0B2E                     ;./uart.h: 57:   TX1REG = data;
  3861                           	movlb 1	; select bank1
  3862  0B2E  0021               	movf	(UART_Write@data)^080h,w
  3863  0B2F  0820               	movlb 3	; select bank3
  3864  0B30  0023               	movwf	(410)^0180h	;volatile
  3865  0B31  009A               	line	58
  3866                           	
  3867                           l72:	
  3868  0B32                     	return
  3869  0B32  0008               	opt stack 0
  3870                           GLOBAL	__end_of_UART_Write
  3871                           	__end_of_UART_Write:
  3872  0B33                     	signat	_UART_Write,4217
  3873                           	global	_UART_TX_Empty
  3874                           
  3875 ;; *************** function _UART_TX_Empty *****************
  3876 ;; Defined at:
  3877 ;;		line 24 in file "./uart.h"
  3878 ;; Parameters:    Size  Location     Type
  3879 ;;		None
  3880 ;; Auto vars:     Size  Location     Type
  3881 ;;		None
  3882 ;; Return value:  Size  Location     Type
  3883 ;;                  1    wreg      unsigned char 
  3884 ;; Registers used:
  3885 ;;		wreg, status,2, status,0
  3886 ;; Tracked objects:
  3887 ;;		On entry : 0/0
  3888 ;;		On exit  : 0/0
  3889 ;;		Unchanged: 0/0
  3890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3891 ;;      Params:         0       0       0       0       0       0       0       0
  3892 ;;      Locals:         0       0       0       0       0       0       0       0
  3893 ;;      Temps:          0       0       0       0       0       0       0       0
  3894 ;;      Totals:         0       0       0       0       0       0       0       0
  3895 ;;Total ram usage:        0 bytes
  3896 ;; Hardware stack levels used:    1
  3897 ;; Hardware stack levels required when called:    3
  3898 ;; This function calls:
  3899 ;;		Nothing
  3900 ;; This function is called by:
  3901 ;;		_main
  3902 ;; This function uses a non-reentrant model
  3903 ;;
  3904                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  3905                           	line	24
  3906                           global __ptext4
  3907                           __ptext4:	;psect for function _UART_TX_Empty
  3908  0B04                     psect	text4
  3909                           	file	"./uart.h"
  3910                           	line	24
  3911                           	global	__size_of_UART_TX_Empty
  3912                           	__size_of_UART_TX_Empty	equ	__end_of_UART_TX_Empty-_UART_TX_Empty
  3913  0005                     	
  3914                           _UART_TX_Empty:	
  3915  0B04                     ;incstack = 0
  3916                           	opt	stack 12
  3917                           ; Regs used in _UART_TX_Empty: [wreg+status,2+status,0]
  3918                           	line	26
  3919                           	
  3920                           l1724:	
  3921  0B04                     ;./uart.h: 26:   return TX1STAbits.TRMT;
  3922                           	movlb 3	; select bank3
  3923  0B04  0023               	rrf	(414)^0180h,w	;volatile
  3924  0B05  0C1E               	andlw	(1<<1)-1
  3925  0B06  3901               	goto	l50
  3926  0B07  2B08               	
  3927                           l1726:	
  3928  0B08                     	line	27
  3929                           	
  3930                           l50:	
  3931  0B08                     	return
  3932  0B08  0008               	opt stack 0
  3933                           GLOBAL	__end_of_UART_TX_Empty
  3934                           	__end_of_UART_TX_Empty:
  3935  0B09                     	signat	_UART_TX_Empty,89
  3936                           	global	_UART_Init
  3937                           
  3938 ;; *************** function _UART_Init *****************
  3939 ;; Defined at:
  3940 ;;		line 1 in file "./uart.h"
  3941 ;; Parameters:    Size  Location     Type
  3942 ;;  baudrate        4   15[BANK1 ] const long 
  3943 ;; Auto vars:     Size  Location     Type
  3944 ;;  x               2   27[BANK1 ] unsigned int 
  3945 ;; Return value:  Size  Location     Type
  3946 ;;                  1    wreg      unsigned char 
  3947 ;; Registers used:
  3948 ;;		wreg, status,2, status,0, pclath, cstack
  3949 ;; Tracked objects:
  3950 ;;		On entry : 0/0
  3951 ;;		On exit  : 0/0
  3952 ;;		Unchanged: 0/0
  3953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3954 ;;      Params:         0       0       4       0       0       0       0       0
  3955 ;;      Locals:         0       0       2       0       0       0       0       0
  3956 ;;      Temps:          0       0       8       0       0       0       0       0
  3957 ;;      Totals:         0       0      14       0       0       0       0       0
  3958 ;;Total ram usage:       14 bytes
  3959 ;; Hardware stack levels used:    1
  3960 ;; Hardware stack levels required when called:    4
  3961 ;; This function calls:
  3962 ;;		___aldiv
  3963 ;; This function is called by:
  3964 ;;		_main
  3965 ;; This function uses a non-reentrant model
  3966 ;;
  3967                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  3968                           	line	1
  3969                           global __ptext5
  3970                           __ptext5:	;psect for function _UART_Init
  3971  0F51                     psect	text5
  3972                           	file	"./uart.h"
  3973                           	line	1
  3974                           	global	__size_of_UART_Init
  3975                           	__size_of_UART_Init	equ	__end_of_UART_Init-_UART_Init
  3976  00AF                     	
  3977                           _UART_Init:	
  3978  0F51                     ;incstack = 0
  3979                           	opt	stack 11
  3980                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  3981                           	line	4
  3982                           	
  3983                           l1698:	
  3984  0F51                     ;./uart.h: 1: char UART_Init(const long int baudrate);./uart.h: 2: {;./uart.h: 3:  unsig
                                 ned int x;;./uart.h: 4:  x = (16000000 - baudrate*64)/(baudrate*64);
  3985                           	movlb 1	; select bank1
  3986  0F51  0021               	movf	(UART_Init@baudrate)^080h,w
  3987  0F52  082F               	movwf	(??_UART_Init+0)^080h+0
  3988  0F53  00B3               	movf	(UART_Init@baudrate+1)^080h,w
  3989  0F54  0830               	movwf	((??_UART_Init+0)^080h+0+1)
  3990  0F55  00B4               	movf	(UART_Init@baudrate+2)^080h,w
  3991  0F56  0831               	movwf	((??_UART_Init+0)^080h+0+2)
  3992  0F57  00B5               	movf	(UART_Init@baudrate+3)^080h,w
  3993  0F58  0832               	movwf	((??_UART_Init+0)^080h+0+3)
  3994  0F59  00B6               	movlw	06h
  3995  0F5A  3006               u1675:
  3996  0F5B                     	lslf	(??_UART_Init+0)^080h+0,f
  3997  0F5B  35B3               	rlf	(??_UART_Init+0)^080h+1,f
  3998  0F5C  0DB4               	rlf	(??_UART_Init+0)^080h+2,f
  3999  0F5D  0DB5               	rlf	(??_UART_Init+0)^080h+3,f
  4000  0F5E  0DB6               u1670:
  4001  0F5F                     	decfsz	wreg,f
  4002  0F5F  0B89               	goto	u1675
  4003  0F60  2F5B               	movf	3+(??_UART_Init+0)^080h+0,w
  4004  0F61  0836               	movwf	(___aldiv@divisor+3)^080h
  4005  0F62  00A3               	movf	2+(??_UART_Init+0)^080h+0,w
  4006  0F63  0835               	movwf	(___aldiv@divisor+2)^080h
  4007  0F64  00A2               	movf	1+(??_UART_Init+0)^080h+0,w
  4008  0F65  0834               	movwf	(___aldiv@divisor+1)^080h
  4009  0F66  00A1               	movf	0+(??_UART_Init+0)^080h+0,w
  4010  0F67  0833               	movwf	(___aldiv@divisor)^080h
  4011  0F68  00A0               
  4012                           	movf	(UART_Init@baudrate)^080h,w
  4013  0F69  082F               	movwf	(??_UART_Init+4)^080h+0
  4014  0F6A  00B7               	movf	(UART_Init@baudrate+1)^080h,w
  4015  0F6B  0830               	movwf	((??_UART_Init+4)^080h+0+1)
  4016  0F6C  00B8               	movf	(UART_Init@baudrate+2)^080h,w
  4017  0F6D  0831               	movwf	((??_UART_Init+4)^080h+0+2)
  4018  0F6E  00B9               	movf	(UART_Init@baudrate+3)^080h,w
  4019  0F6F  0832               	movwf	((??_UART_Init+4)^080h+0+3)
  4020  0F70  00BA               	movlw	06h
  4021  0F71  3006               u1685:
  4022  0F72                     	lslf	(??_UART_Init+4)^080h+0,f
  4023  0F72  35B7               	rlf	(??_UART_Init+4)^080h+1,f
  4024  0F73  0DB8               	rlf	(??_UART_Init+4)^080h+2,f
  4025  0F74  0DB9               	rlf	(??_UART_Init+4)^080h+3,f
  4026  0F75  0DBA               u1680:
  4027  0F76                     	decfsz	wreg,f
  4028  0F76  0B89               	goto	u1685
  4029  0F77  2F72               	comf	(??_UART_Init+4)^080h+0,f
  4030  0F78  09B7               	comf	(??_UART_Init+4)^080h+1,f
  4031  0F79  09B8               	comf	(??_UART_Init+4)^080h+2,f
  4032  0F7A  09B9               	comf	(??_UART_Init+4)^080h+3,f
  4033  0F7B  09BA               	incf	(??_UART_Init+4)^080h+0,f
  4034  0F7C  0AB7               	skipnz
  4035  0F7D  1903               	incf	(??_UART_Init+4)^080h+1,f
  4036  0F7E  0AB8               	skipnz
  4037  0F7F  1903               	incf	(??_UART_Init+4)^080h+2,f
  4038  0F80  0AB9               	skipnz
  4039  0F81  1903               	incf	(??_UART_Init+4)^080h+3,f
  4040  0F82  0ABA               	movlw	0
  4041  0F83  3000               	addwf	(0+(??_UART_Init+4)^080h+0),w
  4042  0F84  0737               	movwf	(___aldiv@dividend)^080h
  4043  0F85  00A4               	movlw	high(0F42400h)
  4044  0F86  3024               	addwfc	(1+(??_UART_Init+4)^080h+0),w
  4045  0F87  3D38               	movwf	1+(___aldiv@dividend)^080h
  4046  0F88  00A5               	
  4047                           	movlw	low highword(0F42400h)
  4048  0F89  30F4               	addwfc	(2+(??_UART_Init+4)^080h+0),w
  4049  0F8A  3D39               	movwf	2+(___aldiv@dividend)^080h
  4050  0F8B  00A6               	
  4051                           	movlw	high highword(0F42400h)
  4052  0F8C  3000               	addwfc	(3+(??_UART_Init+4)^080h+0),w
  4053  0F8D  3D3A               	movwf	3+(___aldiv@dividend)^080h
  4054  0F8E  00A7               	fcall	___aldiv
  4055  0F8F  3187  2761  318F   	movlb 1	; select bank1
  4056  0F92  0021               	movf	(1+(?___aldiv))^080h,w
  4057  0F93  0821               	movwf	(UART_Init@x+1)^080h
  4058  0F94  00BC               	movf	(0+(?___aldiv))^080h,w
  4059  0F95  0820               	movwf	(UART_Init@x)^080h
  4060  0F96  00BB               	line	5
  4061                           	
  4062                           l1700:	
  4063  0F97                     ;./uart.h: 5:  if(x>255)
  4064                           	movlw	01h
  4065  0F97  3001               	subwf	(UART_Init@x+1)^080h,w
  4066  0F98  023C               	movlw	0
  4067  0F99  3000               	skipnz
  4068  0F9A  1903               	subwf	(UART_Init@x)^080h,w
  4069  0F9B  023B               	skipc
  4070  0F9C  1C03               	goto	u1691
  4071  0F9D  2F9F               	goto	u1690
  4072  0F9E  2FA0               u1691:
  4073  0F9F                     	goto	l1706
  4074  0F9F  2FE8               u1690:
  4075  0FA0                     	line	7
  4076                           	
  4077                           l1702:	
  4078  0FA0                     ;./uart.h: 6:  {;./uart.h: 7:   x = (16000000 - baudrate*16)/(baudrate*16);
  4079                           	movf	(UART_Init@baudrate)^080h,w
  4080  0FA0  082F               	movwf	(??_UART_Init+0)^080h+0
  4081  0FA1  00B3               	movf	(UART_Init@baudrate+1)^080h,w
  4082  0FA2  0830               	movwf	((??_UART_Init+0)^080h+0+1)
  4083  0FA3  00B4               	movf	(UART_Init@baudrate+2)^080h,w
  4084  0FA4  0831               	movwf	((??_UART_Init+0)^080h+0+2)
  4085  0FA5  00B5               	movf	(UART_Init@baudrate+3)^080h,w
  4086  0FA6  0832               	movwf	((??_UART_Init+0)^080h+0+3)
  4087  0FA7  00B6               	movlw	04h
  4088  0FA8  3004               u1705:
  4089  0FA9                     	lslf	(??_UART_Init+0)^080h+0,f
  4090  0FA9  35B3               	rlf	(??_UART_Init+0)^080h+1,f
  4091  0FAA  0DB4               	rlf	(??_UART_Init+0)^080h+2,f
  4092  0FAB  0DB5               	rlf	(??_UART_Init+0)^080h+3,f
  4093  0FAC  0DB6               u1700:
  4094  0FAD                     	decfsz	wreg,f
  4095  0FAD  0B89               	goto	u1705
  4096  0FAE  2FA9               	movf	3+(??_UART_Init+0)^080h+0,w
  4097  0FAF  0836               	movwf	(___aldiv@divisor+3)^080h
  4098  0FB0  00A3               	movf	2+(??_UART_Init+0)^080h+0,w
  4099  0FB1  0835               	movwf	(___aldiv@divisor+2)^080h
  4100  0FB2  00A2               	movf	1+(??_UART_Init+0)^080h+0,w
  4101  0FB3  0834               	movwf	(___aldiv@divisor+1)^080h
  4102  0FB4  00A1               	movf	0+(??_UART_Init+0)^080h+0,w
  4103  0FB5  0833               	movwf	(___aldiv@divisor)^080h
  4104  0FB6  00A0               
  4105                           	movf	(UART_Init@baudrate)^080h,w
  4106  0FB7  082F               	movwf	(??_UART_Init+4)^080h+0
  4107  0FB8  00B7               	movf	(UART_Init@baudrate+1)^080h,w
  4108  0FB9  0830               	movwf	((??_UART_Init+4)^080h+0+1)
  4109  0FBA  00B8               	movf	(UART_Init@baudrate+2)^080h,w
  4110  0FBB  0831               	movwf	((??_UART_Init+4)^080h+0+2)
  4111  0FBC  00B9               	movf	(UART_Init@baudrate+3)^080h,w
  4112  0FBD  0832               	movwf	((??_UART_Init+4)^080h+0+3)
  4113  0FBE  00BA               	movlw	04h
  4114  0FBF  3004               u1715:
  4115  0FC0                     	lslf	(??_UART_Init+4)^080h+0,f
  4116  0FC0  35B7               	rlf	(??_UART_Init+4)^080h+1,f
  4117  0FC1  0DB8               	rlf	(??_UART_Init+4)^080h+2,f
  4118  0FC2  0DB9               	rlf	(??_UART_Init+4)^080h+3,f
  4119  0FC3  0DBA               u1710:
  4120  0FC4                     	decfsz	wreg,f
  4121  0FC4  0B89               	goto	u1715
  4122  0FC5  2FC0               	comf	(??_UART_Init+4)^080h+0,f
  4123  0FC6  09B7               	comf	(??_UART_Init+4)^080h+1,f
  4124  0FC7  09B8               	comf	(??_UART_Init+4)^080h+2,f
  4125  0FC8  09B9               	comf	(??_UART_Init+4)^080h+3,f
  4126  0FC9  09BA               	incf	(??_UART_Init+4)^080h+0,f
  4127  0FCA  0AB7               	skipnz
  4128  0FCB  1903               	incf	(??_UART_Init+4)^080h+1,f
  4129  0FCC  0AB8               	skipnz
  4130  0FCD  1903               	incf	(??_UART_Init+4)^080h+2,f
  4131  0FCE  0AB9               	skipnz
  4132  0FCF  1903               	incf	(??_UART_Init+4)^080h+3,f
  4133  0FD0  0ABA               	movlw	0
  4134  0FD1  3000               	addwf	(0+(??_UART_Init+4)^080h+0),w
  4135  0FD2  0737               	movwf	(___aldiv@dividend)^080h
  4136  0FD3  00A4               	movlw	high(0F42400h)
  4137  0FD4  3024               	addwfc	(1+(??_UART_Init+4)^080h+0),w
  4138  0FD5  3D38               	movwf	1+(___aldiv@dividend)^080h
  4139  0FD6  00A5               	
  4140                           	movlw	low highword(0F42400h)
  4141  0FD7  30F4               	addwfc	(2+(??_UART_Init+4)^080h+0),w
  4142  0FD8  3D39               	movwf	2+(___aldiv@dividend)^080h
  4143  0FD9  00A6               	
  4144                           	movlw	high highword(0F42400h)
  4145  0FDA  3000               	addwfc	(3+(??_UART_Init+4)^080h+0),w
  4146  0FDB  3D3A               	movwf	3+(___aldiv@dividend)^080h
  4147  0FDC  00A7               	fcall	___aldiv
  4148  0FDD  3187  2761  318F   	movlb 1	; select bank1
  4149  0FE0  0021               	movf	(1+(?___aldiv))^080h,w
  4150  0FE1  0821               	movwf	(UART_Init@x+1)^080h
  4151  0FE2  00BC               	movf	(0+(?___aldiv))^080h,w
  4152  0FE3  0820               	movwf	(UART_Init@x)^080h
  4153  0FE4  00BB               	line	8
  4154                           	
  4155                           l1704:	
  4156  0FE5                     ;./uart.h: 8:   TX1STAbits.BRGH = 1;
  4157                           	movlb 3	; select bank3
  4158  0FE5  0023               	bsf	(414)^0180h,2	;volatile
  4159  0FE6  151E               	goto	l1706
  4160  0FE7  2FE8               	line	9
  4161                           ;./uart.h: 9:  }
  4162                           	
  4163                           l45:	
  4164  0FE8                     	line	10
  4165                           	
  4166                           l1706:	
  4167  0FE8                     ;./uart.h: 10:  if(x<256)
  4168                           	movlw	01h
  4169  0FE8  3001               	movlb 1	; select bank1
  4170  0FE9  0021               	subwf	(UART_Init@x+1)^080h,w
  4171  0FEA  023C               	movlw	0
  4172  0FEB  3000               	skipnz
  4173  0FEC  1903               	subwf	(UART_Init@x)^080h,w
  4174  0FED  023B               	skipnc
  4175  0FEE  1803               	goto	u1721
  4176  0FEF  2FF1               	goto	u1720
  4177  0FF0  2FF2               u1721:
  4178  0FF1                     	goto	l47
  4179  0FF1  2FFF               u1720:
  4180  0FF2                     	line	12
  4181                           	
  4182                           l1708:	
  4183  0FF2                     ;./uart.h: 11:  {;./uart.h: 12:    SP1BRGL = x;
  4184                           	movf	(UART_Init@x)^080h,w
  4185  0FF2  083B               	movlb 3	; select bank3
  4186  0FF3  0023               	movwf	(411)^0180h	;volatile
  4187  0FF4  009B               	line	13
  4188                           	
  4189                           l1710:	
  4190  0FF5                     ;./uart.h: 13:    TX1STAbits.SYNC = 0;
  4191                           	bcf	(414)^0180h,4	;volatile
  4192  0FF5  121E               	line	14
  4193                           	
  4194                           l1712:	
  4195  0FF6                     ;./uart.h: 14:    RC1STAbits.SPEN = 1;
  4196                           	bsf	(413)^0180h,7	;volatile
  4197  0FF6  179D               	line	15
  4198                           	
  4199                           l1714:	
  4200  0FF7                     ;./uart.h: 15:           TRISC7 = 1;
  4201                           	movlb 1	; select bank1
  4202  0FF7  0021               	bsf	(1143/8)^080h,(1143)&7	;volatile
  4203  0FF8  178E               	line	16
  4204                           	
  4205                           l1716:	
  4206  0FF9                     ;./uart.h: 16:           TRISC6 = 0;
  4207                           	bcf	(1142/8)^080h,(1142)&7	;volatile
  4208  0FF9  130E               	line	17
  4209                           	
  4210                           l1718:	
  4211  0FFA                     ;./uart.h: 17:           RC1STAbits.CREN = 1;
  4212                           	movlb 3	; select bank3
  4213  0FFA  0023               	bsf	(413)^0180h,4	;volatile
  4214  0FFB  161D               	line	18
  4215                           	
  4216                           l1720:	
  4217  0FFC                     ;./uart.h: 18:           TX1STAbits.TXEN = 1;
  4218                           	bsf	(414)^0180h,5	;volatile
  4219  0FFC  169E               	goto	l47
  4220  0FFD  2FFF               	line	19
  4221                           	
  4222                           l1722:	
  4223  0FFE                     ;./uart.h: 19:    return 1;;	Return value of _UART_Init is never used
  4224                           	goto	l47
  4225  0FFE  2FFF               	line	20
  4226                           ;./uart.h: 20:  }
  4227                           	
  4228                           l46:	
  4229  0FFF                     	line	22
  4230                           ;./uart.h: 21:  return 0;;	Return value of _UART_Init is never used
  4231                           	
  4232                           l47:	
  4233  0FFF                     	return
  4234  0FFF  0008               	opt stack 0
  4235                           GLOBAL	__end_of_UART_Init
  4236                           	__end_of_UART_Init:
  4237  1000                     	signat	_UART_Init,4217
  4238                           	global	_UART2_Read_Text
  4239                           
  4240 ;; *************** function _UART2_Read_Text *****************
  4241 ;; Defined at:
  4242 ;;		line 42 in file "./uart2.h"
  4243 ;; Parameters:    Size  Location     Type
  4244 ;;  Output          1    wreg     PTR unsigned char 
  4245 ;;		 -> main@data(8), 
  4246 ;;  length          2    0[BANK1 ] unsigned int 
  4247 ;; Auto vars:     Size  Location     Type
  4248 ;;  Output          1    4[BANK1 ] PTR unsigned char 
  4249 ;;		 -> main@data(8), 
  4250 ;;  i               2    5[BANK1 ] unsigned int 
  4251 ;; Return value:  Size  Location     Type
  4252 ;;                  1    wreg      void 
  4253 ;; Registers used:
  4254 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4255 ;; Tracked objects:
  4256 ;;		On entry : 0/0
  4257 ;;		On exit  : 0/0
  4258 ;;		Unchanged: 0/0
  4259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4260 ;;      Params:         0       0       2       0       0       0       0       0
  4261 ;;      Locals:         0       0       3       0       0       0       0       0
  4262 ;;      Temps:          0       0       2       0       0       0       0       0
  4263 ;;      Totals:         0       0       7       0       0       0       0       0
  4264 ;;Total ram usage:        7 bytes
  4265 ;; Hardware stack levels used:    1
  4266 ;; Hardware stack levels required when called:    4
  4267 ;; This function calls:
  4268 ;;		_UART2_Read
  4269 ;; This function is called by:
  4270 ;;		_main
  4271 ;; This function uses a non-reentrant model
  4272 ;;
  4273                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  4274                           	file	"./uart2.h"
  4275                           	line	42
  4276                           global __ptext6
  4277                           __ptext6:	;psect for function _UART2_Read_Text
  4278  0B7C                     psect	text6
  4279                           	file	"./uart2.h"
  4280                           	line	42
  4281                           	global	__size_of_UART2_Read_Text
  4282                           	__size_of_UART2_Read_Text	equ	__end_of_UART2_Read_Text-_UART2_Read_Text
  4283  0023                     	
  4284                           _UART2_Read_Text:	
  4285  0B7C                     ;incstack = 0
  4286                           	opt	stack 11
  4287                           ; Regs used in _UART2_Read_Text: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4288                           ;UART2_Read_Text@Output stored from wreg
  4289                           	movlb 1	; select bank1
  4290  0B7C  0021               	movwf	(UART2_Read_Text@Output)^080h
  4291  0B7D  00A4               	line	44
  4292                           	
  4293                           l1786:	
  4294  0B7E                     ;./uart2.h: 43:     unsigned int i;;./uart2.h: 44:     for (i = 0; i < length; i++)
  4295                           	clrf	(UART2_Read_Text@i)^080h
  4296  0B7E  01A5               	clrf	(UART2_Read_Text@i+1)^080h
  4297  0B7F  01A6               	goto	l1792
  4298  0B80  2B93               	
  4299                           l106:	
  4300  0B81                     	line	45
  4301                           	
  4302                           l1788:	
  4303  0B81                     ;./uart2.h: 45:         Output[i] = UART2_Read();
  4304                           	fcall	_UART2_Read
  4305  0B81  318B  2348  318B   	movlb 1	; select bank1
  4306  0B84  0021               	movwf	(??_UART2_Read_Text+0)^080h+0
  4307  0B85  00A2               	movf	(UART2_Read_Text@i)^080h,w
  4308  0B86  0825               	addwf	(UART2_Read_Text@Output)^080h,w
  4309  0B87  0724               	movwf	(??_UART2_Read_Text+1)^080h+0
  4310  0B88  00A3               	movf	0+(??_UART2_Read_Text+1)^080h+0,w
  4311  0B89  0823               	movwf	fsr1l
  4312  0B8A  0086               	clrf fsr1h	
  4313  0B8B  0187               	
  4314                           	movf	(??_UART2_Read_Text+0)^080h+0,w
  4315  0B8C  0822               	movwf	indf1
  4316  0B8D  0081               	
  4317                           l1790:	
  4318  0B8E                     	movlw	01h
  4319  0B8E  3001               	addwf	(UART2_Read_Text@i)^080h,f
  4320  0B8F  07A5               	movlw	0
  4321  0B90  3000               	addwfc	(UART2_Read_Text@i+1)^080h,f
  4322  0B91  3DA6               	goto	l1792
  4323  0B92  2B93               	
  4324                           l105:	
  4325  0B93                     	
  4326                           l1792:	
  4327  0B93                     	movf	(UART2_Read_Text@length+1)^080h,w
  4328  0B93  0821               	subwf	(UART2_Read_Text@i+1)^080h,w
  4329  0B94  0226               	skipz
  4330  0B95  1D03               	goto	u1835
  4331  0B96  2B99               	movf	(UART2_Read_Text@length)^080h,w
  4332  0B97  0820               	subwf	(UART2_Read_Text@i)^080h,w
  4333  0B98  0225               u1835:
  4334  0B99                     	skipc
  4335  0B99  1C03               	goto	u1831
  4336  0B9A  2B9C               	goto	u1830
  4337  0B9B  2B9D               u1831:
  4338  0B9C                     	goto	l1788
  4339  0B9C  2B81               u1830:
  4340  0B9D                     	goto	l108
  4341  0B9D  2B9E               	
  4342                           l107:	
  4343  0B9E                     	line	48
  4344                           	
  4345                           l108:	
  4346  0B9E                     	return
  4347  0B9E  0008               	opt stack 0
  4348                           GLOBAL	__end_of_UART2_Read_Text
  4349                           	__end_of_UART2_Read_Text:
  4350  0B9F                     	signat	_UART2_Read_Text,8313
  4351                           	global	_UART2_Read
  4352                           
  4353 ;; *************** function _UART2_Read *****************
  4354 ;; Defined at:
  4355 ;;		line 30 in file "./uart2.h"
  4356 ;; Parameters:    Size  Location     Type
  4357 ;;		None
  4358 ;; Auto vars:     Size  Location     Type
  4359 ;;		None
  4360 ;; Return value:  Size  Location     Type
  4361 ;;                  1    wreg      unsigned char 
  4362 ;; Registers used:
  4363 ;;		wreg
  4364 ;; Tracked objects:
  4365 ;;		On entry : 0/0
  4366 ;;		On exit  : 0/0
  4367 ;;		Unchanged: 0/0
  4368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4369 ;;      Params:         0       0       0       0       0       0       0       0
  4370 ;;      Locals:         0       0       0       0       0       0       0       0
  4371 ;;      Temps:          0       0       0       0       0       0       0       0
  4372 ;;      Totals:         0       0       0       0       0       0       0       0
  4373 ;;Total ram usage:        0 bytes
  4374 ;; Hardware stack levels used:    1
  4375 ;; Hardware stack levels required when called:    3
  4376 ;; This function calls:
  4377 ;;		Nothing
  4378 ;; This function is called by:
  4379 ;;		_UART2_Read_Text
  4380 ;; This function uses a non-reentrant model
  4381 ;;
  4382                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  4383                           	line	30
  4384                           global __ptext7
  4385                           __ptext7:	;psect for function _UART2_Read
  4386  0B48                     psect	text7
  4387                           	file	"./uart2.h"
  4388                           	line	30
  4389                           	global	__size_of_UART2_Read
  4390                           	__size_of_UART2_Read	equ	__end_of_UART2_Read-_UART2_Read
  4391  0015                     	
  4392                           _UART2_Read:	
  4393  0B48                     ;incstack = 0
  4394                           	opt	stack 11
  4395                           ; Regs used in _UART2_Read: [wreg]
  4396                           	line	31
  4397                           	
  4398                           l1542:	
  4399  0B48                     ;./uart2.h: 31:     if (RC2STAbits.OERR) {
  4400                           	movlb 9	; select bank9
  4401  0B48  0029               	btfss	(1173)^0480h,1	;volatile
  4402  0B49  1C95               	goto	u1281
  4403  0B4A  2B4C               	goto	u1280
  4404  0B4B  2B4D               u1281:
  4405  0B4C                     	goto	l99
  4406  0B4C  2B53               u1280:
  4407  0B4D                     	line	32
  4408                           	
  4409                           l1544:	
  4410  0B4D                     ;./uart2.h: 32:         RC2STAbits.CREN = 0;
  4411                           	bcf	(1173)^0480h,4	;volatile
  4412  0B4D  1215               	line	33
  4413                           ;./uart2.h: 33:         __nop();
  4414                           	opt	asmopt_push
  4415                           	opt	asmopt_off
  4416                           	nop
  4417  0B4E  0000               	opt	asmopt_pop
  4418                           	line	34
  4419                           ;./uart2.h: 34:         RC2STAbits.CREN = 1;
  4420                           	movlb 9	; select bank9
  4421  0B4F  0029               	bsf	(1173)^0480h,4	;volatile
  4422  0B50  1615               	goto	l99
  4423  0B51  2B53               	line	37
  4424                           ;./uart2.h: 37:     }
  4425                           	
  4426                           l98:	
  4427  0B52                     	line	38
  4428                           ;./uart2.h: 38:    while (!PIR4bits.RC2IF);
  4429                           	goto	l99
  4430  0B52  2B53               	
  4431                           l100:	
  4432  0B53                     	
  4433                           l99:	
  4434  0B53                     	movlb 0	; select bank0
  4435  0B53  0020               	btfss	(20),5	;volatile
  4436  0B54  1E94               	goto	u1291
  4437  0B55  2B57               	goto	u1290
  4438  0B56  2B58               u1291:
  4439  0B57                     	goto	l99
  4440  0B57  2B53               u1290:
  4441  0B58                     	goto	l1546
  4442  0B58  2B59               	
  4443                           l101:	
  4444  0B59                     	line	39
  4445                           	
  4446                           l1546:	
  4447  0B59                     ;./uart2.h: 39:     return RC2REG;
  4448                           	movlb 9	; select bank9
  4449  0B59  0029               	movf	(1169)^0480h,w	;volatile
  4450  0B5A  0811               	goto	l102
  4451  0B5B  2B5C               	
  4452                           l1548:	
  4453  0B5C                     	line	40
  4454                           	
  4455                           l102:	
  4456  0B5C                     	return
  4457  0B5C  0008               	opt stack 0
  4458                           GLOBAL	__end_of_UART2_Read
  4459                           	__end_of_UART2_Read:
  4460  0B5D                     	signat	_UART2_Read,89
  4461                           	global	_UART2_Init
  4462                           
  4463 ;; *************** function _UART2_Init *****************
  4464 ;; Defined at:
  4465 ;;		line 1 in file "./uart2.h"
  4466 ;; Parameters:    Size  Location     Type
  4467 ;;  baudrate        4   15[BANK1 ] const long 
  4468 ;; Auto vars:     Size  Location     Type
  4469 ;;  x               2   27[BANK1 ] unsigned int 
  4470 ;; Return value:  Size  Location     Type
  4471 ;;                  1    wreg      unsigned char 
  4472 ;; Registers used:
  4473 ;;		wreg, status,2, status,0, pclath, cstack
  4474 ;; Tracked objects:
  4475 ;;		On entry : 0/0
  4476 ;;		On exit  : 0/0
  4477 ;;		Unchanged: 0/0
  4478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4479 ;;      Params:         0       0       4       0       0       0       0       0
  4480 ;;      Locals:         0       0       2       0       0       0       0       0
  4481 ;;      Temps:          0       0       8       0       0       0       0       0
  4482 ;;      Totals:         0       0      14       0       0       0       0       0
  4483 ;;Total ram usage:       14 bytes
  4484 ;; Hardware stack levels used:    1
  4485 ;; Hardware stack levels required when called:    4
  4486 ;; This function calls:
  4487 ;;		___aldiv
  4488 ;; This function is called by:
  4489 ;;		_main
  4490 ;; This function uses a non-reentrant model
  4491 ;;
  4492                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  4493                           	line	1
  4494                           global __ptext8
  4495                           __ptext8:	;psect for function _UART2_Init
  4496  054D                     psect	text8
  4497                           	file	"./uart2.h"
  4498                           	line	1
  4499                           	global	__size_of_UART2_Init
  4500                           	__size_of_UART2_Init	equ	__end_of_UART2_Init-_UART2_Init
  4501  00B2                     	
  4502                           _UART2_Init:	
  4503  054D                     ;incstack = 0
  4504                           	opt	stack 11
  4505                           ; Regs used in _UART2_Init: [wreg+status,2+status,0+pclath+cstack]
  4506                           	line	3
  4507                           	
  4508                           l1754:	
  4509  054D                     ;./uart2.h: 2:     unsigned int x;;./uart2.h: 3:     x = (16000000 - baudrate * 64) / (b
                                 audrate * 64);
  4510                           	movlb 1	; select bank1
  4511  054D  0021               	movf	(UART2_Init@baudrate)^080h,w
  4512  054E  082F               	movwf	(??_UART2_Init+0)^080h+0
  4513  054F  00B3               	movf	(UART2_Init@baudrate+1)^080h,w
  4514  0550  0830               	movwf	((??_UART2_Init+0)^080h+0+1)
  4515  0551  00B4               	movf	(UART2_Init@baudrate+2)^080h,w
  4516  0552  0831               	movwf	((??_UART2_Init+0)^080h+0+2)
  4517  0553  00B5               	movf	(UART2_Init@baudrate+3)^080h,w
  4518  0554  0832               	movwf	((??_UART2_Init+0)^080h+0+3)
  4519  0555  00B6               	movlw	06h
  4520  0556  3006               u1775:
  4521  0557                     	lslf	(??_UART2_Init+0)^080h+0,f
  4522  0557  35B3               	rlf	(??_UART2_Init+0)^080h+1,f
  4523  0558  0DB4               	rlf	(??_UART2_Init+0)^080h+2,f
  4524  0559  0DB5               	rlf	(??_UART2_Init+0)^080h+3,f
  4525  055A  0DB6               u1770:
  4526  055B                     	decfsz	wreg,f
  4527  055B  0B89               	goto	u1775
  4528  055C  2D57               	movf	3+(??_UART2_Init+0)^080h+0,w
  4529  055D  0836               	movwf	(___aldiv@divisor+3)^080h
  4530  055E  00A3               	movf	2+(??_UART2_Init+0)^080h+0,w
  4531  055F  0835               	movwf	(___aldiv@divisor+2)^080h
  4532  0560  00A2               	movf	1+(??_UART2_Init+0)^080h+0,w
  4533  0561  0834               	movwf	(___aldiv@divisor+1)^080h
  4534  0562  00A1               	movf	0+(??_UART2_Init+0)^080h+0,w
  4535  0563  0833               	movwf	(___aldiv@divisor)^080h
  4536  0564  00A0               
  4537                           	movf	(UART2_Init@baudrate)^080h,w
  4538  0565  082F               	movwf	(??_UART2_Init+4)^080h+0
  4539  0566  00B7               	movf	(UART2_Init@baudrate+1)^080h,w
  4540  0567  0830               	movwf	((??_UART2_Init+4)^080h+0+1)
  4541  0568  00B8               	movf	(UART2_Init@baudrate+2)^080h,w
  4542  0569  0831               	movwf	((??_UART2_Init+4)^080h+0+2)
  4543  056A  00B9               	movf	(UART2_Init@baudrate+3)^080h,w
  4544  056B  0832               	movwf	((??_UART2_Init+4)^080h+0+3)
  4545  056C  00BA               	movlw	06h
  4546  056D  3006               u1785:
  4547  056E                     	lslf	(??_UART2_Init+4)^080h+0,f
  4548  056E  35B7               	rlf	(??_UART2_Init+4)^080h+1,f
  4549  056F  0DB8               	rlf	(??_UART2_Init+4)^080h+2,f
  4550  0570  0DB9               	rlf	(??_UART2_Init+4)^080h+3,f
  4551  0571  0DBA               u1780:
  4552  0572                     	decfsz	wreg,f
  4553  0572  0B89               	goto	u1785
  4554  0573  2D6E               	comf	(??_UART2_Init+4)^080h+0,f
  4555  0574  09B7               	comf	(??_UART2_Init+4)^080h+1,f
  4556  0575  09B8               	comf	(??_UART2_Init+4)^080h+2,f
  4557  0576  09B9               	comf	(??_UART2_Init+4)^080h+3,f
  4558  0577  09BA               	incf	(??_UART2_Init+4)^080h+0,f
  4559  0578  0AB7               	skipnz
  4560  0579  1903               	incf	(??_UART2_Init+4)^080h+1,f
  4561  057A  0AB8               	skipnz
  4562  057B  1903               	incf	(??_UART2_Init+4)^080h+2,f
  4563  057C  0AB9               	skipnz
  4564  057D  1903               	incf	(??_UART2_Init+4)^080h+3,f
  4565  057E  0ABA               	movlw	0
  4566  057F  3000               	addwf	(0+(??_UART2_Init+4)^080h+0),w
  4567  0580  0737               	movwf	(___aldiv@dividend)^080h
  4568  0581  00A4               	movlw	high(0F42400h)
  4569  0582  3024               	addwfc	(1+(??_UART2_Init+4)^080h+0),w
  4570  0583  3D38               	movwf	1+(___aldiv@dividend)^080h
  4571  0584  00A5               	
  4572                           	movlw	low highword(0F42400h)
  4573  0585  30F4               	addwfc	(2+(??_UART2_Init+4)^080h+0),w
  4574  0586  3D39               	movwf	2+(___aldiv@dividend)^080h
  4575  0587  00A6               	
  4576                           	movlw	high highword(0F42400h)
  4577  0588  3000               	addwfc	(3+(??_UART2_Init+4)^080h+0),w
  4578  0589  3D3A               	movwf	3+(___aldiv@dividend)^080h
  4579  058A  00A7               	fcall	___aldiv
  4580  058B  3187  2761  3185   	movlb 1	; select bank1
  4581  058E  0021               	movf	(1+(?___aldiv))^080h,w
  4582  058F  0821               	movwf	(UART2_Init@x+1)^080h
  4583  0590  00BC               	movf	(0+(?___aldiv))^080h,w
  4584  0591  0820               	movwf	(UART2_Init@x)^080h
  4585  0592  00BB               	line	4
  4586                           	
  4587                           l1756:	
  4588  0593                     ;./uart2.h: 4:     if (x > 255) {
  4589                           	movlw	01h
  4590  0593  3001               	subwf	(UART2_Init@x+1)^080h,w
  4591  0594  023C               	movlw	0
  4592  0595  3000               	skipnz
  4593  0596  1903               	subwf	(UART2_Init@x)^080h,w
  4594  0597  023B               	skipc
  4595  0598  1C03               	goto	u1791
  4596  0599  2D9B               	goto	u1790
  4597  059A  2D9C               u1791:
  4598  059B                     	goto	l1762
  4599  059B  2DE4               u1790:
  4600  059C                     	line	5
  4601                           	
  4602                           l1758:	
  4603  059C                     ;./uart2.h: 5:         x = (16000000 - baudrate * 16) / (baudrate * 16);
  4604                           	movf	(UART2_Init@baudrate)^080h,w
  4605  059C  082F               	movwf	(??_UART2_Init+0)^080h+0
  4606  059D  00B3               	movf	(UART2_Init@baudrate+1)^080h,w
  4607  059E  0830               	movwf	((??_UART2_Init+0)^080h+0+1)
  4608  059F  00B4               	movf	(UART2_Init@baudrate+2)^080h,w
  4609  05A0  0831               	movwf	((??_UART2_Init+0)^080h+0+2)
  4610  05A1  00B5               	movf	(UART2_Init@baudrate+3)^080h,w
  4611  05A2  0832               	movwf	((??_UART2_Init+0)^080h+0+3)
  4612  05A3  00B6               	movlw	04h
  4613  05A4  3004               u1805:
  4614  05A5                     	lslf	(??_UART2_Init+0)^080h+0,f
  4615  05A5  35B3               	rlf	(??_UART2_Init+0)^080h+1,f
  4616  05A6  0DB4               	rlf	(??_UART2_Init+0)^080h+2,f
  4617  05A7  0DB5               	rlf	(??_UART2_Init+0)^080h+3,f
  4618  05A8  0DB6               u1800:
  4619  05A9                     	decfsz	wreg,f
  4620  05A9  0B89               	goto	u1805
  4621  05AA  2DA5               	movf	3+(??_UART2_Init+0)^080h+0,w
  4622  05AB  0836               	movwf	(___aldiv@divisor+3)^080h
  4623  05AC  00A3               	movf	2+(??_UART2_Init+0)^080h+0,w
  4624  05AD  0835               	movwf	(___aldiv@divisor+2)^080h
  4625  05AE  00A2               	movf	1+(??_UART2_Init+0)^080h+0,w
  4626  05AF  0834               	movwf	(___aldiv@divisor+1)^080h
  4627  05B0  00A1               	movf	0+(??_UART2_Init+0)^080h+0,w
  4628  05B1  0833               	movwf	(___aldiv@divisor)^080h
  4629  05B2  00A0               
  4630                           	movf	(UART2_Init@baudrate)^080h,w
  4631  05B3  082F               	movwf	(??_UART2_Init+4)^080h+0
  4632  05B4  00B7               	movf	(UART2_Init@baudrate+1)^080h,w
  4633  05B5  0830               	movwf	((??_UART2_Init+4)^080h+0+1)
  4634  05B6  00B8               	movf	(UART2_Init@baudrate+2)^080h,w
  4635  05B7  0831               	movwf	((??_UART2_Init+4)^080h+0+2)
  4636  05B8  00B9               	movf	(UART2_Init@baudrate+3)^080h,w
  4637  05B9  0832               	movwf	((??_UART2_Init+4)^080h+0+3)
  4638  05BA  00BA               	movlw	04h
  4639  05BB  3004               u1815:
  4640  05BC                     	lslf	(??_UART2_Init+4)^080h+0,f
  4641  05BC  35B7               	rlf	(??_UART2_Init+4)^080h+1,f
  4642  05BD  0DB8               	rlf	(??_UART2_Init+4)^080h+2,f
  4643  05BE  0DB9               	rlf	(??_UART2_Init+4)^080h+3,f
  4644  05BF  0DBA               u1810:
  4645  05C0                     	decfsz	wreg,f
  4646  05C0  0B89               	goto	u1815
  4647  05C1  2DBC               	comf	(??_UART2_Init+4)^080h+0,f
  4648  05C2  09B7               	comf	(??_UART2_Init+4)^080h+1,f
  4649  05C3  09B8               	comf	(??_UART2_Init+4)^080h+2,f
  4650  05C4  09B9               	comf	(??_UART2_Init+4)^080h+3,f
  4651  05C5  09BA               	incf	(??_UART2_Init+4)^080h+0,f
  4652  05C6  0AB7               	skipnz
  4653  05C7  1903               	incf	(??_UART2_Init+4)^080h+1,f
  4654  05C8  0AB8               	skipnz
  4655  05C9  1903               	incf	(??_UART2_Init+4)^080h+2,f
  4656  05CA  0AB9               	skipnz
  4657  05CB  1903               	incf	(??_UART2_Init+4)^080h+3,f
  4658  05CC  0ABA               	movlw	0
  4659  05CD  3000               	addwf	(0+(??_UART2_Init+4)^080h+0),w
  4660  05CE  0737               	movwf	(___aldiv@dividend)^080h
  4661  05CF  00A4               	movlw	high(0F42400h)
  4662  05D0  3024               	addwfc	(1+(??_UART2_Init+4)^080h+0),w
  4663  05D1  3D38               	movwf	1+(___aldiv@dividend)^080h
  4664  05D2  00A5               	
  4665                           	movlw	low highword(0F42400h)
  4666  05D3  30F4               	addwfc	(2+(??_UART2_Init+4)^080h+0),w
  4667  05D4  3D39               	movwf	2+(___aldiv@dividend)^080h
  4668  05D5  00A6               	
  4669                           	movlw	high highword(0F42400h)
  4670  05D6  3000               	addwfc	(3+(??_UART2_Init+4)^080h+0),w
  4671  05D7  3D3A               	movwf	3+(___aldiv@dividend)^080h
  4672  05D8  00A7               	fcall	___aldiv
  4673  05D9  3187  2761  3185   	movlb 1	; select bank1
  4674  05DC  0021               	movf	(1+(?___aldiv))^080h,w
  4675  05DD  0821               	movwf	(UART2_Init@x+1)^080h
  4676  05DE  00BC               	movf	(0+(?___aldiv))^080h,w
  4677  05DF  0820               	movwf	(UART2_Init@x)^080h
  4678  05E0  00BB               	line	6
  4679                           	
  4680                           l1760:	
  4681  05E1                     ;./uart2.h: 6:         TX2STAbits.BRGH = 1;
  4682                           	movlb 9	; select bank9
  4683  05E1  0029               	bsf	(1174)^0480h,2	;volatile
  4684  05E2  1516               	goto	l1762
  4685  05E3  2DE4               	line	7
  4686                           ;./uart2.h: 7:     }
  4687                           	
  4688                           l87:	
  4689  05E4                     	line	8
  4690                           	
  4691                           l1762:	
  4692  05E4                     ;./uart2.h: 8:     if (x < 256) {
  4693                           	movlw	01h
  4694  05E4  3001               	movlb 1	; select bank1
  4695  05E5  0021               	subwf	(UART2_Init@x+1)^080h,w
  4696  05E6  023C               	movlw	0
  4697  05E7  3000               	skipnz
  4698  05E8  1903               	subwf	(UART2_Init@x)^080h,w
  4699  05E9  023B               	skipnc
  4700  05EA  1803               	goto	u1821
  4701  05EB  2DED               	goto	u1820
  4702  05EC  2DEE               u1821:
  4703  05ED                     	goto	l89
  4704  05ED  2DFE               u1820:
  4705  05EE                     	line	9
  4706                           	
  4707                           l1764:	
  4708  05EE                     ;./uart2.h: 9:         ANSELG = 0;
  4709                           	movlb 8	; select bank8
  4710  05EE  0028               	clrf	(1037)^0400h	;volatile
  4711  05EF  018D               	line	10
  4712                           	
  4713                           l1766:	
  4714  05F0                     ;./uart2.h: 10:         SP2BRGL = x;
  4715                           	movlb 1	; select bank1
  4716  05F0  0021               	movf	(UART2_Init@x)^080h,w
  4717  05F1  083B               	movlb 9	; select bank9
  4718  05F2  0029               	movwf	(1171)^0480h	;volatile
  4719  05F3  0093               	line	11
  4720                           	
  4721                           l1768:	
  4722  05F4                     ;./uart2.h: 11:         TX2STAbits.SYNC = 0;
  4723                           	bcf	(1174)^0480h,4	;volatile
  4724  05F4  1216               	line	12
  4725                           	
  4726                           l1770:	
  4727  05F5                     ;./uart2.h: 12:         RC2STAbits.SPEN = 1;
  4728                           	bsf	(1173)^0480h,7	;volatile
  4729  05F5  1795               	line	13
  4730                           	
  4731                           l1772:	
  4732  05F6                     ;./uart2.h: 13:         TRISG2 = 1;
  4733                           	movlb 6	; select bank6
  4734  05F6  0026               	bsf	(6250/8)^0300h,(6250)&7	;volatile
  4735  05F7  150D               	line	14
  4736                           	
  4737                           l1774:	
  4738  05F8                     ;./uart2.h: 14:         TRISG1 = 0;
  4739                           	bcf	(6249/8)^0300h,(6249)&7	;volatile
  4740  05F8  108D               	line	15
  4741                           	
  4742                           l1776:	
  4743  05F9                     ;./uart2.h: 15:         RC2STAbits.CREN = 1;
  4744                           	movlb 9	; select bank9
  4745  05F9  0029               	bsf	(1173)^0480h,4	;volatile
  4746  05FA  1615               	line	16
  4747                           	
  4748                           l1778:	
  4749  05FB                     ;./uart2.h: 16:         TX2STAbits.TXEN = 1;
  4750                           	bsf	(1174)^0480h,5	;volatile
  4751  05FB  1696               	goto	l89
  4752  05FC  2DFE               	line	17
  4753                           	
  4754                           l1780:	
  4755  05FD                     ;./uart2.h: 17:         return 1;;	Return value of _UART2_Init is never used
  4756                           	goto	l89
  4757  05FD  2DFE               	line	18
  4758                           ;./uart2.h: 18:     }
  4759                           	
  4760                           l88:	
  4761  05FE                     	line	20
  4762                           ;./uart2.h: 19:     return 0;;	Return value of _UART2_Init is never used
  4763                           	
  4764                           l89:	
  4765  05FE                     	return
  4766  05FE  0008               	opt stack 0
  4767                           GLOBAL	__end_of_UART2_Init
  4768                           	__end_of_UART2_Init:
  4769  05FF                     	signat	_UART2_Init,4217
  4770                           	global	___aldiv
  4771                           
  4772 ;; *************** function ___aldiv *****************
  4773 ;; Defined at:
  4774 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\aldiv.c"
  4775 ;; Parameters:    Size  Location     Type
  4776 ;;  divisor         4    0[BANK1 ] long 
  4777 ;;  dividend        4    4[BANK1 ] long 
  4778 ;; Auto vars:     Size  Location     Type
  4779 ;;  quotient        4   11[BANK1 ] long 
  4780 ;;  sign            1   10[BANK1 ] unsigned char 
  4781 ;;  counter         1    9[BANK1 ] unsigned char 
  4782 ;; Return value:  Size  Location     Type
  4783 ;;                  4    0[BANK1 ] long 
  4784 ;; Registers used:
  4785 ;;		wreg, status,2, status,0
  4786 ;; Tracked objects:
  4787 ;;		On entry : 0/0
  4788 ;;		On exit  : 0/0
  4789 ;;		Unchanged: 0/0
  4790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4791 ;;      Params:         0       0       8       0       0       0       0       0
  4792 ;;      Locals:         0       0       6       0       0       0       0       0
  4793 ;;      Temps:          0       0       1       0       0       0       0       0
  4794 ;;      Totals:         0       0      15       0       0       0       0       0
  4795 ;;Total ram usage:       15 bytes
  4796 ;; Hardware stack levels used:    1
  4797 ;; Hardware stack levels required when called:    3
  4798 ;; This function calls:
  4799 ;;		Nothing
  4800 ;; This function is called by:
  4801 ;;		_UART_Init
  4802 ;;		_UART2_Init
  4803 ;; This function uses a non-reentrant model
  4804 ;;
  4805                           psect	text9,local,class=CODE,delta=2,merge=1,group=1
  4806                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\aldiv.c"
  4807                           	line	5
  4808                           global __ptext9
  4809                           __ptext9:	;psect for function ___aldiv
  4810  0761                     psect	text9
  4811                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\aldiv.c"
  4812                           	line	5
  4813                           	global	__size_of___aldiv
  4814                           	__size_of___aldiv	equ	__end_of___aldiv-___aldiv
  4815  0099                     	
  4816                           ___aldiv:	
  4817  0761                     ;incstack = 0
  4818                           	opt	stack 11
  4819                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  4820                           	line	13
  4821                           	
  4822                           l1606:	
  4823  0761                     	movlb 1	; select bank1
  4824  0761  0021               	clrf	(___aldiv@sign)^080h
  4825  0762  01AA               	line	14
  4826                           	
  4827                           l1608:	
  4828  0763                     	btfss	(___aldiv@divisor+3)^080h,7
  4829  0763  1FA3               	goto	u1441
  4830  0764  2F66               	goto	u1440
  4831  0765  2F67               u1441:
  4832  0766                     	goto	l460
  4833  0766  2F74               u1440:
  4834  0767                     	line	15
  4835                           	
  4836                           l1610:	
  4837  0767                     	comf	(___aldiv@divisor)^080h,f
  4838  0767  09A0               	comf	(___aldiv@divisor+1)^080h,f
  4839  0768  09A1               	comf	(___aldiv@divisor+2)^080h,f
  4840  0769  09A2               	comf	(___aldiv@divisor+3)^080h,f
  4841  076A  09A3               	incf	(___aldiv@divisor)^080h,f
  4842  076B  0AA0               	skipnz
  4843  076C  1903               	incf	(___aldiv@divisor+1)^080h,f
  4844  076D  0AA1               	skipnz
  4845  076E  1903               	incf	(___aldiv@divisor+2)^080h,f
  4846  076F  0AA2               	skipnz
  4847  0770  1903               	incf	(___aldiv@divisor+3)^080h,f
  4848  0771  0AA3               	line	16
  4849                           	clrf	(___aldiv@sign)^080h
  4850  0772  01AA               	incf	(___aldiv@sign)^080h,f
  4851  0773  0AAA               	line	17
  4852                           	
  4853                           l460:	
  4854  0774                     	line	18
  4855                           	btfss	(___aldiv@dividend+3)^080h,7
  4856  0774  1FA7               	goto	u1451
  4857  0775  2F77               	goto	u1450
  4858  0776  2F78               u1451:
  4859  0777                     	goto	l1616
  4860  0777  2F88               u1450:
  4861  0778                     	line	19
  4862                           	
  4863                           l1612:	
  4864  0778                     	comf	(___aldiv@dividend)^080h,f
  4865  0778  09A4               	comf	(___aldiv@dividend+1)^080h,f
  4866  0779  09A5               	comf	(___aldiv@dividend+2)^080h,f
  4867  077A  09A6               	comf	(___aldiv@dividend+3)^080h,f
  4868  077B  09A7               	incf	(___aldiv@dividend)^080h,f
  4869  077C  0AA4               	skipnz
  4870  077D  1903               	incf	(___aldiv@dividend+1)^080h,f
  4871  077E  0AA5               	skipnz
  4872  077F  1903               	incf	(___aldiv@dividend+2)^080h,f
  4873  0780  0AA6               	skipnz
  4874  0781  1903               	incf	(___aldiv@dividend+3)^080h,f
  4875  0782  0AA7               	line	20
  4876                           	
  4877                           l1614:	
  4878  0783                     	movlw	low(01h)
  4879  0783  3001               	movwf	(??___aldiv+0)^080h+0
  4880  0784  00A8               	movf	(??___aldiv+0)^080h+0,w
  4881  0785  0828               	xorwf	(___aldiv@sign)^080h,f
  4882  0786  06AA               	goto	l1616
  4883  0787  2F88               	line	21
  4884                           	
  4885                           l461:	
  4886  0788                     	line	22
  4887                           	
  4888                           l1616:	
  4889  0788                     	movlw	high highword(0)
  4890  0788  3000               	movwf	(___aldiv@quotient+3)^080h
  4891  0789  00AE               	movlw	low highword(0)
  4892  078A  3000               	movwf	(___aldiv@quotient+2)^080h
  4893  078B  00AD               	movlw	high(0)
  4894  078C  3000               	movwf	(___aldiv@quotient+1)^080h
  4895  078D  00AC               	movlw	low(0)
  4896  078E  3000               	movwf	(___aldiv@quotient)^080h
  4897  078F  00AB               
  4898                           	line	23
  4899                           	
  4900                           l1618:	
  4901  0790                     	movf	(___aldiv@divisor+3)^080h,w
  4902  0790  0823               	iorwf	(___aldiv@divisor+2)^080h,w
  4903  0791  0422               	iorwf	(___aldiv@divisor+1)^080h,w
  4904  0792  0421               	iorwf	(___aldiv@divisor)^080h,w
  4905  0793  0420               	skipnz
  4906  0794  1903               	goto	u1461
  4907  0795  2F97               	goto	u1460
  4908  0796  2F98               u1461:
  4909  0797                     	goto	l1638
  4910  0797  2FDF               u1460:
  4911  0798                     	line	24
  4912                           	
  4913                           l1620:	
  4914  0798                     	clrf	(___aldiv@counter)^080h
  4915  0798  01A9               	incf	(___aldiv@counter)^080h,f
  4916  0799  0AA9               	line	25
  4917                           	goto	l1624
  4918  079A  2FA7               	
  4919                           l464:	
  4920  079B                     	line	26
  4921                           	
  4922                           l1622:	
  4923  079B                     	movlw	01h
  4924  079B  3001               u1475:
  4925  079C                     	lslf	(___aldiv@divisor)^080h,f
  4926  079C  35A0               	rlf	(___aldiv@divisor+1)^080h,f
  4927  079D  0DA1               	rlf	(___aldiv@divisor+2)^080h,f
  4928  079E  0DA2               	rlf	(___aldiv@divisor+3)^080h,f
  4929  079F  0DA3               	decfsz	wreg,f
  4930  07A0  0B89               	goto	u1475
  4931  07A1  2F9C               	line	27
  4932                           	movlw	low(01h)
  4933  07A2  3001               	movwf	(??___aldiv+0)^080h+0
  4934  07A3  00A8               	movf	(??___aldiv+0)^080h+0,w
  4935  07A4  0828               	addwf	(___aldiv@counter)^080h,f
  4936  07A5  07A9               	goto	l1624
  4937  07A6  2FA7               	line	28
  4938                           	
  4939                           l463:	
  4940  07A7                     	line	25
  4941                           	
  4942                           l1624:	
  4943  07A7                     	btfss	(___aldiv@divisor+3)^080h,(31)&7
  4944  07A7  1FA3               	goto	u1481
  4945  07A8  2FAA               	goto	u1480
  4946  07A9  2FAB               u1481:
  4947  07AA                     	goto	l1622
  4948  07AA  2F9B               u1480:
  4949  07AB                     	goto	l1626
  4950  07AB  2FAD               	
  4951                           l465:	
  4952  07AC                     	goto	l1626
  4953  07AC  2FAD               	line	29
  4954                           	
  4955                           l466:	
  4956  07AD                     	line	30
  4957                           	
  4958                           l1626:	
  4959  07AD                     	movlw	01h
  4960  07AD  3001               u1495:
  4961  07AE                     	lslf	(___aldiv@quotient)^080h,f
  4962  07AE  35AB               	rlf	(___aldiv@quotient+1)^080h,f
  4963  07AF  0DAC               	rlf	(___aldiv@quotient+2)^080h,f
  4964  07B0  0DAD               	rlf	(___aldiv@quotient+3)^080h,f
  4965  07B1  0DAE               	decfsz	wreg,f
  4966  07B2  0B89               	goto	u1495
  4967  07B3  2FAE               	line	31
  4968                           	
  4969                           l1628:	
  4970  07B4                     	movf	(___aldiv@divisor+3)^080h,w
  4971  07B4  0823               	subwf	(___aldiv@dividend+3)^080h,w
  4972  07B5  0227               	skipz
  4973  07B6  1D03               	goto	u1505
  4974  07B7  2FC2               	movf	(___aldiv@divisor+2)^080h,w
  4975  07B8  0822               	subwf	(___aldiv@dividend+2)^080h,w
  4976  07B9  0226               	skipz
  4977  07BA  1D03               	goto	u1505
  4978  07BB  2FC2               	movf	(___aldiv@divisor+1)^080h,w
  4979  07BC  0821               	subwf	(___aldiv@dividend+1)^080h,w
  4980  07BD  0225               	skipz
  4981  07BE  1D03               	goto	u1505
  4982  07BF  2FC2               	movf	(___aldiv@divisor)^080h,w
  4983  07C0  0820               	subwf	(___aldiv@dividend)^080h,w
  4984  07C1  0224               u1505:
  4985  07C2                     	skipc
  4986  07C2  1C03               	goto	u1501
  4987  07C3  2FC5               	goto	u1500
  4988  07C4  2FC6               u1501:
  4989  07C5                     	goto	l1634
  4990  07C5  2FD0               u1500:
  4991  07C6                     	line	32
  4992                           	
  4993                           l1630:	
  4994  07C6                     	movf	(___aldiv@divisor)^080h,w
  4995  07C6  0820               	subwf	(___aldiv@dividend)^080h,f
  4996  07C7  02A4               	movf	(___aldiv@divisor+1)^080h,w
  4997  07C8  0821               	subwfb	(___aldiv@dividend+1)^080h,f
  4998  07C9  3BA5               	movf	(___aldiv@divisor+2)^080h,w
  4999  07CA  0822               	subwfb	(___aldiv@dividend+2)^080h,f
  5000  07CB  3BA6               	movf	(___aldiv@divisor+3)^080h,w
  5001  07CC  0823               	subwfb	(___aldiv@dividend+3)^080h,f
  5002  07CD  3BA7               	line	33
  5003                           	
  5004                           l1632:	
  5005  07CE                     	bsf	(___aldiv@quotient)^080h+(0/8),(0)&7
  5006  07CE  142B               	goto	l1634
  5007  07CF  2FD0               	line	34
  5008                           	
  5009                           l467:	
  5010  07D0                     	line	35
  5011                           	
  5012                           l1634:	
  5013  07D0                     	movlw	01h
  5014  07D0  3001               u1515:
  5015  07D1                     	lsrf	(___aldiv@divisor+3)^080h,f
  5016  07D1  36A3               	rrf	(___aldiv@divisor+2)^080h,f
  5017  07D2  0CA2               	rrf	(___aldiv@divisor+1)^080h,f
  5018  07D3  0CA1               	rrf	(___aldiv@divisor)^080h,f
  5019  07D4  0CA0               	decfsz	wreg,f
  5020  07D5  0B89               	goto	u1515
  5021  07D6  2FD1               
  5022                           	line	36
  5023                           	
  5024                           l1636:	
  5025  07D7                     	movlw	01h
  5026  07D7  3001               	subwf	(___aldiv@counter)^080h,f
  5027  07D8  02A9               	btfss	status,2
  5028  07D9  1D03               	goto	u1521
  5029  07DA  2FDC               	goto	u1520
  5030  07DB  2FDD               u1521:
  5031  07DC                     	goto	l1626
  5032  07DC  2FAD               u1520:
  5033  07DD                     	goto	l1638
  5034  07DD  2FDF               	
  5035                           l468:	
  5036  07DE                     	goto	l1638
  5037  07DE  2FDF               	line	37
  5038                           	
  5039                           l462:	
  5040  07DF                     	line	38
  5041                           	
  5042                           l1638:	
  5043  07DF                     	movf	((___aldiv@sign)^080h),w
  5044  07DF  082A               	btfsc	status,2
  5045  07E0  1903               	goto	u1531
  5046  07E1  2FE3               	goto	u1530
  5047  07E2  2FE4               u1531:
  5048  07E3                     	goto	l1642
  5049  07E3  2FF0               u1530:
  5050  07E4                     	line	39
  5051                           	
  5052                           l1640:	
  5053  07E4                     	comf	(___aldiv@quotient)^080h,f
  5054  07E4  09AB               	comf	(___aldiv@quotient+1)^080h,f
  5055  07E5  09AC               	comf	(___aldiv@quotient+2)^080h,f
  5056  07E6  09AD               	comf	(___aldiv@quotient+3)^080h,f
  5057  07E7  09AE               	incf	(___aldiv@quotient)^080h,f
  5058  07E8  0AAB               	skipnz
  5059  07E9  1903               	incf	(___aldiv@quotient+1)^080h,f
  5060  07EA  0AAC               	skipnz
  5061  07EB  1903               	incf	(___aldiv@quotient+2)^080h,f
  5062  07EC  0AAD               	skipnz
  5063  07ED  1903               	incf	(___aldiv@quotient+3)^080h,f
  5064  07EE  0AAE               	goto	l1642
  5065  07EF  2FF0               	
  5066                           l469:	
  5067  07F0                     	line	40
  5068                           	
  5069                           l1642:	
  5070  07F0                     	movf	(___aldiv@quotient+3)^080h,w
  5071  07F0  082E               	movwf	(?___aldiv+3)^080h
  5072  07F1  00A3               	movf	(___aldiv@quotient+2)^080h,w
  5073  07F2  082D               	movwf	(?___aldiv+2)^080h
  5074  07F3  00A2               	movf	(___aldiv@quotient+1)^080h,w
  5075  07F4  082C               	movwf	(?___aldiv+1)^080h
  5076  07F5  00A1               	movf	(___aldiv@quotient)^080h,w
  5077  07F6  082B               	movwf	(?___aldiv)^080h
  5078  07F7  00A0               
  5079                           	goto	l470
  5080  07F8  2FF9               	
  5081                           l1644:	
  5082  07F9                     	line	41
  5083                           	
  5084                           l470:	
  5085  07F9                     	return
  5086  07F9  0008               	opt stack 0
  5087                           GLOBAL	__end_of___aldiv
  5088                           	__end_of___aldiv:
  5089  07FA                     	signat	___aldiv,8316
  5090                           	global	_UART2_Data_Ready
  5091                           
  5092 ;; *************** function _UART2_Data_Ready *****************
  5093 ;; Defined at:
  5094 ;;		line 26 in file "./uart2.h"
  5095 ;; Parameters:    Size  Location     Type
  5096 ;;		None
  5097 ;; Auto vars:     Size  Location     Type
  5098 ;;		None
  5099 ;; Return value:  Size  Location     Type
  5100 ;;                  1    wreg      unsigned char 
  5101 ;; Registers used:
  5102 ;;		wreg, status,2, status,0
  5103 ;; Tracked objects:
  5104 ;;		On entry : 0/0
  5105 ;;		On exit  : 0/0
  5106 ;;		Unchanged: 0/0
  5107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5108 ;;      Params:         0       0       0       0       0       0       0       0
  5109 ;;      Locals:         0       0       0       0       0       0       0       0
  5110 ;;      Temps:          0       0       0       0       0       0       0       0
  5111 ;;      Totals:         0       0       0       0       0       0       0       0
  5112 ;;Total ram usage:        0 bytes
  5113 ;; Hardware stack levels used:    1
  5114 ;; Hardware stack levels required when called:    3
  5115 ;; This function calls:
  5116 ;;		Nothing
  5117 ;; This function is called by:
  5118 ;;		_main
  5119 ;; This function uses a non-reentrant model
  5120 ;;
  5121                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  5122                           	file	"./uart2.h"
  5123                           	line	26
  5124                           global __ptext10
  5125                           __ptext10:	;psect for function _UART2_Data_Ready
  5126  0B14                     psect	text10
  5127                           	file	"./uart2.h"
  5128                           	line	26
  5129                           	global	__size_of_UART2_Data_Ready
  5130                           	__size_of_UART2_Data_Ready	equ	__end_of_UART2_Data_Ready-_UART2_Data_Ready
  5131  0006                     	
  5132                           _UART2_Data_Ready:	
  5133  0B14                     ;incstack = 0
  5134                           	opt	stack 12
  5135                           ; Regs used in _UART2_Data_Ready: [wreg+status,2+status,0]
  5136                           	line	27
  5137                           	
  5138                           l1782:	
  5139  0B14                     ;./uart2.h: 27:     return PIR4bits.RC2IF;
  5140                           	movlb 0	; select bank0
  5141  0B14  0020               	swapf	(20),w	;volatile
  5142  0B15  0E14               	rrf	wreg,f
  5143  0B16  0C89               	andlw	(1<<1)-1
  5144  0B17  3901               	goto	l95
  5145  0B18  2B19               	
  5146                           l1784:	
  5147  0B19                     	line	28
  5148                           	
  5149                           l95:	
  5150  0B19                     	return
  5151  0B19  0008               	opt stack 0
  5152                           GLOBAL	__end_of_UART2_Data_Ready
  5153                           	__end_of_UART2_Data_Ready:
  5154  0B1A                     	signat	_UART2_Data_Ready,89
  5155                           	global	_CONVERT_Data_1
  5156                           
  5157 ;; *************** function _CONVERT_Data_1 *****************
  5158 ;; Defined at:
  5159 ;;		line 75 in file "main.c"
  5160 ;; Parameters:    Size  Location     Type
  5161 ;;  input           1    wreg     PTR unsigned char 
  5162 ;;		 -> main@data(8), ISR@data1(13), 
  5163 ;;  output_ref      1   20[BANK1 ] PTR unsigned char 
  5164 ;;		 -> main@crc_code(2), ISR@crc_code_1(2), 
  5165 ;; Auto vars:     Size  Location     Type
  5166 ;;  input           1   37[BANK1 ] PTR unsigned char 
  5167 ;;		 -> main@data(8), ISR@data1(13), 
  5168 ;;  i               2   40[BANK1 ] unsigned int 
  5169 ;;  input_ref       6   29[BANK1 ] unsigned char [6]
  5170 ;;  txt             6   23[BANK1 ] unsigned char [6]
  5171 ;;  output          2   35[BANK1 ] unsigned char [2]
  5172 ;;  crc             2   38[BANK1 ] unsigned int 
  5173 ;; Return value:  Size  Location     Type
  5174 ;;                  1    wreg      void 
  5175 ;; Registers used:
  5176 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5177 ;; Tracked objects:
  5178 ;;		On entry : 0/0
  5179 ;;		On exit  : 0/0
  5180 ;;		Unchanged: 0/0
  5181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5182 ;;      Params:         0       0       1       0       0       0       0       0
  5183 ;;      Locals:         0       0      19       0       0       0       0       0
  5184 ;;      Temps:          0       0       2       0       0       0       0       0
  5185 ;;      Totals:         0       0      22       0       0       0       0       0
  5186 ;;Total ram usage:       22 bytes
  5187 ;; Hardware stack levels used:    1
  5188 ;; Hardware stack levels required when called:    4
  5189 ;; This function calls:
  5190 ;;		_crc16
  5191 ;;		_reflect_byte
  5192 ;; This function is called by:
  5193 ;;		_main
  5194 ;; This function uses a non-reentrant model
  5195 ;;
  5196                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  5197                           	file	"main.c"
  5198                           	line	75
  5199                           global __ptext11
  5200                           __ptext11:	;psect for function _CONVERT_Data_1
  5201  0E59                     psect	text11
  5202                           	file	"main.c"
  5203                           	line	75
  5204                           	global	__size_of_CONVERT_Data_1
  5205                           	__size_of_CONVERT_Data_1	equ	__end_of_CONVERT_Data_1-_CONVERT_Data_1
  5206  007A                     	
  5207                           _CONVERT_Data_1:	
  5208  0E59                     ;incstack = 0
  5209                           	opt	stack 11
  5210                           ; Regs used in _CONVERT_Data_1: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5211                           ;CONVERT_Data_1@input stored from wreg
  5212                           	movlb 1	; select bank1
  5213  0E59  0021               	movwf	(CONVERT_Data_1@input)^080h
  5214  0E5A  00C5               	line	77
  5215                           	
  5216                           l1838:	
  5217  0E5B                     ;main.c: 77:     unsigned char input_ref[6] = "";
  5218                           	movlw	low(CONVERT_Data_1@F4665)
  5219  0E5B  30DE               	movwf	fsr1l
  5220  0E5C  0086               	movlw	high(CONVERT_Data_1@F4665)
  5221  0E5D  3000               	movwf	fsr1h
  5222  0E5E  0087               	movlw	low(CONVERT_Data_1@input_ref)
  5223  0E5F  30BD               	movwf	fsr0l
  5224  0E60  0084               	movlw	high(CONVERT_Data_1@input_ref)
  5225  0E61  3000               	movwf	fsr0h
  5226  0E62  0085               	movlw	6
  5227  0E63  3006               	movwf	(??_CONVERT_Data_1+0)^080h+0
  5228  0E64  00B5               u1910:
  5229  0E65                     	moviw	fsr1++
  5230  0E65  0016               	movwi	fsr0++
  5231  0E66  001A               	decfsz	(??_CONVERT_Data_1+0)^080h+0,f
  5232  0E67  0BB5               	goto	u1910
  5233  0E68  2E65               	line	78
  5234                           ;main.c: 78:     unsigned char txt[6] = "";
  5235                           	movlw	low(CONVERT_Data_1@F4667)
  5236  0E69  30D8               	movwf	fsr1l
  5237  0E6A  0086               	movlw	high(CONVERT_Data_1@F4667)
  5238  0E6B  3000               	movwf	fsr1h
  5239  0E6C  0087               	movlw	low(CONVERT_Data_1@txt)
  5240  0E6D  30B7               	movwf	fsr0l
  5241  0E6E  0084               	movlw	high(CONVERT_Data_1@txt)
  5242  0E6F  3000               	movwf	fsr0h
  5243  0E70  0085               	movlw	6
  5244  0E71  3006               	movwf	(??_CONVERT_Data_1+0)^080h+0
  5245  0E72  00B5               u1920:
  5246  0E73                     	moviw	fsr1++
  5247  0E73  0016               	movwi	fsr0++
  5248  0E74  001A               	decfsz	(??_CONVERT_Data_1+0)^080h+0,f
  5249  0E75  0BB5               	goto	u1920
  5250  0E76  2E73               	line	80
  5251                           	
  5252                           l1840:	
  5253  0E77                     ;main.c: 79:     unsigned int crc;;main.c: 80:     unsigned char output[2] = "";
  5254                           	movf	(CONVERT_Data_1@F4670+1)^080h,w
  5255  0E77  0867               	movwf	(CONVERT_Data_1@output+1)^080h
  5256  0E78  00C4               	movf	(CONVERT_Data_1@F4670)^080h,w
  5257  0E79  0866               	movwf	(CONVERT_Data_1@output)^080h
  5258  0E7A  00C3               	line	81
  5259                           	
  5260                           l1842:	
  5261  0E7B                     ;main.c: 81:     reflect_byte(input, input_ref, 6);
  5262                           	movlw	(low(CONVERT_Data_1@input_ref|((0x0)<<8)))&0ffh
  5263  0E7B  30BD               	movwf	(??_CONVERT_Data_1+0)^080h+0
  5264  0E7C  00B5               	movf	(??_CONVERT_Data_1+0)^080h+0,w
  5265  0E7D  0835               	movwf	(reflect_byte@byte_ref)^080h
  5266  0E7E  00A0               	movlw	low(06h)
  5267  0E7F  3006               	movwf	(??_CONVERT_Data_1+1)^080h+0
  5268  0E80  00B6               	movf	(??_CONVERT_Data_1+1)^080h+0,w
  5269  0E81  0836               	movwf	(reflect_byte@index)^080h
  5270  0E82  00A1               	movf	(CONVERT_Data_1@input)^080h,w
  5271  0E83  0845               	fcall	_reflect_byte
  5272  0E84  318C  24A5  318E   	line	85
  5273                           	
  5274                           l1844:	
  5275  0E87                     ;main.c: 85:     for (unsigned int i = 0; i < 6; i++) {
  5276                           	movlb 1	; select bank1
  5277  0E87  0021               	clrf	(CONVERT_Data_1@i)^080h
  5278  0E88  01C8               	clrf	(CONVERT_Data_1@i+1)^080h
  5279  0E89  01C9               	
  5280                           l1846:	
  5281  0E8A                     	movlw	0
  5282  0E8A  3000               	subwf	(CONVERT_Data_1@i+1)^080h,w
  5283  0E8B  0249               	movlw	06h
  5284  0E8C  3006               	skipnz
  5285  0E8D  1903               	subwf	(CONVERT_Data_1@i)^080h,w
  5286  0E8E  0248               	skipc
  5287  0E8F  1C03               	goto	u1931
  5288  0E90  2E92               	goto	u1930
  5289  0E91  2E93               u1931:
  5290  0E92                     	goto	l1850
  5291  0E92  2E95               u1930:
  5292  0E93                     	goto	l1856
  5293  0E93  2EB1               	
  5294                           l1848:	
  5295  0E94                     	goto	l1856
  5296  0E94  2EB1               	
  5297                           l239:	
  5298  0E95                     	line	86
  5299                           	
  5300                           l1850:	
  5301  0E95                     ;main.c: 86:         txt[i] = input_ref[6 - 1 - i];
  5302                           	decf	(CONVERT_Data_1@i)^080h,w
  5303  0E95  0348               	xorlw	0ffh
  5304  0E96  3AFF               	addlw	05h
  5305  0E97  3E05               	addlw	low(CONVERT_Data_1@input_ref|((0x0)<<8))&0ffh
  5306  0E98  3EBD               	movwf	fsr1l
  5307  0E99  0086               	clrf fsr1h	
  5308  0E9A  0187               	
  5309                           	movf	indf1,w
  5310  0E9B  0801               	movwf	(??_CONVERT_Data_1+0)^080h+0
  5311  0E9C  00B5               	movf	(CONVERT_Data_1@i)^080h,w
  5312  0E9D  0848               	addlw	low(CONVERT_Data_1@txt|((0x0)<<8))&0ffh
  5313  0E9E  3EB7               	movwf	fsr1l
  5314  0E9F  0086               	clrf fsr1h	
  5315  0EA0  0187               	
  5316                           	movf	(??_CONVERT_Data_1+0)^080h+0,w
  5317  0EA1  0835               	movwf	indf1
  5318  0EA2  0081               	line	87
  5319                           	
  5320                           l1852:	
  5321  0EA3                     ;main.c: 87:     }
  5322                           	movlw	01h
  5323  0EA3  3001               	addwf	(CONVERT_Data_1@i)^080h,f
  5324  0EA4  07C8               	movlw	0
  5325  0EA5  3000               	addwfc	(CONVERT_Data_1@i+1)^080h,f
  5326  0EA6  3DC9               	
  5327                           l1854:	
  5328  0EA7                     	movlw	0
  5329  0EA7  3000               	subwf	(CONVERT_Data_1@i+1)^080h,w
  5330  0EA8  0249               	movlw	06h
  5331  0EA9  3006               	skipnz
  5332  0EAA  1903               	subwf	(CONVERT_Data_1@i)^080h,w
  5333  0EAB  0248               	skipc
  5334  0EAC  1C03               	goto	u1941
  5335  0EAD  2EAF               	goto	u1940
  5336  0EAE  2EB0               u1941:
  5337  0EAF                     	goto	l1850
  5338  0EAF  2E95               u1940:
  5339  0EB0                     	goto	l1856
  5340  0EB0  2EB1               	
  5341                           l240:	
  5342  0EB1                     	line	89
  5343                           	
  5344                           l1856:	
  5345  0EB1                     ;main.c: 89:     crc = crc16(txt, 6);
  5346                           	movlw	06h
  5347  0EB1  3006               	movwf	(crc16@dataLen)^080h
  5348  0EB2  00A0               	movlw	0
  5349  0EB3  3000               	movwf	((crc16@dataLen)^080h)+1
  5350  0EB4  00A1               	movlw	(low(CONVERT_Data_1@txt|((0x0)<<8)))&0ffh
  5351  0EB5  30B7               	fcall	_crc16
  5352  0EB6  3185  25FF  318E   	movlb 1	; select bank1
  5353  0EB9  0021               	movf	(1+(?_crc16))^080h,w
  5354  0EBA  0821               	movwf	(CONVERT_Data_1@crc+1)^080h
  5355  0EBB  00C7               	movf	(0+(?_crc16))^080h,w
  5356  0EBC  0820               	movwf	(CONVERT_Data_1@crc)^080h
  5357  0EBD  00C6               	line	90
  5358                           	
  5359                           l1858:	
  5360  0EBE                     ;main.c: 90:     output[0] = crc & 0xff;
  5361                           	movf	(CONVERT_Data_1@crc)^080h,w
  5362  0EBE  0846               	movwf	(??_CONVERT_Data_1+0)^080h+0
  5363  0EBF  00B5               	movf	(??_CONVERT_Data_1+0)^080h+0,w
  5364  0EC0  0835               	movwf	(CONVERT_Data_1@output)^080h
  5365  0EC1  00C3               	line	91
  5366                           	
  5367                           l1860:	
  5368  0EC2                     ;main.c: 91:     output[1] = (crc >> 8)&0xff;
  5369                           	movf	(CONVERT_Data_1@crc+1)^080h,w
  5370  0EC2  0847               	movwf	(??_CONVERT_Data_1+0)^080h+0
  5371  0EC3  00B5               	movf	(??_CONVERT_Data_1+0)^080h+0,w
  5372  0EC4  0835               	movwf	0+(CONVERT_Data_1@output)^080h+01h
  5373  0EC5  00C4               	line	95
  5374                           	
  5375                           l1862:	
  5376  0EC6                     ;main.c: 95:     reflect_byte(output, output_ref, 2);
  5377                           	movf	(CONVERT_Data_1@output_ref)^080h,w
  5378  0EC6  0834               	movwf	(??_CONVERT_Data_1+0)^080h+0
  5379  0EC7  00B5               	movf	(??_CONVERT_Data_1+0)^080h+0,w
  5380  0EC8  0835               	movwf	(reflect_byte@byte_ref)^080h
  5381  0EC9  00A0               	movlw	low(02h)
  5382  0ECA  3002               	movwf	(??_CONVERT_Data_1+1)^080h+0
  5383  0ECB  00B6               	movf	(??_CONVERT_Data_1+1)^080h+0,w
  5384  0ECC  0836               	movwf	(reflect_byte@index)^080h
  5385  0ECD  00A1               	movlw	(low(CONVERT_Data_1@output|((0x0)<<8)))&0ffh
  5386  0ECE  30C3               	fcall	_reflect_byte
  5387  0ECF  318C  24A5  318E   	line	98
  5388                           	
  5389                           l241:	
  5390  0ED2                     	return
  5391  0ED2  0008               	opt stack 0
  5392                           GLOBAL	__end_of_CONVERT_Data_1
  5393                           	__end_of_CONVERT_Data_1:
  5394  0ED3                     	signat	_CONVERT_Data_1,8313
  5395                           	global	_reflect_byte
  5396                           
  5397 ;; *************** function _reflect_byte *****************
  5398 ;; Defined at:
  5399 ;;		line 1 in file "./reflect_byte.h"
  5400 ;; Parameters:    Size  Location     Type
  5401 ;;  byte            1    wreg     PTR unsigned char 
  5402 ;;		 -> main@data(8), ISR@data1(13), CONVERT_Data_11Byte@output(2), CONVERT_Data_5Byte@output(2), 
  5403 ;;		 -> CONVERT_Data_1@output(2), CONVERT_Data_6Byte@output(2), 
  5404 ;;  byte_ref        1    0[BANK1 ] PTR unsigned char 
  5405 ;;		 -> main@crc_code(2), ISR@crc_code_1(2), CONVERT_Data_11Byte@input_ref(11), CONVERT_Data_5Byte@input_ref(5), 
  5406 ;;		 -> CONVERT_Data_1@input_ref(6), CONVERT_Data_6Byte@input_ref(6), 
  5407 ;;  index           1    1[BANK1 ] unsigned char 
  5408 ;; Auto vars:     Size  Location     Type
  5409 ;;  byte            1    7[BANK1 ] PTR unsigned char 
  5410 ;;		 -> main@data(8), ISR@data1(13), CONVERT_Data_11Byte@output(2), CONVERT_Data_5Byte@output(2), 
  5411 ;;		 -> CONVERT_Data_1@output(2), CONVERT_Data_6Byte@output(2), 
  5412 ;;  i               1    8[BANK1 ] unsigned char 
  5413 ;;  j               1    6[BANK1 ] unsigned char 
  5414 ;;  temp            1    5[BANK1 ] unsigned char 
  5415 ;; Return value:  Size  Location     Type
  5416 ;;                  1    wreg      void 
  5417 ;; Registers used:
  5418 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5419 ;; Tracked objects:
  5420 ;;		On entry : 0/0
  5421 ;;		On exit  : 0/0
  5422 ;;		Unchanged: 0/0
  5423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5424 ;;      Params:         0       0       2       0       0       0       0       0
  5425 ;;      Locals:         0       0       4       0       0       0       0       0
  5426 ;;      Temps:          0       0       3       0       0       0       0       0
  5427 ;;      Totals:         0       0       9       0       0       0       0       0
  5428 ;;Total ram usage:        9 bytes
  5429 ;; Hardware stack levels used:    1
  5430 ;; Hardware stack levels required when called:    3
  5431 ;; This function calls:
  5432 ;;		Nothing
  5433 ;; This function is called by:
  5434 ;;		_CONVERT_Data_1
  5435 ;;		_CONVERT_Data_6Byte
  5436 ;; This function uses a non-reentrant model
  5437 ;;
  5438                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  5439                           	file	"./reflect_byte.h"
  5440                           	line	1
  5441                           global __ptext12
  5442                           __ptext12:	;psect for function _reflect_byte
  5443  0CA5                     psect	text12
  5444                           	file	"./reflect_byte.h"
  5445                           	line	1
  5446                           	global	__size_of_reflect_byte
  5447                           	__size_of_reflect_byte	equ	__end_of_reflect_byte-_reflect_byte
  5448  004E                     	
  5449                           _reflect_byte:	
  5450  0CA5                     ;incstack = 0
  5451                           	opt	stack 11
  5452                           ; Regs used in _reflect_byte: [wreg+fsr1l+fsr1h+status,2+status,0]
  5453                           ;reflect_byte@byte stored from wreg
  5454                           	movlb 1	; select bank1
  5455  0CA5  0021               	movwf	(reflect_byte@byte)^080h
  5456  0CA6  00A7               	line	3
  5457                           	
  5458                           l1588:	
  5459  0CA7                     ;./reflect_byte.h: 2:     unsigned char i, j, temp;;./reflect_byte.h: 3:     for (j = 0;
                                  j < index; j++) {
  5460                           	clrf	(reflect_byte@j)^080h
  5461  0CA7  01A6               	goto	l1604
  5462  0CA8  2CEB               	
  5463                           l213:	
  5464  0CA9                     	line	4
  5465                           	
  5466                           l1590:	
  5467  0CA9                     ;./reflect_byte.h: 4:         for (i = 0; i < 8; i++) {
  5468                           	clrf	(reflect_byte@i)^080h
  5469  0CA9  01A8               	
  5470                           l1592:	
  5471  0CAA                     	movlw	low(08h)
  5472  0CAA  3008               	subwf	(reflect_byte@i)^080h,w
  5473  0CAB  0228               	skipc
  5474  0CAC  1C03               	goto	u1391
  5475  0CAD  2CAF               	goto	u1390
  5476  0CAE  2CB0               u1391:
  5477  0CAF                     	goto	l1596
  5478  0CAF  2CB2               u1390:
  5479  0CB0                     	goto	l1602
  5480  0CB0  2CE6               	
  5481                           l1594:	
  5482  0CB1                     	goto	l1602
  5483  0CB1  2CE6               	
  5484                           l214:	
  5485  0CB2                     	line	5
  5486                           	
  5487                           l1596:	
  5488  0CB2                     ;./reflect_byte.h: 5:             temp = byte[j] >> i;
  5489                           	movf	(reflect_byte@j)^080h,w
  5490  0CB2  0826               	addwf	(reflect_byte@byte)^080h,w
  5491  0CB3  0727               	movwf	(??_reflect_byte+0)^080h+0
  5492  0CB4  00A2               	movf	0+(??_reflect_byte+0)^080h+0,w
  5493  0CB5  0822               	movwf	fsr1l
  5494  0CB6  0086               	clrf fsr1h	
  5495  0CB7  0187               	
  5496                           	movf	indf1,w
  5497  0CB8  0801               	movwf	(??_reflect_byte+1)^080h+0
  5498  0CB9  00A3               	incf	(reflect_byte@i)^080h,w
  5499  0CBA  0A28               	goto	u1404
  5500  0CBB  2CBD               u1405:
  5501  0CBC                     	lsrf	(??_reflect_byte+1)^080h+0,f
  5502  0CBC  36A3               u1404:
  5503  0CBD                     	decfsz	wreg,f
  5504  0CBD  0B89               	goto	u1405
  5505  0CBE  2CBC               	movf	0+(??_reflect_byte+1)^080h+0,w
  5506  0CBF  0823               	movwf	(??_reflect_byte+2)^080h+0
  5507  0CC0  00A4               	movf	(??_reflect_byte+2)^080h+0,w
  5508  0CC1  0824               	movwf	(reflect_byte@temp)^080h
  5509  0CC2  00A5               	line	6
  5510                           ;./reflect_byte.h: 6:             byte_ref[index - 1 - j] += (temp & 0x01) << (7 - i);
  5511                           	movf	(reflect_byte@temp)^080h,w
  5512  0CC3  0825               	andlw	01h
  5513  0CC4  3901               	movwf	(??_reflect_byte+0)^080h+0
  5514  0CC5  00A2               	decf	(reflect_byte@i)^080h,w
  5515  0CC6  0328               	xorlw	0ffh
  5516  0CC7  3AFF               	addlw	07h
  5517  0CC8  3E07               	incf	wreg,f
  5518  0CC9  0A89               	goto	u1414
  5519  0CCA  2CCC               u1415:
  5520  0CCB                     	lslf	(??_reflect_byte+0)^080h+0,f
  5521  0CCB  35A2               u1414:
  5522  0CCC                     	decfsz	wreg,f
  5523  0CCC  0B89               	goto	u1415
  5524  0CCD  2CCB               	movf	0+(??_reflect_byte+0)^080h+0,w
  5525  0CCE  0822               	movwf	(??_reflect_byte+1)^080h+0
  5526  0CCF  00A3               	decf	(reflect_byte@j)^080h,w
  5527  0CD0  0326               	xorlw	0ffh
  5528  0CD1  3AFF               	addwf	(reflect_byte@index)^080h,w
  5529  0CD2  0721               	addlw	-1
  5530  0CD3  3EFF               	addwf	(reflect_byte@byte_ref)^080h,w
  5531  0CD4  0720               	movwf	(??_reflect_byte+2)^080h+0
  5532  0CD5  00A4               	movf	0+(??_reflect_byte+2)^080h+0,w
  5533  0CD6  0824               	movwf	fsr1l
  5534  0CD7  0086               	clrf fsr1h	
  5535  0CD8  0187               	
  5536                           	movf	(??_reflect_byte+1)^080h+0,w
  5537  0CD9  0823               	addwf	indf1,f
  5538  0CDA  0781               	line	7
  5539                           	
  5540                           l1598:	
  5541  0CDB                     ;./reflect_byte.h: 7:         }
  5542                           	movlw	low(01h)
  5543  0CDB  3001               	movwf	(??_reflect_byte+0)^080h+0
  5544  0CDC  00A2               	movf	(??_reflect_byte+0)^080h+0,w
  5545  0CDD  0822               	addwf	(reflect_byte@i)^080h,f
  5546  0CDE  07A8               	
  5547                           l1600:	
  5548  0CDF                     	movlw	low(08h)
  5549  0CDF  3008               	subwf	(reflect_byte@i)^080h,w
  5550  0CE0  0228               	skipc
  5551  0CE1  1C03               	goto	u1421
  5552  0CE2  2CE4               	goto	u1420
  5553  0CE3  2CE5               u1421:
  5554  0CE4                     	goto	l1596
  5555  0CE4  2CB2               u1420:
  5556  0CE5                     	goto	l1602
  5557  0CE5  2CE6               	
  5558                           l215:	
  5559  0CE6                     	line	8
  5560                           	
  5561                           l1602:	
  5562  0CE6                     ;./reflect_byte.h: 8:     }
  5563                           	movlw	low(01h)
  5564  0CE6  3001               	movwf	(??_reflect_byte+0)^080h+0
  5565  0CE7  00A2               	movf	(??_reflect_byte+0)^080h+0,w
  5566  0CE8  0822               	addwf	(reflect_byte@j)^080h,f
  5567  0CE9  07A6               	goto	l1604
  5568  0CEA  2CEB               	
  5569                           l212:	
  5570  0CEB                     	
  5571                           l1604:	
  5572  0CEB                     	movf	(reflect_byte@index)^080h,w
  5573  0CEB  0821               	subwf	(reflect_byte@j)^080h,w
  5574  0CEC  0226               	skipc
  5575  0CED  1C03               	goto	u1431
  5576  0CEE  2CF0               	goto	u1430
  5577  0CEF  2CF1               u1431:
  5578  0CF0                     	goto	l1590
  5579  0CF0  2CA9               u1430:
  5580  0CF1                     	goto	l217
  5581  0CF1  2CF2               	
  5582                           l216:	
  5583  0CF2                     	line	10
  5584                           	
  5585                           l217:	
  5586  0CF2                     	return
  5587  0CF2  0008               	opt stack 0
  5588                           GLOBAL	__end_of_reflect_byte
  5589                           	__end_of_reflect_byte:
  5590  0CF3                     	signat	_reflect_byte,12409
  5591                           	global	_crc16
  5592                           
  5593 ;; *************** function _crc16 *****************
  5594 ;; Defined at:
  5595 ;;		line 167 in file "./crcLIBhex.h"
  5596 ;; Parameters:    Size  Location     Type
  5597 ;;  crcData         1    wreg     PTR unsigned char 
  5598 ;;		 -> CONVERT_Data_11Byte@txt(11), CONVERT_Data_5Byte@txt(5), CONVERT_Data_1@txt(6), CONVERT_Data_6Byte@txt(6), 
  5599 ;;  dataLen         2    0[BANK1 ] unsigned int 
  5600 ;; Auto vars:     Size  Location     Type
  5601 ;;  crcData         1   15[BANK1 ] PTR unsigned char 
  5602 ;;		 -> CONVERT_Data_11Byte@txt(11), CONVERT_Data_5Byte@txt(5), CONVERT_Data_1@txt(6), CONVERT_Data_6Byte@txt(6), 
  5603 ;;  crc             4   16[BANK1 ] unsigned long 
  5604 ;;  iByte           2   12[BANK1 ] unsigned int 
  5605 ;;  i               1   14[BANK1 ] unsigned char 
  5606 ;; Return value:  Size  Location     Type
  5607 ;;                  2    0[BANK1 ] unsigned int 
  5608 ;; Registers used:
  5609 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  5610 ;; Tracked objects:
  5611 ;;		On entry : 0/0
  5612 ;;		On exit  : 0/0
  5613 ;;		Unchanged: 0/0
  5614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5615 ;;      Params:         0       0       2       0       0       0       0       0
  5616 ;;      Locals:         0       0       8       0       0       0       0       0
  5617 ;;      Temps:          0       0      10       0       0       0       0       0
  5618 ;;      Totals:         0       0      20       0       0       0       0       0
  5619 ;;Total ram usage:       20 bytes
  5620 ;; Hardware stack levels used:    1
  5621 ;; Hardware stack levels required when called:    3
  5622 ;; This function calls:
  5623 ;;		Nothing
  5624 ;; This function is called by:
  5625 ;;		_CONVERT_Data_1
  5626 ;;		_CONVERT_Data_6Byte
  5627 ;; This function uses a non-reentrant model
  5628 ;;
  5629                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  5630                           	file	"./crcLIBhex.h"
  5631                           	line	167
  5632                           global __ptext13
  5633                           __ptext13:	;psect for function _crc16
  5634  05FF                     psect	text13
  5635                           	file	"./crcLIBhex.h"
  5636                           	line	167
  5637                           	global	__size_of_crc16
  5638                           	__size_of_crc16	equ	__end_of_crc16-_crc16
  5639  00B1                     	
  5640                           _crc16:	
  5641  05FF                     ;incstack = 0
  5642                           	opt	stack 11
  5643                           ; Regs used in _crc16: [wreg-fsr1h+status,2+status,0+pclath]
  5644                           ;crc16@crcData stored from wreg
  5645                           	movlb 1	; select bank1
  5646  05FF  0021               	movwf	(crc16@crcData)^080h
  5647  0600  00AF               	line	171
  5648                           	
  5649                           l1554:	
  5650  0601                     ;./crcLIBhex.h: 167: unsigned int crc16 (char *crcData, unsigned int dataLen);./crcLIBhe
                                 x.h: 168: {;./crcLIBhex.h: 169:       unsigned char i;;./crcLIBhex.h: 170:       unsigne
                                 d int iByte;;./crcLIBhex.h: 171:       unsigned long crc = CRC16_INIT;
  5651                           	movlw	low(_CRC16_INIT|8000h)
  5652  0601  3009               	movwf	fsr0l
  5653  0602  0084               	movlw	high(_CRC16_INIT|8000h)
  5654  0603  3090               	movwf	fsr0h
  5655  0604  0085               	moviw	[0]fsr0
  5656  0605  3F00               	movwf	(??_crc16+0)^080h+0
  5657  0606  00A2               	moviw	[1]fsr0
  5658  0607  3F01               	movwf	(??_crc16+0)^080h+0+1
  5659  0608  00A3               	movf	0+(??_crc16+0)^080h+0,w
  5660  0609  0822               	movwf	(crc16@crc)^080h
  5661  060A  00B0               	movf	1+(??_crc16+0)^080h+0,w
  5662  060B  0823               	movwf	((crc16@crc)^080h)+1
  5663  060C  00B1               	clrf	2+((crc16@crc)^080h)
  5664  060D  01B2               	clrf	3+((crc16@crc)^080h)
  5665  060E  01B3               	line	173
  5666                           	
  5667                           l1556:	
  5668  060F                     ;./crcLIBhex.h: 173:       if (dataLen == 0)
  5669                           	movf	((crc16@dataLen)^080h),w
  5670  060F  0820               iorwf	((crc16@dataLen+1)^080h),w
  5671  0610  0421               	btfss	status,2
  5672  0611  1D03               	goto	u1311
  5673  0612  2E14               	goto	u1310
  5674  0613  2E15               u1311:
  5675  0614                     	goto	l1562
  5676  0614  2E1C               u1310:
  5677  0615                     	line	174
  5678                           	
  5679                           l1558:	
  5680  0615                     ;./crcLIBhex.h: 174:             return (~crc);
  5681                           	comf	(crc16@crc)^080h,w
  5682  0615  0930               	movwf	(?_crc16)^080h
  5683  0616  00A0               	comf	(crc16@crc+1)^080h,w
  5684  0617  0931               	movwf	1+(?_crc16)^080h
  5685  0618  00A1               	goto	l179
  5686  0619  2EAF               	
  5687                           l1560:	
  5688  061A                     	goto	l179
  5689  061A  2EAF               	
  5690                           l178:	
  5691  061B                     	goto	l1562
  5692  061B  2E1C               	line	175
  5693                           ;./crcLIBhex.h: 175:       do
  5694                           	
  5695                           l180:	
  5696  061C                     	line	177
  5697                           	
  5698                           l1562:	
  5699  061C                     ;./crcLIBhex.h: 176:       {;./crcLIBhex.h: 177:             for (i=0, iByte=((unsigned 
                                 int)0xff & *crcData++) <<8;
  5700                           	clrf	(crc16@i)^080h
  5701  061C  01AE               	
  5702                           l1564:	
  5703  061D                     	movf	(crc16@crcData)^080h,w
  5704  061D  082F               	movwf	fsr1l
  5705  061E  0086               	clrf fsr1h	
  5706  061F  0187               	
  5707                           	movf	indf1,w
  5708  0620  0801               	movwf	(??_crc16+0)^080h+0
  5709  0621  00A2               	clrf	(??_crc16+0)^080h+0+1
  5710  0622  01A3               	movf	(??_crc16+0)^080h+0,w
  5711  0623  0822               	movwf	(??_crc16+0)^080h+1
  5712  0624  00A3               	clrf	(??_crc16+0)^080h+0
  5713  0625  01A2               	movf	0+(??_crc16+0)^080h+0,w
  5714  0626  0822               	movwf	(crc16@iByte)^080h
  5715  0627  00AC               	movf	1+(??_crc16+0)^080h+0,w
  5716  0628  0823               	movwf	(crc16@iByte+1)^080h
  5717  0629  00AD               	
  5718                           l1566:	
  5719  062A                     	movlw	low(01h)
  5720  062A  3001               	movwf	(??_crc16+0)^080h+0
  5721  062B  00A2               	movf	(??_crc16+0)^080h+0,w
  5722  062C  0822               	addwf	(crc16@crcData)^080h,f
  5723  062D  07AF               	
  5724                           l1568:	
  5725  062E                     	movlw	low(08h)
  5726  062E  3008               	subwf	(crc16@i)^080h,w
  5727  062F  022E               	skipc
  5728  0630  1C03               	goto	u1321
  5729  0631  2E33               	goto	u1320
  5730  0632  2E34               u1321:
  5731  0633                     	goto	l1572
  5732  0633  2E36               u1320:
  5733  0634                     	goto	l1582
  5734  0634  2E9F               	
  5735                           l1570:	
  5736  0635                     	goto	l1582
  5737  0635  2E9F               	
  5738                           l181:	
  5739  0636                     	line	181
  5740                           	
  5741                           l1572:	
  5742  0636                     ;./crcLIBhex.h: 180:             {;./crcLIBhex.h: 181:                   if ((crc & 0x80
                                 00) ^ (iByte & 0x8000))
  5743                           	movlw	0
  5744  0636  3000               	andwf	(crc16@iByte)^080h,w
  5745  0637  052C               	movwf	(??_crc16+0)^080h+0
  5746  0638  00A2               	movlw	080h
  5747  0639  3080               	andwf	(crc16@iByte+1)^080h,w
  5748  063A  052D               	movwf	1+(??_crc16+0)^080h+0
  5749  063B  00A3               	movf	0+(??_crc16+0)^080h+0,w
  5750  063C  0822               	movwf	((??_crc16+2)^080h+0)
  5751  063D  00A4               	movf	1+(??_crc16+0)^080h+0,w
  5752  063E  0823               	movwf	((??_crc16+2)^080h+0+1)
  5753  063F  00A5               	clrf	((??_crc16+2)^080h+0+2)
  5754  0640  01A6               	clrf	((??_crc16+2)^080h+0+3)
  5755  0641  01A7               	movlw	0
  5756  0642  3000               	andwf	(crc16@crc)^080h,w
  5757  0643  0530               	movwf	(??_crc16+6)^080h+0
  5758  0644  00A8               	movlw	080h
  5759  0645  3080               	andwf	(crc16@crc+1)^080h,w
  5760  0646  0531               	movwf	((??_crc16+6)^080h+0+1)
  5761  0647  00A9               	movlw	0
  5762  0648  3000               	andwf	(crc16@crc+2)^080h,w
  5763  0649  0532               	movwf	((??_crc16+6)^080h+0+2)
  5764  064A  00AA               	movlw	0
  5765  064B  3000               	andwf	(crc16@crc+3)^080h,w
  5766  064C  0533               	movwf	((??_crc16+6)^080h+0+3)
  5767  064D  00AB               	movf	0+(??_crc16+6)^080h+0,w
  5768  064E  0828               	xorwf	(??_crc16+2)^080h+0,f
  5769  064F  06A4               	movf	1+(??_crc16+6)^080h+0,w
  5770  0650  0829               	xorwf	(??_crc16+2)^080h+1,f
  5771  0651  06A5               	movf	2+(??_crc16+6)^080h+0,w
  5772  0652  082A               	xorwf	(??_crc16+2)^080h+2,f
  5773  0653  06A6               	movf	3+(??_crc16+6)^080h+0,w
  5774  0654  082B               	xorwf	(??_crc16+2)^080h+3,f
  5775  0655  06A7               	movf	3+(??_crc16+2)^080h+0,w
  5776  0656  0827               	iorwf	2+(??_crc16+2)^080h+0,w
  5777  0657  0426               	iorwf	1+(??_crc16+2)^080h+0,w
  5778  0658  0425               	iorwf	0+(??_crc16+2)^080h+0,w
  5779  0659  0424               	skipnz
  5780  065A  1903               	goto	u1331
  5781  065B  2E5D               	goto	u1330
  5782  065C  2E5E               u1331:
  5783  065D                     	goto	l1576
  5784  065D  2E88               u1330:
  5785  065E                     	line	182
  5786                           	
  5787                           l1574:	
  5788  065E                     ;./crcLIBhex.h: 182:                         crc = (crc << 1) ^ CRC16_POLYNOMIAL;
  5789                           	movlw	low(_CRC16_POLYNOMIAL|8000h)
  5790  065E  300B               	movwf	fsr0l
  5791  065F  0084               	movlw	high(_CRC16_POLYNOMIAL|8000h)
  5792  0660  3090               	movwf	fsr0h
  5793  0661  0085               	moviw	[0]fsr0
  5794  0662  3F00               	movwf	((??_crc16+0)^080h+0)
  5795  0663  00A2               	moviw	[1]fsr0
  5796  0664  3F01               	movwf	((??_crc16+0)^080h+0+1)
  5797  0665  00A3               	clrf	((??_crc16+0)^080h+0+2)
  5798  0666  01A4               	clrf	((??_crc16+0)^080h+0+3)
  5799  0667  01A5               	movf	(crc16@crc)^080h,w
  5800  0668  0830               	movwf	(??_crc16+4)^080h+0
  5801  0669  00A6               	movf	(crc16@crc+1)^080h,w
  5802  066A  0831               	movwf	((??_crc16+4)^080h+0+1)
  5803  066B  00A7               	movf	(crc16@crc+2)^080h,w
  5804  066C  0832               	movwf	((??_crc16+4)^080h+0+2)
  5805  066D  00A8               	movf	(crc16@crc+3)^080h,w
  5806  066E  0833               	movwf	((??_crc16+4)^080h+0+3)
  5807  066F  00A9               	movlw	01h
  5808  0670  3001               u1345:
  5809  0671                     	lslf	(??_crc16+4)^080h+0,f
  5810  0671  35A6               	rlf	(??_crc16+4)^080h+1,f
  5811  0672  0DA7               	rlf	(??_crc16+4)^080h+2,f
  5812  0673  0DA8               	rlf	(??_crc16+4)^080h+3,f
  5813  0674  0DA9               u1340:
  5814  0675                     	decfsz	wreg,f
  5815  0675  0B89               	goto	u1345
  5816  0676  2E71               	movf	0+(??_crc16+4)^080h+0,w
  5817  0677  0826               	xorwf	(??_crc16+0)^080h+0,f
  5818  0678  06A2               	movf	1+(??_crc16+4)^080h+0,w
  5819  0679  0827               	xorwf	(??_crc16+0)^080h+1,f
  5820  067A  06A3               	movf	2+(??_crc16+4)^080h+0,w
  5821  067B  0828               	xorwf	(??_crc16+0)^080h+2,f
  5822  067C  06A4               	movf	3+(??_crc16+4)^080h+0,w
  5823  067D  0829               	xorwf	(??_crc16+0)^080h+3,f
  5824  067E  06A5               	movf	3+(??_crc16+0)^080h+0,w
  5825  067F  0825               	movwf	(crc16@crc+3)^080h
  5826  0680  00B3               	movf	2+(??_crc16+0)^080h+0,w
  5827  0681  0824               	movwf	(crc16@crc+2)^080h
  5828  0682  00B2               	movf	1+(??_crc16+0)^080h+0,w
  5829  0683  0823               	movwf	(crc16@crc+1)^080h
  5830  0684  00B1               	movf	0+(??_crc16+0)^080h+0,w
  5831  0685  0822               	movwf	(crc16@crc)^080h
  5832  0686  00B0               
  5833                           	goto	l184
  5834  0687  2E8F               	line	183
  5835                           ;./crcLIBhex.h: 183:                   else crc <<= 1;
  5836                           	
  5837                           l183:	
  5838  0688                     	
  5839                           l1576:	
  5840  0688                     	movlw	01h
  5841  0688  3001               u1355:
  5842  0689                     	lslf	(crc16@crc)^080h,f
  5843  0689  35B0               	rlf	(crc16@crc+1)^080h,f
  5844  068A  0DB1               	rlf	(crc16@crc+2)^080h,f
  5845  068B  0DB2               	rlf	(crc16@crc+3)^080h,f
  5846  068C  0DB3               	decfsz	wreg,f
  5847  068D  0B89               	goto	u1355
  5848  068E  2E89               	
  5849                           l184:	
  5850  068F                     	line	184
  5851                           ;./crcLIBhex.h: 184:             }
  5852                           	movlw	low(01h)
  5853  068F  3001               	movwf	(??_crc16+0)^080h+0
  5854  0690  00A2               	movf	(??_crc16+0)^080h+0,w
  5855  0691  0822               	addwf	(crc16@i)^080h,f
  5856  0692  07AE               	
  5857                           l1578:	
  5858  0693                     	movlw	01h
  5859  0693  3001               	
  5860                           u1365:
  5861  0694                     	lslf	(crc16@iByte)^080h,f
  5862  0694  35AC               	rlf	(crc16@iByte+1)^080h,f
  5863  0695  0DAD               	decfsz	wreg,f
  5864  0696  0B89               	goto	u1365
  5865  0697  2E94               	
  5866                           l1580:	
  5867  0698                     	movlw	low(08h)
  5868  0698  3008               	subwf	(crc16@i)^080h,w
  5869  0699  022E               	skipc
  5870  069A  1C03               	goto	u1371
  5871  069B  2E9D               	goto	u1370
  5872  069C  2E9E               u1371:
  5873  069D                     	goto	l1572
  5874  069D  2E36               u1370:
  5875  069E                     	goto	l1582
  5876  069E  2E9F               	
  5877                           l182:	
  5878  069F                     	line	185
  5879                           	
  5880                           l1582:	
  5881  069F                     ;./crcLIBhex.h: 185:       } while (--dataLen);
  5882                           	movlw	01h
  5883  069F  3001               	subwf	(crc16@dataLen)^080h,f
  5884  06A0  02A0               	movlw	0
  5885  06A1  3000               	subwfb	(crc16@dataLen+1)^080h,f
  5886  06A2  3BA1               	movf	(((crc16@dataLen)^080h)),w
  5887  06A3  0820               iorwf	(((crc16@dataLen+1)^080h)),w
  5888  06A4  0421               	btfss	status,2
  5889  06A5  1D03               	goto	u1381
  5890  06A6  2EA8               	goto	u1380
  5891  06A7  2EA9               u1381:
  5892  06A8                     	goto	l1562
  5893  06A8  2E1C               u1380:
  5894  06A9                     	goto	l1584
  5895  06A9  2EAA               	
  5896                           l185:	
  5897  06AA                     	line	187
  5898                           	
  5899                           l1584:	
  5900  06AA                     ;./crcLIBhex.h: 187:       return (crc & 0xFFFF );
  5901                           	movf	(crc16@crc+1)^080h,w
  5902  06AA  0831               	movwf	(?_crc16+1)^080h
  5903  06AB  00A1               	movf	(crc16@crc)^080h,w
  5904  06AC  0830               	movwf	(?_crc16)^080h
  5905  06AD  00A0               	goto	l179
  5906  06AE  2EAF               	
  5907                           l1586:	
  5908  06AF                     	line	188
  5909                           	
  5910                           l179:	
  5911  06AF                     	return
  5912  06AF  0008               	opt stack 0
  5913                           GLOBAL	__end_of_crc16
  5914                           	__end_of_crc16:
  5915  06B0                     	signat	_crc16,8314
  5916                           	global	_ISR
  5917                           
  5918 ;; *************** function _ISR *****************
  5919 ;; Defined at:
  5920 ;;		line 166 in file "main.c"
  5921 ;; Parameters:    Size  Location     Type
  5922 ;;		None
  5923 ;; Auto vars:     Size  Location     Type
  5924 ;;  i               2   57[BANK0 ] int 
  5925 ;;  data1          13   44[BANK0 ] unsigned char [13]
  5926 ;;  crc_code_1      2   61[BANK0 ] volatile unsigned char [
  5927 ;;  flag            1   60[BANK0 ] volatile unsigned char 
  5928 ;;  len             1   59[BANK0 ] volatile unsigned char 
  5929 ;; Return value:  Size  Location     Type
  5930 ;;                  1    wreg      void 
  5931 ;; Registers used:
  5932 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5933 ;; Tracked objects:
  5934 ;;		On entry : 0/0
  5935 ;;		On exit  : 0/0
  5936 ;;		Unchanged: 0/0
  5937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5938 ;;      Params:         0       0       0       0       0       0       0       0
  5939 ;;      Locals:         0      19       0       0       0       0       0       0
  5940 ;;      Temps:          0       5       0       0       0       0       0       0
  5941 ;;      Totals:         0      24       0       0       0       0       0       0
  5942 ;;Total ram usage:       24 bytes
  5943 ;; Hardware stack levels used:    1
  5944 ;; Hardware stack levels required when called:    2
  5945 ;; This function calls:
  5946 ;;		_CONVERT_Data_11Byte
  5947 ;;		_CONVERT_Data_5Byte
  5948 ;;		_UART2_Write_Text
  5949 ;;		_UART2_Write_Text_Phan_Tu_Thu_13
  5950 ;;		_UART2_Write_Text_Phan_Tu_Thu_7
  5951 ;;		_UART2_Write_Text_Phan_Tu_Thu_8
  5952 ;;		_UART_Data_Ready
  5953 ;;		_UART_Read
  5954 ;;		i1_CONVERT_Data_1
  5955 ;; This function is called by:
  5956 ;;		Interrupt level 1
  5957 ;; This function uses a non-reentrant model
  5958 ;;
  5959                           psect	intentry,class=CODE,delta=2
  5960                           global __pintentry
  5961                           __pintentry:
  5962  0004                     psect	intentry
  5963                           	file	"main.c"
  5964                           	line	166
  5965                           	global	__size_of_ISR
  5966                           	__size_of_ISR	equ	__end_of_ISR-_ISR
  5967  012A                     	
  5968                           _ISR:	
  5969  0004                     ;incstack = 0
  5970                           	opt	stack 11
  5971                           	bsf int$flags,0 ;set compiler interrupt flag (level 1)
  5972  0004  147E               ; Regs used in _ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5973                           psect	intentry
  5974                           	pagesel	$
  5975  0005  3180               	line	167
  5976                           	
  5977                           i1l2010:	
  5978  0006                     ;main.c: 167:     unsigned char data1[13] = "";
  5979                           	movlw	low(ISR@F4698)
  5980  0006  3020               	movwf	fsr1l
  5981  0007  0086               	movlw	high(ISR@F4698)
  5982  0008  3001               	movwf	fsr1h
  5983  0009  0087               	movlw	low(ISR@data1)
  5984  000A  304C               	movwf	fsr0l
  5985  000B  0084               	movlw	high(ISR@data1)
  5986  000C  3000               	movwf	fsr0h
  5987  000D  0085               	movlw	13
  5988  000E  300D               	movlb 0	; select bank0
  5989  000F  0020               	movwf	(??_ISR+0)+0
  5990  0010  00C7               u216_20:
  5991  0011                     	moviw	fsr1++
  5992  0011  0016               	movwi	fsr0++
  5993  0012  001A               	decfsz	(??_ISR+0)+0,f
  5994  0013  0BC7               	goto	u216_20
  5995  0014  2811               	line	168
  5996                           	
  5997                           i1l2012:	
  5998  0015                     ;main.c: 168:     volatile unsigned char crc_code_1[2] = "";
  5999                           	movf	(ISR@F4700+1),w	;volatile
  6000  0015  086A               	movwf	(ISR@crc_code_1+1)	;volatile
  6001  0016  00DE               	movf	(ISR@F4700),w	;volatile
  6002  0017  0869               	movwf	(ISR@crc_code_1)	;volatile
  6003  0018  00DD               	line	169
  6004                           	
  6005                           i1l2014:	
  6006  0019                     ;main.c: 169:     volatile unsigned char flag = 0;
  6007                           	clrf	(ISR@flag)	;volatile
  6008  0019  01DC               	line	170
  6009                           	
  6010                           i1l2016:	
  6011  001A                     ;main.c: 170:     volatile unsigned char len = 0;
  6012                           	clrf	(ISR@len)	;volatile
  6013  001A  01DB               	line	171
  6014                           	
  6015                           i1l2018:	
  6016  001B                     ;main.c: 171:     if (PIR1bits.RCIF) {
  6017                           	btfss	(17),5	;volatile
  6018  001B  1E91               	goto	u217_21
  6019  001C  281E               	goto	u217_20
  6020  001D  281F               u217_21:
  6021  001E                     	goto	i1l293
  6022  001E  292C               u217_20:
  6023  001F                     	line	172
  6024                           	
  6025                           i1l2020:	
  6026  001F                     ;main.c: 172:         if (UART_Data_Ready()) {
  6027                           	fcall	_UART_Data_Ready
  6028  001F  318B  230E  3180   	xorlw	low(0)&0ffh
  6029  0022  3A00               	skipnz
  6030  0023  1903               	goto	u218_21
  6031  0024  2826               	goto	u218_20
  6032  0025  2827               u218_21:
  6033  0026                     	goto	i1l293
  6034  0026  292C               u218_20:
  6035  0027                     	line	174
  6036                           	
  6037                           i1l2022:	
  6038  0027                     ;main.c: 174:             for (int i = 0; i < 13 - len; i++) {
  6039                           	movlb 0	; select bank0
  6040  0027  0020               	clrf	(ISR@i)
  6041  0028  01D9               	clrf	(ISR@i+1)
  6042  0029  01DA               	goto	i1l2050
  6043  002A  287F               	
  6044                           i1l278:	
  6045  002B                     	line	175
  6046                           	
  6047                           i1l2024:	
  6048  002B                     ;main.c: 175:                 data1[i] = UART_Read();
  6049                           	fcall	_UART_Read
  6050  002B  318B  2333  3180   	movlb 0	; select bank0
  6051  002E  0020               	movwf	(??_ISR+0)+0
  6052  002F  00C7               	movf	(ISR@i),w
  6053  0030  0859               	addlw	low(ISR@data1|((0x0)<<8))&0ffh
  6054  0031  3E4C               	movwf	fsr1l
  6055  0032  0086               	clrf fsr1h	
  6056  0033  0187               	
  6057                           	movf	(??_ISR+0)+0,w
  6058  0034  0847               	movwf	indf1
  6059  0035  0081               	line	176
  6060                           	
  6061                           i1l2026:	
  6062  0036                     ;main.c: 176:                 if (data1[2] == 0x08 && data1[1] == 0x03 && flag == 0) {
  6063                           		movlw	8
  6064  0036  3008               	xorwf	(0+(ISR@data1)+02h),w
  6065  0037  064E               	btfss	status,2
  6066  0038  1D03               	goto	u219_21
  6067  0039  283B               	goto	u219_20
  6068  003A  283C               u219_21:
  6069  003B                     	goto	i1l2036
  6070  003B  284D               u219_20:
  6071  003C                     	
  6072                           i1l2028:	
  6073  003C                     		movlw	3
  6074  003C  3003               	xorwf	(0+(ISR@data1)+01h),w
  6075  003D  064D               	btfss	status,2
  6076  003E  1D03               	goto	u220_21
  6077  003F  2841               	goto	u220_20
  6078  0040  2842               u220_21:
  6079  0041                     	goto	i1l2036
  6080  0041  284D               u220_20:
  6081  0042                     	
  6082                           i1l2030:	
  6083  0042                     	movf	((ISR@flag)),w	;volatile
  6084  0042  085C               	btfss	status,2
  6085  0043  1D03               	goto	u221_21
  6086  0044  2846               	goto	u221_20
  6087  0045  2847               u221_21:
  6088  0046                     	goto	i1l2036
  6089  0046  284D               u221_20:
  6090  0047                     	line	177
  6091                           	
  6092                           i1l2032:	
  6093  0047                     ;main.c: 177:                     len = 0;
  6094                           	clrf	(ISR@len)	;volatile
  6095  0047  01DB               	line	178
  6096                           	
  6097                           i1l2034:	
  6098  0048                     ;main.c: 178:                     flag = 1;
  6099                           	movlw	low(01h)
  6100  0048  3001               	movwf	(??_ISR+0)+0
  6101  0049  00C7               	movf	(??_ISR+0)+0,w
  6102  004A  0847               	movwf	(ISR@flag)	;volatile
  6103  004B  00DC               	goto	i1l2036
  6104  004C  284D               	line	179
  6105                           ;main.c: 179:                 }
  6106                           	
  6107                           i1l279:	
  6108  004D                     	line	180
  6109                           	
  6110                           i1l2036:	
  6111  004D                     ;main.c: 180:                 if (data1[2] == 0x02 && data1[1] == 0x03 && flag == 0) {
  6112                           		movlw	2
  6113  004D  3002               	xorwf	(0+(ISR@data1)+02h),w
  6114  004E  064E               	btfss	status,2
  6115  004F  1D03               	goto	u222_21
  6116  0050  2852               	goto	u222_20
  6117  0051  2853               u222_21:
  6118  0052                     	goto	i1l2044
  6119  0052  2867               u222_20:
  6120  0053                     	
  6121                           i1l2038:	
  6122  0053                     		movlw	3
  6123  0053  3003               	xorwf	(0+(ISR@data1)+01h),w
  6124  0054  064D               	btfss	status,2
  6125  0055  1D03               	goto	u223_21
  6126  0056  2858               	goto	u223_20
  6127  0057  2859               u223_21:
  6128  0058                     	goto	i1l2044
  6129  0058  2867               u223_20:
  6130  0059                     	
  6131                           i1l2040:	
  6132  0059                     	movf	((ISR@flag)),w	;volatile
  6133  0059  085C               	btfss	status,2
  6134  005A  1D03               	goto	u224_21
  6135  005B  285D               	goto	u224_20
  6136  005C  285E               u224_21:
  6137  005D                     	goto	i1l2044
  6138  005D  2867               u224_20:
  6139  005E                     	line	181
  6140                           	
  6141                           i1l2042:	
  6142  005E                     ;main.c: 181:                     len = 6;
  6143                           	movlw	low(06h)
  6144  005E  3006               	movwf	(??_ISR+0)+0
  6145  005F  00C7               	movf	(??_ISR+0)+0,w
  6146  0060  0847               	movwf	(ISR@len)	;volatile
  6147  0061  00DB               	line	182
  6148                           ;main.c: 182:                     flag = 2;
  6149                           	movlw	low(02h)
  6150  0062  3002               	movwf	(??_ISR+0)+0
  6151  0063  00C7               	movf	(??_ISR+0)+0,w
  6152  0064  0847               	movwf	(ISR@flag)	;volatile
  6153  0065  00DC               	goto	i1l2044
  6154  0066  2867               	line	183
  6155                           ;main.c: 183:                 }
  6156                           	
  6157                           i1l280:	
  6158  0067                     	line	184
  6159                           	
  6160                           i1l2044:	
  6161  0067                     ;main.c: 184:                 if (data1[1] == 0x06 && flag == 0) {
  6162                           		movlw	6
  6163  0067  3006               	xorwf	(0+(ISR@data1)+01h),w
  6164  0068  064D               	btfss	status,2
  6165  0069  1D03               	goto	u225_21
  6166  006A  286C               	goto	u225_20
  6167  006B  286D               u225_21:
  6168  006C                     	goto	i1l281
  6169  006C  287A               u225_20:
  6170  006D                     	
  6171                           i1l2046:	
  6172  006D                     	movf	((ISR@flag)),w	;volatile
  6173  006D  085C               	btfss	status,2
  6174  006E  1D03               	goto	u226_21
  6175  006F  2871               	goto	u226_20
  6176  0070  2872               u226_21:
  6177  0071                     	goto	i1l281
  6178  0071  287A               u226_20:
  6179  0072                     	line	185
  6180                           	
  6181                           i1l2048:	
  6182  0072                     ;main.c: 185:                     len = 5;
  6183                           	movlw	low(05h)
  6184  0072  3005               	movwf	(??_ISR+0)+0
  6185  0073  00C7               	movf	(??_ISR+0)+0,w
  6186  0074  0847               	movwf	(ISR@len)	;volatile
  6187  0075  00DB               	line	186
  6188                           ;main.c: 186:                     flag = 3;
  6189                           	movlw	low(03h)
  6190  0076  3003               	movwf	(??_ISR+0)+0
  6191  0077  00C7               	movf	(??_ISR+0)+0,w
  6192  0078  0847               	movwf	(ISR@flag)	;volatile
  6193  0079  00DC               	line	188
  6194                           ;main.c: 188:                 }
  6195                           	
  6196                           i1l281:	
  6197  007A                     	line	190
  6198                           ;main.c: 190:             }
  6199                           	movlw	01h
  6200  007A  3001               	addwf	(ISR@i),f
  6201  007B  07D9               	movlw	0
  6202  007C  3000               	addwfc	(ISR@i+1),f
  6203  007D  3DDA               	goto	i1l2050
  6204  007E  287F               	
  6205                           i1l277:	
  6206  007F                     	
  6207                           i1l2050:	
  6208  007F                     	movf	(ISR@len),w	;volatile
  6209  007F  085B               	movwf	(??_ISR+0)+0
  6210  0080  00C7               	clrf	(??_ISR+0)+0+1
  6211  0081  01C8               	comf	(??_ISR+0)+0,f
  6212  0082  09C7               	comf	(??_ISR+0)+1,f
  6213  0083  09C8               	incf	(??_ISR+0)+0,f
  6214  0084  0AC7               	skipnz
  6215  0085  1903               	incf	(??_ISR+0)+1,f
  6216  0086  0AC8               	movf	0+(??_ISR+0)+0,w
  6217  0087  0847               	addlw	0Dh
  6218  0088  3E0D               	movwf	(??_ISR+2)+0
  6219  0089  00C9               	movlw	0
  6220  008A  3000               	addwfc	1+(??_ISR+0)+0,w
  6221  008B  3D48               	movwf	1+(??_ISR+2)+0
  6222  008C  00CA               	movf	(ISR@i+1),w
  6223  008D  085A               	xorlw	80h
  6224  008E  3A80               	movwf	(??_ISR+4)+0
  6225  008F  00CB               	movf	1+(??_ISR+2)+0,w
  6226  0090  084A               	xorlw	80h
  6227  0091  3A80               	subwf	(??_ISR+4)+0,w
  6228  0092  024B               	skipz
  6229  0093  1D03               	goto	u227_25
  6230  0094  2897               	movf	0+(??_ISR+2)+0,w
  6231  0095  0849               	subwf	(ISR@i),w
  6232  0096  0259               u227_25:
  6233  0097                     
  6234                           	skipc
  6235  0097  1C03               	goto	u227_21
  6236  0098  289A               	goto	u227_20
  6237  0099  289B               u227_21:
  6238  009A                     	goto	i1l2024
  6239  009A  282B               u227_20:
  6240  009B                     	goto	i1l2052
  6241  009B  289C               	
  6242                           i1l282:	
  6243  009C                     	line	194
  6244                           	
  6245                           i1l2052:	
  6246  009C                     ;main.c: 194:             if (data1[1] == 0x03) {
  6247                           		movlw	3
  6248  009C  3003               	movlb 0	; select bank0
  6249  009D  0020               	xorwf	(0+(ISR@data1)+01h),w
  6250  009E  064D               	btfss	status,2
  6251  009F  1D03               	goto	u228_21
  6252  00A0  28A2               	goto	u228_20
  6253  00A1  28A3               u228_21:
  6254  00A2                     	goto	i1l2084
  6255  00A2  2900               u228_20:
  6256  00A3                     	goto	i1l2082
  6257  00A3  28EE               	line	196
  6258                           	
  6259                           i1l2054:	
  6260  00A4                     ;main.c: 196:                 switch (data1[2]) {
  6261                           	goto	i1l2082
  6262  00A4  28EE               	line	197
  6263                           ;main.c: 197:                     case 0x08:
  6264                           	
  6265                           i1l285:	
  6266  00A5                     	line	199
  6267                           	
  6268                           i1l2056:	
  6269  00A5                     ;main.c: 199:                         CONVERT_Data_11Byte(data1, crc_code_1);
  6270                           	movlw	(low(ISR@crc_code_1|((0x0)<<8)))&0ffh
  6271  00A5  305D               	movwf	(??_ISR+0)+0
  6272  00A6  00C7               	movf	(??_ISR+0)+0,w
  6273  00A7  0847               	movwf	(CONVERT_Data_11Byte@output_ref)
  6274  00A8  00FC               	movlw	(low(ISR@data1|((0x0)<<8)))&0ffh
  6275  00A9  304C               	fcall	_CONVERT_Data_11Byte
  6276  00AA  318D  2565  3180   	line	201
  6277                           	
  6278                           i1l2058:	
  6279  00AD                     ;main.c: 201:                         data1[13] = '\0';
  6280                           	movlb 0	; select bank0
  6281  00AD  0020               	clrf	0+(ISR@data1)+0Dh
  6282  00AE  01D9               	line	204
  6283                           	
  6284                           i1l2060:	
  6285  00AF                     ;main.c: 204:                         if ((data1[11] == crc_code_1[0]) && (data1[12] == 
                                 crc_code_1[1])) {
  6286                           	movf	0+(ISR@data1)+0Bh,w
  6287  00AF  0857               	xorwf	(ISR@crc_code_1),w	;volatile
  6288  00B0  065D               	skipz
  6289  00B1  1D03               	goto	u229_21
  6290  00B2  28B4               	goto	u229_20
  6291  00B3  28B5               u229_21:
  6292  00B4                     	goto	i1l2084
  6293  00B4  2900               u229_20:
  6294  00B5                     	
  6295                           i1l2062:	
  6296  00B5                     	movf	0+(ISR@data1)+0Ch,w
  6297  00B5  0858               	xorwf	0+(ISR@crc_code_1)+01h,w	;volatile
  6298  00B6  065E               	skipz
  6299  00B7  1D03               	goto	u230_21
  6300  00B8  28BA               	goto	u230_20
  6301  00B9  28BB               u230_21:
  6302  00BA                     	goto	i1l2084
  6303  00BA  2900               u230_20:
  6304  00BB                     	line	206
  6305                           	
  6306                           i1l2064:	
  6307  00BB                     ;main.c: 206:                             UART2_Write_Text_Phan_Tu_Thu_13(data1);
  6308                           	movlw	(low(ISR@data1|((0x0)<<8)))&0ffh
  6309  00BB  304C               	fcall	_UART2_Write_Text_Phan_Tu_Thu_13
  6310  00BC  318B  23CB  3180   	line	207
  6311                           	
  6312                           i1l2066:	
  6313  00BF                     ;main.c: 207:                             UART2_Write_Text("OK");
  6314                           	movlw	low(((STR_1)|8000h))
  6315  00BF  3002               	movwf	(UART2_Write_Text@text)
  6316  00C0  00F1               	movlw	high(((STR_1)|8000h))
  6317  00C1  3090               	movwf	((UART2_Write_Text@text))+1
  6318  00C2  00F2               	fcall	_UART2_Write_Text
  6319  00C3  318B  235D  3180   	goto	i1l2084
  6320  00C6  2900               	line	209
  6321                           ;main.c: 209:                         }
  6322                           	
  6323                           i1l286:	
  6324  00C7                     	line	210
  6325                           ;main.c: 210:                         break;
  6326                           	goto	i1l2084
  6327  00C7  2900               	line	211
  6328                           ;main.c: 211:                     case 0x02:
  6329                           	
  6330                           i1l288:	
  6331  00C8                     	line	213
  6332                           	
  6333                           i1l2068:	
  6334  00C8                     ;main.c: 213:                         CONVERT_Data_5Byte(data1, crc_code_1);
  6335                           	movlw	(low(ISR@crc_code_1|((0x0)<<8)))&0ffh
  6336  00C8  305D               	movlb 0	; select bank0
  6337  00C9  0020               	movwf	(??_ISR+0)+0
  6338  00CA  00C7               	movf	(??_ISR+0)+0,w
  6339  00CB  0847               	movwf	(CONVERT_Data_5Byte@output_ref)
  6340  00CC  00FC               	movlw	(low(ISR@data1|((0x0)<<8)))&0ffh
  6341  00CD  304C               	fcall	_CONVERT_Data_5Byte
  6342  00CE  318D  25DF  3180   	line	214
  6343                           	
  6344                           i1l2070:	
  6345  00D1                     ;main.c: 214:                         data1[7] = '\0';
  6346                           	movlb 0	; select bank0
  6347  00D1  0020               	clrf	0+(ISR@data1)+07h
  6348  00D2  01D3               	line	215
  6349                           	
  6350                           i1l2072:	
  6351  00D3                     ;main.c: 215:                         if (data1[5] == crc_code_1[0] && data1[6] == crc_c
                                 ode_1[1]) {
  6352                           	movf	0+(ISR@data1)+05h,w
  6353  00D3  0851               	xorwf	(ISR@crc_code_1),w	;volatile
  6354  00D4  065D               	skipz
  6355  00D5  1D03               	goto	u231_21
  6356  00D6  28D8               	goto	u231_20
  6357  00D7  28D9               u231_21:
  6358  00D8                     	goto	i1l2084
  6359  00D8  2900               u231_20:
  6360  00D9                     	
  6361                           i1l2074:	
  6362  00D9                     	movf	0+(ISR@data1)+06h,w
  6363  00D9  0852               	xorwf	0+(ISR@crc_code_1)+01h,w	;volatile
  6364  00DA  065E               	skipz
  6365  00DB  1D03               	goto	u232_21
  6366  00DC  28DE               	goto	u232_20
  6367  00DD  28DF               u232_21:
  6368  00DE                     	goto	i1l2084
  6369  00DE  2900               u232_20:
  6370  00DF                     	line	217
  6371                           	
  6372                           i1l2076:	
  6373  00DF                     ;main.c: 217:                             UART2_Write_Text_Phan_Tu_Thu_7(data1);
  6374                           	movlw	(low(ISR@data1|((0x0)<<8)))&0ffh
  6375  00DF  304C               	fcall	_UART2_Write_Text_Phan_Tu_Thu_7
  6376  00E0  318B  23FA  3180   	line	218
  6377                           	
  6378                           i1l2078:	
  6379  00E3                     ;main.c: 218:                             UART2_Write_Text("OK");
  6380                           	movlw	low(((STR_2)|8000h))
  6381  00E3  3002               	movwf	(UART2_Write_Text@text)
  6382  00E4  00F1               	movlw	high(((STR_2)|8000h))
  6383  00E5  3090               	movwf	((UART2_Write_Text@text))+1
  6384  00E6  00F2               	fcall	_UART2_Write_Text
  6385  00E7  318B  235D  3180   	goto	i1l2084
  6386  00EA  2900               	line	220
  6387                           ;main.c: 220:                         }
  6388                           	
  6389                           i1l289:	
  6390  00EB                     	line	221
  6391                           ;main.c: 221:                         break;
  6392                           	goto	i1l2084
  6393  00EB  2900               	line	224
  6394                           ;main.c: 224:                     default:
  6395                           	
  6396                           i1l290:	
  6397  00EC                     	line	225
  6398                           ;main.c: 225:                         break;
  6399                           	goto	i1l2084
  6400  00EC  2900               	line	227
  6401                           	
  6402                           i1l2080:	
  6403  00ED                     ;main.c: 227:                 }
  6404                           	goto	i1l2084
  6405  00ED  2900               	
  6406                           i1l284:	
  6407  00EE                     	
  6408                           i1l2082:	
  6409  00EE                     	movlb 0	; select bank0
  6410  00EE  0020               	movf	0+(ISR@data1)+02h,w
  6411  00EF  084E               	movwf	(??_ISR+0)+0
  6412  00F0  00C7               	clrf	(??_ISR+0)+0+1
  6413  00F1  01C8               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  6414                           ; Switch size 1, requested type "space"
  6415                           ; Number of cases is 1, Range of values is 0 to 0
  6416                           ; switch strategies available:
  6417                           ; Name         Instructions Cycles
  6418                           ; simple_byte            4     3 (average)
  6419                           ; direct_byte            8     6 (fixed)
  6420                           ; jumptable            260     6 (fixed)
  6421                           ;	Chosen strategy is simple_byte
  6422                           
  6423                           	movf 1+(??_ISR+0)+0,w
  6424  00F2  0848               	opt asmopt_push
  6425                           	opt asmopt_off
  6426                           	xorlw	0^0	; case 0
  6427  00F3  3A00               	skipnz
  6428  00F4  1903               	goto	i1l2152
  6429  00F5  28F7               	goto	i1l2084
  6430  00F6  2900               	opt asmopt_pop
  6431                           	
  6432                           i1l2152:	
  6433  00F7                     ; Switch size 1, requested type "space"
  6434                           ; Number of cases is 2, Range of values is 2 to 8
  6435                           ; switch strategies available:
  6436                           ; Name         Instructions Cycles
  6437                           ; simple_byte            7     4 (average)
  6438                           ; direct_byte           23     9 (fixed)
  6439                           ; jumptable            263     9 (fixed)
  6440                           ;	Chosen strategy is simple_byte
  6441                           
  6442                           	movf 0+(??_ISR+0)+0,w
  6443  00F7  0847               	opt asmopt_push
  6444                           	opt asmopt_off
  6445                           	xorlw	2^0	; case 2
  6446  00F8  3A02               	skipnz
  6447  00F9  1903               	goto	i1l2068
  6448  00FA  28C8               	xorlw	8^2	; case 8
  6449  00FB  3A0A               	skipnz
  6450  00FC  1903               	goto	i1l2056
  6451  00FD  28A5               	goto	i1l2084
  6452  00FE  2900               	opt asmopt_pop
  6453                           
  6454                           	
  6455                           i1l287:	
  6456  00FF                     	goto	i1l2084
  6457  00FF  2900               	line	229
  6458                           ;main.c: 229:             }
  6459                           	
  6460                           i1l283:	
  6461  0100                     	line	231
  6462                           	
  6463                           i1l2084:	
  6464  0100                     ;main.c: 231:             if (data1[1] == 0x06) {
  6465                           		movlw	6
  6466  0100  3006               	movlb 0	; select bank0
  6467  0101  0020               	xorwf	(0+(ISR@data1)+01h),w
  6468  0102  064D               	btfss	status,2
  6469  0103  1D03               	goto	u233_21
  6470  0104  2906               	goto	u233_20
  6471  0105  2907               u233_21:
  6472  0106                     	goto	i1l293
  6473  0106  292C               u233_20:
  6474  0107                     	line	234
  6475                           	
  6476                           i1l2086:	
  6477  0107                     ;main.c: 234:                 CONVERT_Data_1(data1, crc_code_1);
  6478                           	movlw	(low(ISR@crc_code_1|((0x0)<<8)))&0ffh
  6479  0107  305D               	movwf	(??_ISR+0)+0
  6480  0108  00C7               	movf	(??_ISR+0)+0,w
  6481  0109  0847               	movwf	(i1CONVERT_Data_1@output_ref)
  6482  010A  00FC               	movlw	(low(ISR@data1|((0x0)<<8)))&0ffh
  6483  010B  304C               	fcall	i1_CONVERT_Data_1
  6484  010C  318E  26D3  3180   	line	235
  6485                           	
  6486                           i1l2088:	
  6487  010F                     ;main.c: 235:                 data1[8] = '\0';
  6488                           	movlb 0	; select bank0
  6489  010F  0020               	clrf	0+(ISR@data1)+08h
  6490  0110  01D4               	line	237
  6491                           	
  6492                           i1l2090:	
  6493  0111                     ;main.c: 237:                 if ((data1[6] == crc_code_1[0]) && (data1[7] == crc_code_1
                                 [1])) {
  6494                           	movf	0+(ISR@data1)+06h,w
  6495  0111  0852               	xorwf	(ISR@crc_code_1),w	;volatile
  6496  0112  065D               	skipz
  6497  0113  1D03               	goto	u234_21
  6498  0114  2916               	goto	u234_20
  6499  0115  2917               u234_21:
  6500  0116                     	goto	i1l293
  6501  0116  292C               u234_20:
  6502  0117                     	
  6503                           i1l2092:	
  6504  0117                     	movf	0+(ISR@data1)+07h,w
  6505  0117  0853               	xorwf	0+(ISR@crc_code_1)+01h,w	;volatile
  6506  0118  065E               	skipz
  6507  0119  1D03               	goto	u235_21
  6508  011A  291C               	goto	u235_20
  6509  011B  291D               u235_21:
  6510  011C                     	goto	i1l293
  6511  011C  292C               u235_20:
  6512  011D                     	line	240
  6513                           	
  6514                           i1l2094:	
  6515  011D                     ;main.c: 240:                     UART2_Write_Text_Phan_Tu_Thu_8(data1);
  6516                           	movlw	(low(ISR@data1|((0x0)<<8)))&0ffh
  6517  011D  304C               	fcall	_UART2_Write_Text_Phan_Tu_Thu_8
  6518  011E  318C  2429  3180   	line	241
  6519                           	
  6520                           i1l2096:	
  6521  0121                     ;main.c: 241:                     UART2_Write_Text("OK");
  6522                           	movlw	low(((STR_3)|8000h))
  6523  0121  3002               	movwf	(UART2_Write_Text@text)
  6524  0122  00F1               	movlw	high(((STR_3)|8000h))
  6525  0123  3090               	movwf	((UART2_Write_Text@text))+1
  6526  0124  00F2               	fcall	_UART2_Write_Text
  6527  0125  318B  235D  3180   	goto	i1l293
  6528  0128  292C               	line	245
  6529                           ;main.c: 245:                 }
  6530                           	
  6531                           i1l292:	
  6532  0129                     	goto	i1l293
  6533  0129  292C               	line	247
  6534                           ;main.c: 247:             }
  6535                           	
  6536                           i1l291:	
  6537  012A                     	goto	i1l293
  6538  012A  292C               	line	249
  6539                           ;main.c: 249:         }
  6540                           	
  6541                           i1l276:	
  6542  012B                     	goto	i1l293
  6543  012B  292C               	line	251
  6544                           ;main.c: 251:     }
  6545                           	
  6546                           i1l275:	
  6547  012C                     	line	253
  6548                           	
  6549                           i1l293:	
  6550  012C                     	bcf int$flags,0 ;clear compiler interrupt flag (level 1)
  6551  012C  107E               	retfie
  6552  012D  0009               	opt stack 0
  6553                           GLOBAL	__end_of_ISR
  6554                           	__end_of_ISR:
  6555  012E                     	signat	_ISR,89
  6556                           	global	i1_CONVERT_Data_1
  6557                           
  6558 ;; *************** function i1_CONVERT_Data_1 *****************
  6559 ;; Defined at:
  6560 ;;		line 75 in file "main.c"
  6561 ;; Parameters:    Size  Location     Type
  6562 ;;  input           1    wreg     PTR unsigned char 
  6563 ;;		 -> main@data(8), ISR@data1(13), 
  6564 ;;  output_ref      1   12[COMMON] PTR unsigned char 
  6565 ;;		 -> main@crc_code(2), ISR@crc_code_1(2), 
  6566 ;; Auto vars:     Size  Location     Type
  6567 ;;  input           1   10[BANK0 ] PTR unsigned char 
  6568 ;;		 -> main@data(8), ISR@data1(13), 
  6569 ;;  CONVERT_Data    6   17[BANK0 ] unsigned char [6]
  6570 ;;  CONVERT_Data    6   11[BANK0 ] unsigned char [6]
  6571 ;;  CONVERT_Data    2   27[BANK0 ] unsigned int 
  6572 ;;  CONVERT_Data    2   23[BANK0 ] unsigned char [2]
  6573 ;;  CONVERT_Data    2   25[BANK0 ] unsigned int 
  6574 ;; Return value:  Size  Location     Type
  6575 ;;                  1    wreg      void 
  6576 ;; Registers used:
  6577 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6578 ;; Tracked objects:
  6579 ;;		On entry : 0/0
  6580 ;;		On exit  : 0/0
  6581 ;;		Unchanged: 0/0
  6582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6583 ;;      Params:         1       0       0       0       0       0       0       0
  6584 ;;      Locals:         0      19       0       0       0       0       0       0
  6585 ;;      Temps:          0       2       0       0       0       0       0       0
  6586 ;;      Totals:         1      21       0       0       0       0       0       0
  6587 ;;Total ram usage:       22 bytes
  6588 ;; Hardware stack levels used:    1
  6589 ;; Hardware stack levels required when called:    1
  6590 ;; This function calls:
  6591 ;;		i1_crc16
  6592 ;;		i1_reflect_byte
  6593 ;; This function is called by:
  6594 ;;		_ISR
  6595 ;; This function uses a non-reentrant model
  6596 ;;
  6597                           psect	text15,local,class=CODE,delta=2,merge=1,group=0
  6598                           	line	75
  6599                           global __ptext15
  6600                           __ptext15:	;psect for function i1_CONVERT_Data_1
  6601  0ED3                     psect	text15
  6602                           	file	"main.c"
  6603                           	line	75
  6604                           	global	__size_ofi1_CONVERT_Data_1
  6605                           	__size_ofi1_CONVERT_Data_1	equ	__end_ofi1_CONVERT_Data_1-i1_CONVERT_Data_1
  6606  007E                     	
  6607                           i1_CONVERT_Data_1:	
  6608  0ED3                     ;incstack = 0
  6609                           	opt	stack 11
  6610                           ; Regs used in i1_CONVERT_Data_1: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6611                           ;i1CONVERT_Data_1@input stored from wreg
  6612                           	movlb 0	; select bank0
  6613  0ED3  0020               	movwf	(i1CONVERT_Data_1@input)
  6614  0ED4  00AA               	line	77
  6615                           	
  6616                           i1l1920:	
  6617  0ED5                     ;main.c: 77:     unsigned char input_ref[6] = "";
  6618                           	movlw	low(CONVERT_Data_1@F4665)
  6619  0ED5  30DE               	movwf	fsr1l
  6620  0ED6  0086               	movlw	high(CONVERT_Data_1@F4665)
  6621  0ED7  3000               	movwf	fsr1h
  6622  0ED8  0087               	movlw	low(i1CONVERT_Data_1@input_ref)
  6623  0ED9  302B               	movwf	fsr0l
  6624  0EDA  0084               	movlw	high(i1CONVERT_Data_1@input_ref)
  6625  0EDB  3000               	movwf	fsr0h
  6626  0EDC  0085               	movlw	6
  6627  0EDD  3006               	movwf	(??i1_CONVERT_Data_1+0)+0
  6628  0EDE  00A8               u203_20:
  6629  0EDF                     	moviw	fsr1++
  6630  0EDF  0016               	movwi	fsr0++
  6631  0EE0  001A               	decfsz	(??i1_CONVERT_Data_1+0)+0,f
  6632  0EE1  0BA8               	goto	u203_20
  6633  0EE2  2EDF               	line	78
  6634                           ;main.c: 78:     unsigned char txt[6] = "";
  6635                           	movlw	low(CONVERT_Data_1@F4667)
  6636  0EE3  30D8               	movwf	fsr1l
  6637  0EE4  0086               	movlw	high(CONVERT_Data_1@F4667)
  6638  0EE5  3000               	movwf	fsr1h
  6639  0EE6  0087               	movlw	low(i1CONVERT_Data_1@txt)
  6640  0EE7  3031               	movwf	fsr0l
  6641  0EE8  0084               	movlw	high(i1CONVERT_Data_1@txt)
  6642  0EE9  3000               	movwf	fsr0h
  6643  0EEA  0085               	movlw	6
  6644  0EEB  3006               	movwf	(??i1_CONVERT_Data_1+0)+0
  6645  0EEC  00A8               u204_20:
  6646  0EED                     	moviw	fsr1++
  6647  0EED  0016               	movwi	fsr0++
  6648  0EEE  001A               	decfsz	(??i1_CONVERT_Data_1+0)+0,f
  6649  0EEF  0BA8               	goto	u204_20
  6650  0EF0  2EED               	line	80
  6651                           	
  6652                           i1l1922:	
  6653  0EF1                     ;main.c: 79:     unsigned int crc;;main.c: 80:     unsigned char output[2] = "";
  6654                           	movlb 1	; select bank1
  6655  0EF1  0021               	movf	(CONVERT_Data_1@F4670+1)^080h,w
  6656  0EF2  0867               	movlb 0	; select bank0
  6657  0EF3  0020               	movwf	(i1CONVERT_Data_1@output+1)
  6658  0EF4  00B8               	movlb 1	; select bank1
  6659  0EF5  0021               	movf	(CONVERT_Data_1@F4670)^080h,w
  6660  0EF6  0866               	movlb 0	; select bank0
  6661  0EF7  0020               	movwf	(i1CONVERT_Data_1@output)
  6662  0EF8  00B7               	line	81
  6663                           	
  6664                           i1l1924:	
  6665  0EF9                     ;main.c: 81:     reflect_byte(input, input_ref, 6);
  6666                           	movlw	(low(i1CONVERT_Data_1@input_ref|((0x0)<<8)))&0ffh
  6667  0EF9  302B               	movwf	(??i1_CONVERT_Data_1+0)+0
  6668  0EFA  00A8               	movf	(??i1_CONVERT_Data_1+0)+0,w
  6669  0EFB  0828               	movwf	(i1reflect_byte@byte_ref)
  6670  0EFC  00F0               	movlw	low(06h)
  6671  0EFD  3006               	movwf	(??i1_CONVERT_Data_1+1)+0
  6672  0EFE  00A9               	movf	(??i1_CONVERT_Data_1+1)+0,w
  6673  0EFF  0829               	movwf	(i1reflect_byte@index)
  6674  0F00  00F1               	movf	(i1CONVERT_Data_1@input),w
  6675  0F01  082A               	fcall	i1_reflect_byte
  6676  0F02  318C  2458  318E   	line	85
  6677                           	
  6678                           i1l1926:	
  6679  0F05                     ;main.c: 85:     for (unsigned int i = 0; i < 6; i++) {
  6680                           	movlb 0	; select bank0
  6681  0F05  0020               	clrf	(i1CONVERT_Data_1@i)
  6682  0F06  01BB               	clrf	(i1CONVERT_Data_1@i+1)
  6683  0F07  01BC               	
  6684                           i1l1928:	
  6685  0F08                     	movlw	0
  6686  0F08  3000               	subwf	(i1CONVERT_Data_1@i+1),w
  6687  0F09  023C               	movlw	06h
  6688  0F0A  3006               	skipnz
  6689  0F0B  1903               	subwf	(i1CONVERT_Data_1@i),w
  6690  0F0C  023B               	skipc
  6691  0F0D  1C03               	goto	u205_21
  6692  0F0E  2F10               	goto	u205_20
  6693  0F0F  2F11               u205_21:
  6694  0F10                     	goto	i1l1932
  6695  0F10  2F13               u205_20:
  6696  0F11                     	goto	i1l1938
  6697  0F11  2F2F               	
  6698                           i1l1930:	
  6699  0F12                     	goto	i1l1938
  6700  0F12  2F2F               	
  6701                           i1l239:	
  6702  0F13                     	line	86
  6703                           	
  6704                           i1l1932:	
  6705  0F13                     ;main.c: 86:         txt[i] = input_ref[6 - 1 - i];
  6706                           	decf	(i1CONVERT_Data_1@i),w
  6707  0F13  033B               	xorlw	0ffh
  6708  0F14  3AFF               	addlw	05h
  6709  0F15  3E05               	addlw	low(i1CONVERT_Data_1@input_ref|((0x0)<<8))&0ffh
  6710  0F16  3E2B               	movwf	fsr1l
  6711  0F17  0086               	clrf fsr1h	
  6712  0F18  0187               	
  6713                           	movf	indf1,w
  6714  0F19  0801               	movwf	(??i1_CONVERT_Data_1+0)+0
  6715  0F1A  00A8               	movf	(i1CONVERT_Data_1@i),w
  6716  0F1B  083B               	addlw	low(i1CONVERT_Data_1@txt|((0x0)<<8))&0ffh
  6717  0F1C  3E31               	movwf	fsr1l
  6718  0F1D  0086               	clrf fsr1h	
  6719  0F1E  0187               	
  6720                           	movf	(??i1_CONVERT_Data_1+0)+0,w
  6721  0F1F  0828               	movwf	indf1
  6722  0F20  0081               	line	87
  6723                           	
  6724                           i1l1934:	
  6725  0F21                     ;main.c: 87:     }
  6726                           	movlw	01h
  6727  0F21  3001               	addwf	(i1CONVERT_Data_1@i),f
  6728  0F22  07BB               	movlw	0
  6729  0F23  3000               	addwfc	(i1CONVERT_Data_1@i+1),f
  6730  0F24  3DBC               	
  6731                           i1l1936:	
  6732  0F25                     	movlw	0
  6733  0F25  3000               	subwf	(i1CONVERT_Data_1@i+1),w
  6734  0F26  023C               	movlw	06h
  6735  0F27  3006               	skipnz
  6736  0F28  1903               	subwf	(i1CONVERT_Data_1@i),w
  6737  0F29  023B               	skipc
  6738  0F2A  1C03               	goto	u206_21
  6739  0F2B  2F2D               	goto	u206_20
  6740  0F2C  2F2E               u206_21:
  6741  0F2D                     	goto	i1l1932
  6742  0F2D  2F13               u206_20:
  6743  0F2E                     	goto	i1l1938
  6744  0F2E  2F2F               	
  6745                           i1l240:	
  6746  0F2F                     	line	89
  6747                           	
  6748                           i1l1938:	
  6749  0F2F                     ;main.c: 89:     crc = crc16(txt, 6);
  6750                           	movlw	06h
  6751  0F2F  3006               	movwf	(i1crc16@dataLen)
  6752  0F30  00F0               	movlw	0
  6753  0F31  3000               	movwf	((i1crc16@dataLen))+1
  6754  0F32  00F1               	movlw	(low(i1CONVERT_Data_1@txt|((0x0)<<8)))&0ffh
  6755  0F33  3031               	fcall	i1_crc16
  6756  0F34  3186  26B0  318E   	movf	(1+(?i1_crc16)),w
  6757  0F37  0871               	movlb 0	; select bank0
  6758  0F38  0020               	movwf	(i1CONVERT_Data_1@crc+1)
  6759  0F39  00BA               	movf	(0+(?i1_crc16)),w
  6760  0F3A  0870               	movwf	(i1CONVERT_Data_1@crc)
  6761  0F3B  00B9               	line	90
  6762                           	
  6763                           i1l1940:	
  6764  0F3C                     ;main.c: 90:     output[0] = crc & 0xff;
  6765                           	movf	(i1CONVERT_Data_1@crc),w
  6766  0F3C  0839               	movwf	(??i1_CONVERT_Data_1+0)+0
  6767  0F3D  00A8               	movf	(??i1_CONVERT_Data_1+0)+0,w
  6768  0F3E  0828               	movwf	(i1CONVERT_Data_1@output)
  6769  0F3F  00B7               	line	91
  6770                           	
  6771                           i1l1942:	
  6772  0F40                     ;main.c: 91:     output[1] = (crc >> 8)&0xff;
  6773                           	movf	(i1CONVERT_Data_1@crc+1),w
  6774  0F40  083A               	movwf	(??i1_CONVERT_Data_1+0)+0
  6775  0F41  00A8               	movf	(??i1_CONVERT_Data_1+0)+0,w
  6776  0F42  0828               	movwf	0+(i1CONVERT_Data_1@output)+01h
  6777  0F43  00B8               	line	95
  6778                           	
  6779                           i1l1944:	
  6780  0F44                     ;main.c: 95:     reflect_byte(output, output_ref, 2);
  6781                           	movf	(i1CONVERT_Data_1@output_ref),w
  6782  0F44  087C               	movwf	(??i1_CONVERT_Data_1+0)+0
  6783  0F45  00A8               	movf	(??i1_CONVERT_Data_1+0)+0,w
  6784  0F46  0828               	movwf	(i1reflect_byte@byte_ref)
  6785  0F47  00F0               	movlw	low(02h)
  6786  0F48  3002               	movwf	(??i1_CONVERT_Data_1+1)+0
  6787  0F49  00A9               	movf	(??i1_CONVERT_Data_1+1)+0,w
  6788  0F4A  0829               	movwf	(i1reflect_byte@index)
  6789  0F4B  00F1               	movlw	(low(i1CONVERT_Data_1@output|((0x0)<<8)))&0ffh
  6790  0F4C  3037               	fcall	i1_reflect_byte
  6791  0F4D  318C  2458  318E   	line	98
  6792                           	
  6793                           i1l241:	
  6794  0F50                     	return
  6795  0F50  0008               	opt stack 0
  6796                           GLOBAL	__end_ofi1_CONVERT_Data_1
  6797                           	__end_ofi1_CONVERT_Data_1:
  6798  0F51                     	signat	i1_CONVERT_Data_1,89
  6799                           	global	_UART_Read
  6800                           
  6801 ;; *************** function _UART_Read *****************
  6802 ;; Defined at:
  6803 ;;		line 33 in file "./uart.h"
  6804 ;; Parameters:    Size  Location     Type
  6805 ;;		None
  6806 ;; Auto vars:     Size  Location     Type
  6807 ;;		None
  6808 ;; Return value:  Size  Location     Type
  6809 ;;                  1    wreg      unsigned char 
  6810 ;; Registers used:
  6811 ;;		wreg
  6812 ;; Tracked objects:
  6813 ;;		On entry : 0/0
  6814 ;;		On exit  : 0/0
  6815 ;;		Unchanged: 0/0
  6816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6817 ;;      Params:         0       0       0       0       0       0       0       0
  6818 ;;      Locals:         0       0       0       0       0       0       0       0
  6819 ;;      Temps:          0       0       0       0       0       0       0       0
  6820 ;;      Totals:         0       0       0       0       0       0       0       0
  6821 ;;Total ram usage:        0 bytes
  6822 ;; Hardware stack levels used:    1
  6823 ;; This function calls:
  6824 ;;		Nothing
  6825 ;; This function is called by:
  6826 ;;		_ISR
  6827 ;;		_UART_Read_Text
  6828 ;; This function uses a non-reentrant model
  6829 ;;
  6830                           psect	text16,local,class=CODE,delta=2,merge=1,group=0
  6831                           	file	"./uart.h"
  6832                           	line	33
  6833                           global __ptext16
  6834                           __ptext16:	;psect for function _UART_Read
  6835  0B33                     psect	text16
  6836                           	file	"./uart.h"
  6837                           	line	33
  6838                           	global	__size_of_UART_Read
  6839                           	__size_of_UART_Read	equ	__end_of_UART_Read-_UART_Read
  6840  0015                     	
  6841                           _UART_Read:	
  6842  0B33                     ;incstack = 0
  6843                           	opt	stack 12
  6844                           ; Regs used in _UART_Read: [wreg]
  6845                           	line	35
  6846                           	
  6847                           i1l1732:	
  6848  0B33                     ;./uart.h: 35:     if(RC1STAbits.OERR)
  6849                           	movlb 3	; select bank3
  6850  0B33  0023               	btfss	(413)^0180h,1	;volatile
  6851  0B34  1C9D               	goto	u173_21
  6852  0B35  2B37               	goto	u173_20
  6853  0B36  2B38               u173_21:
  6854  0B37                     	goto	i1l57
  6855  0B37  2B3E               u173_20:
  6856  0B38                     	line	37
  6857                           	
  6858                           i1l1734:	
  6859  0B38                     ;./uart.h: 36:     {;./uart.h: 37:         RC1STAbits.CREN=0;
  6860                           	bcf	(413)^0180h,4	;volatile
  6861  0B38  121D               	line	38
  6862                           ;./uart.h: 38:         __nop();
  6863                           	opt	asmopt_push
  6864                           	opt	asmopt_off
  6865                           	nop
  6866  0B39  0000               	opt	asmopt_pop
  6867                           	line	39
  6868                           ;./uart.h: 39:         RC1STAbits.CREN=1;
  6869                           	movlb 3	; select bank3
  6870  0B3A  0023               	bsf	(413)^0180h,4	;volatile
  6871  0B3B  161D               	goto	i1l57
  6872  0B3C  2B3E               	line	40
  6873                           ;./uart.h: 40:     }
  6874                           	
  6875                           i1l56:	
  6876  0B3D                     	line	41
  6877                           ;./uart.h: 41:   while(!PIR1bits.RCIF);
  6878                           	goto	i1l57
  6879  0B3D  2B3E               	
  6880                           i1l58:	
  6881  0B3E                     	
  6882                           i1l57:	
  6883  0B3E                     	movlb 0	; select bank0
  6884  0B3E  0020               	btfss	(17),5	;volatile
  6885  0B3F  1E91               	goto	u174_21
  6886  0B40  2B42               	goto	u174_20
  6887  0B41  2B43               u174_21:
  6888  0B42                     	goto	i1l57
  6889  0B42  2B3E               u174_20:
  6890  0B43                     	goto	i1l1736
  6891  0B43  2B44               	
  6892                           i1l59:	
  6893  0B44                     	line	42
  6894                           	
  6895                           i1l1736:	
  6896  0B44                     ;./uart.h: 42:   return RC1REG;
  6897                           	movlb 3	; select bank3
  6898  0B44  0023               	movf	(409)^0180h,w	;volatile
  6899  0B45  0819               	goto	i1l60
  6900  0B46  2B47               	
  6901                           i1l1738:	
  6902  0B47                     	line	43
  6903                           	
  6904                           i1l60:	
  6905  0B47                     	return
  6906  0B47  0008               	opt stack 0
  6907                           GLOBAL	__end_of_UART_Read
  6908                           	__end_of_UART_Read:
  6909  0B48                     	signat	_UART_Read,89
  6910                           	global	_UART_Data_Ready
  6911                           
  6912 ;; *************** function _UART_Data_Ready *****************
  6913 ;; Defined at:
  6914 ;;		line 29 in file "./uart.h"
  6915 ;; Parameters:    Size  Location     Type
  6916 ;;		None
  6917 ;; Auto vars:     Size  Location     Type
  6918 ;;		None
  6919 ;; Return value:  Size  Location     Type
  6920 ;;                  1    wreg      unsigned char 
  6921 ;; Registers used:
  6922 ;;		wreg, status,2, status,0
  6923 ;; Tracked objects:
  6924 ;;		On entry : 0/0
  6925 ;;		On exit  : 0/0
  6926 ;;		Unchanged: 0/0
  6927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6928 ;;      Params:         0       0       0       0       0       0       0       0
  6929 ;;      Locals:         0       0       0       0       0       0       0       0
  6930 ;;      Temps:          0       0       0       0       0       0       0       0
  6931 ;;      Totals:         0       0       0       0       0       0       0       0
  6932 ;;Total ram usage:        0 bytes
  6933 ;; Hardware stack levels used:    1
  6934 ;; This function calls:
  6935 ;;		Nothing
  6936 ;; This function is called by:
  6937 ;;		_ISR
  6938 ;; This function uses a non-reentrant model
  6939 ;;
  6940                           psect	text17,local,class=CODE,delta=2,merge=1,group=0
  6941                           	line	29
  6942                           global __ptext17
  6943                           __ptext17:	;psect for function _UART_Data_Ready
  6944  0B0E                     psect	text17
  6945                           	file	"./uart.h"
  6946                           	line	29
  6947                           	global	__size_of_UART_Data_Ready
  6948                           	__size_of_UART_Data_Ready	equ	__end_of_UART_Data_Ready-_UART_Data_Ready
  6949  0006                     	
  6950                           _UART_Data_Ready:	
  6951  0B0E                     ;incstack = 0
  6952                           	opt	stack 12
  6953                           ; Regs used in _UART_Data_Ready: [wreg+status,2+status,0]
  6954                           	line	31
  6955                           	
  6956                           i1l1728:	
  6957  0B0E                     ;./uart.h: 31:    return PIR1bits.RCIF;
  6958                           	movlb 0	; select bank0
  6959  0B0E  0020               	swapf	(17),w	;volatile
  6960  0B0F  0E11               	rrf	wreg,f
  6961  0B10  0C89               	andlw	(1<<1)-1
  6962  0B11  3901               	goto	i1l53
  6963  0B12  2B13               	
  6964                           i1l1730:	
  6965  0B13                     	line	32
  6966                           	
  6967                           i1l53:	
  6968  0B13                     	return
  6969  0B13  0008               	opt stack 0
  6970                           GLOBAL	__end_of_UART_Data_Ready
  6971                           	__end_of_UART_Data_Ready:
  6972  0B14                     	signat	_UART_Data_Ready,89
  6973                           	global	_UART2_Write_Text_Phan_Tu_Thu_8
  6974                           
  6975 ;; *************** function _UART2_Write_Text_Phan_Tu_Thu_8 *****************
  6976 ;; Defined at:
  6977 ;;		line 66 in file "./uart2.h"
  6978 ;; Parameters:    Size  Location     Type
  6979 ;;  text            1    wreg     PTR unsigned char 
  6980 ;;		 -> ISR@data1(13), 
  6981 ;; Auto vars:     Size  Location     Type
  6982 ;;  text            1    2[COMMON] PTR unsigned char 
  6983 ;;		 -> ISR@data1(13), 
  6984 ;;  i               2    3[COMMON] int 
  6985 ;; Return value:  Size  Location     Type
  6986 ;;                  1    wreg      void 
  6987 ;; Registers used:
  6988 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6989 ;; Tracked objects:
  6990 ;;		On entry : 0/0
  6991 ;;		On exit  : 0/0
  6992 ;;		Unchanged: 0/0
  6993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6994 ;;      Params:         0       0       0       0       0       0       0       0
  6995 ;;      Locals:         3       0       0       0       0       0       0       0
  6996 ;;      Temps:          1       0       0       0       0       0       0       0
  6997 ;;      Totals:         4       0       0       0       0       0       0       0
  6998 ;;Total ram usage:        4 bytes
  6999 ;; Hardware stack levels used:    1
  7000 ;; Hardware stack levels required when called:    1
  7001 ;; This function calls:
  7002 ;;		_UART2_Write
  7003 ;; This function is called by:
  7004 ;;		_ISR
  7005 ;; This function uses a non-reentrant model
  7006 ;;
  7007                           psect	text18,local,class=CODE,delta=2,merge=1,group=0
  7008                           	file	"./uart2.h"
  7009                           	line	66
  7010                           global __ptext18
  7011                           __ptext18:	;psect for function _UART2_Write_Text_Phan_Tu_Thu_8
  7012  0C29                     psect	text18
  7013                           	file	"./uart2.h"
  7014                           	line	66
  7015                           	global	__size_of_UART2_Write_Text_Phan_Tu_Thu_8
  7016                           	__size_of_UART2_Write_Text_Phan_Tu_Thu_8	equ	__end_of_UART2_Write_Text_Phan_Tu_Thu_8-_U
                                 ART2_Write_Text_Phan_Tu_Thu_8
  7017  002F                     	
  7018                           _UART2_Write_Text_Phan_Tu_Thu_8:	
  7019  0C29                     ;incstack = 0
  7020                           	opt	stack 11
  7021                           ; Regs used in _UART2_Write_Text_Phan_Tu_Thu_8: [wreg+fsr1l+fsr1h+status,2+status,0+pcla
                                 th+cstack]
  7022                           ;UART2_Write_Text_Phan_Tu_Thu_8@text stored from wreg
  7023                           	movwf	(UART2_Write_Text_Phan_Tu_Thu_8@text)
  7024  0C29  00F2               	line	69
  7025                           	
  7026                           i1l1814:	
  7027  0C2A                     ;./uart2.h: 66: void UART2_Write_Text_Phan_Tu_Thu_8(char *text);./uart2.h: 67: {;./uart2
                                 .h: 68:   int i;;./uart2.h: 69:   for(i=0;i<8;i++)
  7028                           	clrf	(UART2_Write_Text_Phan_Tu_Thu_8@i)
  7029  0C2A  01F3               	clrf	(UART2_Write_Text_Phan_Tu_Thu_8@i+1)
  7030  0C2B  01F4               	
  7031                           i1l1816:	
  7032  0C2C                     	movf	(UART2_Write_Text_Phan_Tu_Thu_8@i+1),w
  7033  0C2C  0874               	xorlw	80h
  7034  0C2D  3A80               	movwf	(??_UART2_Write_Text_Phan_Tu_Thu_8+0)+0
  7035  0C2E  00F1               	movlw	(0)^80h
  7036  0C2F  3080               	subwf	(??_UART2_Write_Text_Phan_Tu_Thu_8+0)+0,w
  7037  0C30  0271               	skipz
  7038  0C31  1D03               	goto	u187_25
  7039  0C32  2C35               	movlw	08h
  7040  0C33  3008               	subwf	(UART2_Write_Text_Phan_Tu_Thu_8@i),w
  7041  0C34  0273               u187_25:
  7042  0C35                     
  7043                           	skipc
  7044  0C35  1C03               	goto	u187_21
  7045  0C36  2C38               	goto	u187_20
  7046  0C37  2C39               u187_21:
  7047  0C38                     	goto	i1l1820
  7048  0C38  2C3B               u187_20:
  7049  0C39                     	goto	i1l130
  7050  0C39  2C57               	
  7051                           i1l1818:	
  7052  0C3A                     	goto	i1l130
  7053  0C3A  2C57               	
  7054                           i1l128:	
  7055  0C3B                     	line	70
  7056                           	
  7057                           i1l1820:	
  7058  0C3B                     ;./uart2.h: 70:    UART2_Write(text[i]);
  7059                           	movf	(UART2_Write_Text_Phan_Tu_Thu_8@i),w
  7060  0C3B  0873               	addwf	(UART2_Write_Text_Phan_Tu_Thu_8@text),w
  7061  0C3C  0772               	movwf	(??_UART2_Write_Text_Phan_Tu_Thu_8+0)+0
  7062  0C3D  00F1               	movf	0+(??_UART2_Write_Text_Phan_Tu_Thu_8+0)+0,w
  7063  0C3E  0871               	movwf	fsr1l
  7064  0C3F  0086               	clrf fsr1h	
  7065  0C40  0187               	
  7066                           	movf	indf1,w
  7067  0C41  0801               	fcall	_UART2_Write
  7068  0C42  318B  231A  318C   	
  7069                           i1l1822:	
  7070  0C45                     	movlw	01h
  7071  0C45  3001               	addwf	(UART2_Write_Text_Phan_Tu_Thu_8@i),f
  7072  0C46  07F3               	movlw	0
  7073  0C47  3000               	addwfc	(UART2_Write_Text_Phan_Tu_Thu_8@i+1),f
  7074  0C48  3DF4               	
  7075                           i1l1824:	
  7076  0C49                     	movf	(UART2_Write_Text_Phan_Tu_Thu_8@i+1),w
  7077  0C49  0874               	xorlw	80h
  7078  0C4A  3A80               	movwf	(??_UART2_Write_Text_Phan_Tu_Thu_8+0)+0
  7079  0C4B  00F1               	movlw	(0)^80h
  7080  0C4C  3080               	subwf	(??_UART2_Write_Text_Phan_Tu_Thu_8+0)+0,w
  7081  0C4D  0271               	skipz
  7082  0C4E  1D03               	goto	u188_25
  7083  0C4F  2C52               	movlw	08h
  7084  0C50  3008               	subwf	(UART2_Write_Text_Phan_Tu_Thu_8@i),w
  7085  0C51  0273               u188_25:
  7086  0C52                     
  7087                           	skipc
  7088  0C52  1C03               	goto	u188_21
  7089  0C53  2C55               	goto	u188_20
  7090  0C54  2C56               u188_21:
  7091  0C55                     	goto	i1l1820
  7092  0C55  2C3B               u188_20:
  7093  0C56                     	goto	i1l130
  7094  0C56  2C57               	
  7095                           i1l129:	
  7096  0C57                     	line	71
  7097                           	
  7098                           i1l130:	
  7099  0C57                     	return
  7100  0C57  0008               	opt stack 0
  7101                           GLOBAL	__end_of_UART2_Write_Text_Phan_Tu_Thu_8
  7102                           	__end_of_UART2_Write_Text_Phan_Tu_Thu_8:
  7103  0C58                     	signat	_UART2_Write_Text_Phan_Tu_Thu_8,4217
  7104                           	global	_UART2_Write_Text_Phan_Tu_Thu_7
  7105                           
  7106 ;; *************** function _UART2_Write_Text_Phan_Tu_Thu_7 *****************
  7107 ;; Defined at:
  7108 ;;		line 60 in file "./uart2.h"
  7109 ;; Parameters:    Size  Location     Type
  7110 ;;  text            1    wreg     PTR unsigned char 
  7111 ;;		 -> ISR@data1(13), 
  7112 ;; Auto vars:     Size  Location     Type
  7113 ;;  text            1    2[COMMON] PTR unsigned char 
  7114 ;;		 -> ISR@data1(13), 
  7115 ;;  i               2    3[COMMON] int 
  7116 ;; Return value:  Size  Location     Type
  7117 ;;                  1    wreg      void 
  7118 ;; Registers used:
  7119 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7120 ;; Tracked objects:
  7121 ;;		On entry : 0/0
  7122 ;;		On exit  : 0/0
  7123 ;;		Unchanged: 0/0
  7124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7125 ;;      Params:         0       0       0       0       0       0       0       0
  7126 ;;      Locals:         3       0       0       0       0       0       0       0
  7127 ;;      Temps:          1       0       0       0       0       0       0       0
  7128 ;;      Totals:         4       0       0       0       0       0       0       0
  7129 ;;Total ram usage:        4 bytes
  7130 ;; Hardware stack levels used:    1
  7131 ;; Hardware stack levels required when called:    1
  7132 ;; This function calls:
  7133 ;;		_UART2_Write
  7134 ;; This function is called by:
  7135 ;;		_ISR
  7136 ;; This function uses a non-reentrant model
  7137 ;;
  7138                           psect	text19,local,class=CODE,delta=2,merge=1,group=0
  7139                           	line	60
  7140                           global __ptext19
  7141                           __ptext19:	;psect for function _UART2_Write_Text_Phan_Tu_Thu_7
  7142  0BFA                     psect	text19
  7143                           	file	"./uart2.h"
  7144                           	line	60
  7145                           	global	__size_of_UART2_Write_Text_Phan_Tu_Thu_7
  7146                           	__size_of_UART2_Write_Text_Phan_Tu_Thu_7	equ	__end_of_UART2_Write_Text_Phan_Tu_Thu_7-_U
                                 ART2_Write_Text_Phan_Tu_Thu_7
  7147  002F                     	
  7148                           _UART2_Write_Text_Phan_Tu_Thu_7:	
  7149  0BFA                     ;incstack = 0
  7150                           	opt	stack 11
  7151                           ; Regs used in _UART2_Write_Text_Phan_Tu_Thu_7: [wreg+fsr1l+fsr1h+status,2+status,0+pcla
                                 th+cstack]
  7152                           ;UART2_Write_Text_Phan_Tu_Thu_7@text stored from wreg
  7153                           	movwf	(UART2_Write_Text_Phan_Tu_Thu_7@text)
  7154  0BFA  00F2               	line	62
  7155                           	
  7156                           i1l1802:	
  7157  0BFB                     ;./uart2.h: 61:     int i;;./uart2.h: 62:     for (i = 0; i<7; i++)
  7158                           	clrf	(UART2_Write_Text_Phan_Tu_Thu_7@i)
  7159  0BFB  01F3               	clrf	(UART2_Write_Text_Phan_Tu_Thu_7@i+1)
  7160  0BFC  01F4               	
  7161                           i1l1804:	
  7162  0BFD                     	movf	(UART2_Write_Text_Phan_Tu_Thu_7@i+1),w
  7163  0BFD  0874               	xorlw	80h
  7164  0BFE  3A80               	movwf	(??_UART2_Write_Text_Phan_Tu_Thu_7+0)+0
  7165  0BFF  00F1               	movlw	(0)^80h
  7166  0C00  3080               	subwf	(??_UART2_Write_Text_Phan_Tu_Thu_7+0)+0,w
  7167  0C01  0271               	skipz
  7168  0C02  1D03               	goto	u185_25
  7169  0C03  2C06               	movlw	07h
  7170  0C04  3007               	subwf	(UART2_Write_Text_Phan_Tu_Thu_7@i),w
  7171  0C05  0273               u185_25:
  7172  0C06                     
  7173                           	skipc
  7174  0C06  1C03               	goto	u185_21
  7175  0C07  2C09               	goto	u185_20
  7176  0C08  2C0A               u185_21:
  7177  0C09                     	goto	i1l1808
  7178  0C09  2C0C               u185_20:
  7179  0C0A                     	goto	i1l125
  7180  0C0A  2C28               	
  7181                           i1l1806:	
  7182  0C0B                     	goto	i1l125
  7183  0C0B  2C28               	
  7184                           i1l123:	
  7185  0C0C                     	line	63
  7186                           	
  7187                           i1l1808:	
  7188  0C0C                     ;./uart2.h: 63:         UART2_Write(text[i]);
  7189                           	movf	(UART2_Write_Text_Phan_Tu_Thu_7@i),w
  7190  0C0C  0873               	addwf	(UART2_Write_Text_Phan_Tu_Thu_7@text),w
  7191  0C0D  0772               	movwf	(??_UART2_Write_Text_Phan_Tu_Thu_7+0)+0
  7192  0C0E  00F1               	movf	0+(??_UART2_Write_Text_Phan_Tu_Thu_7+0)+0,w
  7193  0C0F  0871               	movwf	fsr1l
  7194  0C10  0086               	clrf fsr1h	
  7195  0C11  0187               	
  7196                           	movf	indf1,w
  7197  0C12  0801               	fcall	_UART2_Write
  7198  0C13  318B  231A  318B   	
  7199                           i1l1810:	
  7200  0C16                     	movlw	01h
  7201  0C16  3001               	addwf	(UART2_Write_Text_Phan_Tu_Thu_7@i),f
  7202  0C17  07F3               	movlw	0
  7203  0C18  3000               	addwfc	(UART2_Write_Text_Phan_Tu_Thu_7@i+1),f
  7204  0C19  3DF4               	
  7205                           i1l1812:	
  7206  0C1A                     	movf	(UART2_Write_Text_Phan_Tu_Thu_7@i+1),w
  7207  0C1A  0874               	xorlw	80h
  7208  0C1B  3A80               	movwf	(??_UART2_Write_Text_Phan_Tu_Thu_7+0)+0
  7209  0C1C  00F1               	movlw	(0)^80h
  7210  0C1D  3080               	subwf	(??_UART2_Write_Text_Phan_Tu_Thu_7+0)+0,w
  7211  0C1E  0271               	skipz
  7212  0C1F  1D03               	goto	u186_25
  7213  0C20  2C23               	movlw	07h
  7214  0C21  3007               	subwf	(UART2_Write_Text_Phan_Tu_Thu_7@i),w
  7215  0C22  0273               u186_25:
  7216  0C23                     
  7217                           	skipc
  7218  0C23  1C03               	goto	u186_21
  7219  0C24  2C26               	goto	u186_20
  7220  0C25  2C27               u186_21:
  7221  0C26                     	goto	i1l1808
  7222  0C26  2C0C               u186_20:
  7223  0C27                     	goto	i1l125
  7224  0C27  2C28               	
  7225                           i1l124:	
  7226  0C28                     	line	64
  7227                           	
  7228                           i1l125:	
  7229  0C28                     	return
  7230  0C28  0008               	opt stack 0
  7231                           GLOBAL	__end_of_UART2_Write_Text_Phan_Tu_Thu_7
  7232                           	__end_of_UART2_Write_Text_Phan_Tu_Thu_7:
  7233  0C29                     	signat	_UART2_Write_Text_Phan_Tu_Thu_7,4217
  7234                           	global	_UART2_Write_Text_Phan_Tu_Thu_13
  7235                           
  7236 ;; *************** function _UART2_Write_Text_Phan_Tu_Thu_13 *****************
  7237 ;; Defined at:
  7238 ;;		line 73 in file "./uart2.h"
  7239 ;; Parameters:    Size  Location     Type
  7240 ;;  text            1    wreg     PTR unsigned char 
  7241 ;;		 -> ISR@data1(13), 
  7242 ;; Auto vars:     Size  Location     Type
  7243 ;;  text            1    2[COMMON] PTR unsigned char 
  7244 ;;		 -> ISR@data1(13), 
  7245 ;;  i               2    3[COMMON] int 
  7246 ;; Return value:  Size  Location     Type
  7247 ;;                  1    wreg      void 
  7248 ;; Registers used:
  7249 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7250 ;; Tracked objects:
  7251 ;;		On entry : 0/0
  7252 ;;		On exit  : 0/0
  7253 ;;		Unchanged: 0/0
  7254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7255 ;;      Params:         0       0       0       0       0       0       0       0
  7256 ;;      Locals:         3       0       0       0       0       0       0       0
  7257 ;;      Temps:          1       0       0       0       0       0       0       0
  7258 ;;      Totals:         4       0       0       0       0       0       0       0
  7259 ;;Total ram usage:        4 bytes
  7260 ;; Hardware stack levels used:    1
  7261 ;; Hardware stack levels required when called:    1
  7262 ;; This function calls:
  7263 ;;		_UART2_Write
  7264 ;; This function is called by:
  7265 ;;		_ISR
  7266 ;; This function uses a non-reentrant model
  7267 ;;
  7268                           psect	text20,local,class=CODE,delta=2,merge=1,group=0
  7269                           	line	73
  7270                           global __ptext20
  7271                           __ptext20:	;psect for function _UART2_Write_Text_Phan_Tu_Thu_13
  7272  0BCB                     psect	text20
  7273                           	file	"./uart2.h"
  7274                           	line	73
  7275                           	global	__size_of_UART2_Write_Text_Phan_Tu_Thu_13
  7276                           	__size_of_UART2_Write_Text_Phan_Tu_Thu_13	equ	__end_of_UART2_Write_Text_Phan_Tu_Thu_13-
                                 _UART2_Write_Text_Phan_Tu_Thu_13
  7277  002F                     	
  7278                           _UART2_Write_Text_Phan_Tu_Thu_13:	
  7279  0BCB                     ;incstack = 0
  7280                           	opt	stack 11
  7281                           ; Regs used in _UART2_Write_Text_Phan_Tu_Thu_13: [wreg+fsr1l+fsr1h+status,2+status,0+pcl
                                 ath+cstack]
  7282                           ;UART2_Write_Text_Phan_Tu_Thu_13@text stored from wreg
  7283                           	movwf	(UART2_Write_Text_Phan_Tu_Thu_13@text)
  7284  0BCB  00F2               	line	76
  7285                           	
  7286                           i1l1826:	
  7287  0BCC                     ;./uart2.h: 73: void UART2_Write_Text_Phan_Tu_Thu_13(char *text);./uart2.h: 74: {;./uart
                                 2.h: 75:   int i;;./uart2.h: 76:   for(i=0;i<13;i++)
  7288                           	clrf	(UART2_Write_Text_Phan_Tu_Thu_13@i)
  7289  0BCC  01F3               	clrf	(UART2_Write_Text_Phan_Tu_Thu_13@i+1)
  7290  0BCD  01F4               	
  7291                           i1l1828:	
  7292  0BCE                     	movf	(UART2_Write_Text_Phan_Tu_Thu_13@i+1),w
  7293  0BCE  0874               	xorlw	80h
  7294  0BCF  3A80               	movwf	(??_UART2_Write_Text_Phan_Tu_Thu_13+0)+0
  7295  0BD0  00F1               	movlw	(0)^80h
  7296  0BD1  3080               	subwf	(??_UART2_Write_Text_Phan_Tu_Thu_13+0)+0,w
  7297  0BD2  0271               	skipz
  7298  0BD3  1D03               	goto	u189_25
  7299  0BD4  2BD7               	movlw	0Dh
  7300  0BD5  300D               	subwf	(UART2_Write_Text_Phan_Tu_Thu_13@i),w
  7301  0BD6  0273               u189_25:
  7302  0BD7                     
  7303                           	skipc
  7304  0BD7  1C03               	goto	u189_21
  7305  0BD8  2BDA               	goto	u189_20
  7306  0BD9  2BDB               u189_21:
  7307  0BDA                     	goto	i1l1832
  7308  0BDA  2BDD               u189_20:
  7309  0BDB                     	goto	i1l135
  7310  0BDB  2BF9               	
  7311                           i1l1830:	
  7312  0BDC                     	goto	i1l135
  7313  0BDC  2BF9               	
  7314                           i1l133:	
  7315  0BDD                     	line	77
  7316                           	
  7317                           i1l1832:	
  7318  0BDD                     ;./uart2.h: 77:    UART2_Write(text[i]);
  7319                           	movf	(UART2_Write_Text_Phan_Tu_Thu_13@i),w
  7320  0BDD  0873               	addwf	(UART2_Write_Text_Phan_Tu_Thu_13@text),w
  7321  0BDE  0772               	movwf	(??_UART2_Write_Text_Phan_Tu_Thu_13+0)+0
  7322  0BDF  00F1               	movf	0+(??_UART2_Write_Text_Phan_Tu_Thu_13+0)+0,w
  7323  0BE0  0871               	movwf	fsr1l
  7324  0BE1  0086               	clrf fsr1h	
  7325  0BE2  0187               	
  7326                           	movf	indf1,w
  7327  0BE3  0801               	fcall	_UART2_Write
  7328  0BE4  318B  231A  318B   	
  7329                           i1l1834:	
  7330  0BE7                     	movlw	01h
  7331  0BE7  3001               	addwf	(UART2_Write_Text_Phan_Tu_Thu_13@i),f
  7332  0BE8  07F3               	movlw	0
  7333  0BE9  3000               	addwfc	(UART2_Write_Text_Phan_Tu_Thu_13@i+1),f
  7334  0BEA  3DF4               	
  7335                           i1l1836:	
  7336  0BEB                     	movf	(UART2_Write_Text_Phan_Tu_Thu_13@i+1),w
  7337  0BEB  0874               	xorlw	80h
  7338  0BEC  3A80               	movwf	(??_UART2_Write_Text_Phan_Tu_Thu_13+0)+0
  7339  0BED  00F1               	movlw	(0)^80h
  7340  0BEE  3080               	subwf	(??_UART2_Write_Text_Phan_Tu_Thu_13+0)+0,w
  7341  0BEF  0271               	skipz
  7342  0BF0  1D03               	goto	u190_25
  7343  0BF1  2BF4               	movlw	0Dh
  7344  0BF2  300D               	subwf	(UART2_Write_Text_Phan_Tu_Thu_13@i),w
  7345  0BF3  0273               u190_25:
  7346  0BF4                     
  7347                           	skipc
  7348  0BF4  1C03               	goto	u190_21
  7349  0BF5  2BF7               	goto	u190_20
  7350  0BF6  2BF8               u190_21:
  7351  0BF7                     	goto	i1l1832
  7352  0BF7  2BDD               u190_20:
  7353  0BF8                     	goto	i1l135
  7354  0BF8  2BF9               	
  7355                           i1l134:	
  7356  0BF9                     	line	78
  7357                           	
  7358                           i1l135:	
  7359  0BF9                     	return
  7360  0BF9  0008               	opt stack 0
  7361                           GLOBAL	__end_of_UART2_Write_Text_Phan_Tu_Thu_13
  7362                           	__end_of_UART2_Write_Text_Phan_Tu_Thu_13:
  7363  0BFA                     	signat	_UART2_Write_Text_Phan_Tu_Thu_13,4217
  7364                           	global	_UART2_Write_Text
  7365                           
  7366 ;; *************** function _UART2_Write_Text *****************
  7367 ;; Defined at:
  7368 ;;		line 55 in file "./uart2.h"
  7369 ;; Parameters:    Size  Location     Type
  7370 ;;  text            2    1[COMMON] PTR unsigned char 
  7371 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  7372 ;; Auto vars:     Size  Location     Type
  7373 ;;  i               2    4[COMMON] int 
  7374 ;; Return value:  Size  Location     Type
  7375 ;;                  1    wreg      void 
  7376 ;; Registers used:
  7377 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7378 ;; Tracked objects:
  7379 ;;		On entry : 0/0
  7380 ;;		On exit  : 0/0
  7381 ;;		Unchanged: 0/0
  7382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7383 ;;      Params:         2       0       0       0       0       0       0       0
  7384 ;;      Locals:         2       0       0       0       0       0       0       0
  7385 ;;      Temps:          1       0       0       0       0       0       0       0
  7386 ;;      Totals:         5       0       0       0       0       0       0       0
  7387 ;;Total ram usage:        5 bytes
  7388 ;; Hardware stack levels used:    1
  7389 ;; Hardware stack levels required when called:    1
  7390 ;; This function calls:
  7391 ;;		_UART2_Write
  7392 ;; This function is called by:
  7393 ;;		_ISR
  7394 ;; This function uses a non-reentrant model
  7395 ;;
  7396                           psect	text21,local,class=CODE,delta=2,merge=1,group=0
  7397                           	line	55
  7398                           global __ptext21
  7399                           __ptext21:	;psect for function _UART2_Write_Text
  7400  0B5D                     psect	text21
  7401                           	file	"./uart2.h"
  7402                           	line	55
  7403                           	global	__size_of_UART2_Write_Text
  7404                           	__size_of_UART2_Write_Text	equ	__end_of_UART2_Write_Text-_UART2_Write_Text
  7405  001F                     	
  7406                           _UART2_Write_Text:	
  7407  0B5D                     ;incstack = 0
  7408                           	opt	stack 11
  7409                           ; Regs used in _UART2_Write_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7410                           	line	57
  7411                           	
  7412                           i1l1794:	
  7413  0B5D                     ;./uart2.h: 56:     int i;;./uart2.h: 57:     for (i = 0; text[i] != '\0'; i++)
  7414                           	clrf	(UART2_Write_Text@i)
  7415  0B5D  01F4               	clrf	(UART2_Write_Text@i+1)
  7416  0B5E  01F5               	goto	i1l1800
  7417  0B5F  2B6F               	
  7418                           i1l118:	
  7419  0B60                     	line	58
  7420                           	
  7421                           i1l1796:	
  7422  0B60                     ;./uart2.h: 58:         UART2_Write(text[i]);
  7423                           	movf	(UART2_Write_Text@text),w
  7424  0B60  0871               	addwf	(UART2_Write_Text@i),w
  7425  0B61  0774               	movwf	fsr0l
  7426  0B62  0084               	movf	(UART2_Write_Text@text+1),w
  7427  0B63  0872               	addwfc	(UART2_Write_Text@i+1),w
  7428  0B64  3D75               	movwf	fsr0h
  7429  0B65  0085               	movf	indf0,w ;code access
  7430  0B66  0800               	fcall	_UART2_Write
  7431  0B67  318B  231A  318B   	
  7432                           i1l1798:	
  7433  0B6A                     	movlw	01h
  7434  0B6A  3001               	addwf	(UART2_Write_Text@i),f
  7435  0B6B  07F4               	movlw	0
  7436  0B6C  3000               	addwfc	(UART2_Write_Text@i+1),f
  7437  0B6D  3DF5               	goto	i1l1800
  7438  0B6E  2B6F               	
  7439                           i1l117:	
  7440  0B6F                     	
  7441                           i1l1800:	
  7442  0B6F                     	movf	(UART2_Write_Text@text),w
  7443  0B6F  0871               	addwf	(UART2_Write_Text@i),w
  7444  0B70  0774               	movwf	fsr0l
  7445  0B71  0084               	movf	(UART2_Write_Text@text+1),w
  7446  0B72  0872               	addwfc	(UART2_Write_Text@i+1),w
  7447  0B73  3D75               	movwf	fsr0h
  7448  0B74  0085               	moviw	fsr0++
  7449  0B75  0012               	btfss	status,2
  7450  0B76  1D03               	goto	u184_21
  7451  0B77  2B79               	goto	u184_20
  7452  0B78  2B7A               u184_21:
  7453  0B79                     	goto	i1l1796
  7454  0B79  2B60               u184_20:
  7455  0B7A                     	goto	i1l120
  7456  0B7A  2B7B               	
  7457                           i1l119:	
  7458  0B7B                     	line	59
  7459                           	
  7460                           i1l120:	
  7461  0B7B                     	return
  7462  0B7B  0008               	opt stack 0
  7463                           GLOBAL	__end_of_UART2_Write_Text
  7464                           	__end_of_UART2_Write_Text:
  7465  0B7C                     	signat	_UART2_Write_Text,4217
  7466                           	global	_UART2_Write
  7467                           
  7468 ;; *************** function _UART2_Write *****************
  7469 ;; Defined at:
  7470 ;;		line 50 in file "./uart2.h"
  7471 ;; Parameters:    Size  Location     Type
  7472 ;;  data            1    wreg     unsigned char 
  7473 ;; Auto vars:     Size  Location     Type
  7474 ;;  data            1    0[COMMON] unsigned char 
  7475 ;; Return value:  Size  Location     Type
  7476 ;;                  1    wreg      void 
  7477 ;; Registers used:
  7478 ;;		wreg
  7479 ;; Tracked objects:
  7480 ;;		On entry : 0/0
  7481 ;;		On exit  : 0/0
  7482 ;;		Unchanged: 0/0
  7483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7484 ;;      Params:         0       0       0       0       0       0       0       0
  7485 ;;      Locals:         1       0       0       0       0       0       0       0
  7486 ;;      Temps:          0       0       0       0       0       0       0       0
  7487 ;;      Totals:         1       0       0       0       0       0       0       0
  7488 ;;Total ram usage:        1 bytes
  7489 ;; Hardware stack levels used:    1
  7490 ;; This function calls:
  7491 ;;		Nothing
  7492 ;; This function is called by:
  7493 ;;		_UART2_Write_Text
  7494 ;;		_UART2_Write_Text_Phan_Tu_Thu_7
  7495 ;;		_UART2_Write_Text_Phan_Tu_Thu_8
  7496 ;;		_UART2_Write_Text_Phan_Tu_Thu_13
  7497 ;;		_UART2_Write_Text_2
  7498 ;;		_UART2_Write_Text_Length
  7499 ;; This function uses a non-reentrant model
  7500 ;;
  7501                           psect	text22,local,class=CODE,delta=2,merge=1,group=0
  7502                           	line	50
  7503                           global __ptext22
  7504                           __ptext22:	;psect for function _UART2_Write
  7505  0B1A                     psect	text22
  7506                           	file	"./uart2.h"
  7507                           	line	50
  7508                           	global	__size_of_UART2_Write
  7509                           	__size_of_UART2_Write	equ	__end_of_UART2_Write-_UART2_Write
  7510  000B                     	
  7511                           _UART2_Write:	
  7512  0B1A                     ;incstack = 0
  7513                           	opt	stack 11
  7514                           ; Regs used in _UART2_Write: [wreg]
  7515                           ;UART2_Write@data stored from wreg
  7516                           	movwf	(UART2_Write@data)
  7517  0B1A  00F0               	line	51
  7518                           	
  7519                           i1l1550:	
  7520  0B1B                     ;./uart2.h: 51:     while (!TX2STAbits.TRMT);
  7521                           	goto	i1l111
  7522  0B1B  2B1C               	
  7523                           i1l112:	
  7524  0B1C                     	
  7525                           i1l111:	
  7526  0B1C                     	movlb 9	; select bank9
  7527  0B1C  0029               	btfss	(1174)^0480h,1	;volatile
  7528  0B1D  1C96               	goto	u130_21
  7529  0B1E  2B20               	goto	u130_20
  7530  0B1F  2B21               u130_21:
  7531  0B20                     	goto	i1l111
  7532  0B20  2B1C               u130_20:
  7533  0B21                     	goto	i1l1552
  7534  0B21  2B22               	
  7535                           i1l113:	
  7536  0B22                     	line	52
  7537                           	
  7538                           i1l1552:	
  7539  0B22                     ;./uart2.h: 52:     TX2REG = data;
  7540                           	movf	(UART2_Write@data),w
  7541  0B22  0870               	movwf	(1170)^0480h	;volatile
  7542  0B23  0092               	line	53
  7543                           	
  7544                           i1l114:	
  7545  0B24                     	return
  7546  0B24  0008               	opt stack 0
  7547                           GLOBAL	__end_of_UART2_Write
  7548                           	__end_of_UART2_Write:
  7549  0B25                     	signat	_UART2_Write,4217
  7550                           	global	_CONVERT_Data_5Byte
  7551                           
  7552 ;; *************** function _CONVERT_Data_5Byte *****************
  7553 ;; Defined at:
  7554 ;;		line 102 in file "main.c"
  7555 ;; Parameters:    Size  Location     Type
  7556 ;;  input           1    wreg     PTR unsigned char 
  7557 ;;		 -> ISR@data1(13), 
  7558 ;;  output_ref      1   12[COMMON] PTR unsigned char 
  7559 ;;		 -> ISR@crc_code_1(2), 
  7560 ;; Auto vars:     Size  Location     Type
  7561 ;;  input           1   20[BANK0 ] PTR unsigned char 
  7562 ;;		 -> ISR@data1(13), 
  7563 ;;  i               2   25[BANK0 ] unsigned int 
  7564 ;;  input_ref       5   15[BANK0 ] unsigned char [5]
  7565 ;;  txt             5   10[BANK0 ] unsigned char [5]
  7566 ;;  output          2   21[BANK0 ] unsigned char [2]
  7567 ;;  crc             2   23[BANK0 ] unsigned int 
  7568 ;; Return value:  Size  Location     Type
  7569 ;;                  1    wreg      void 
  7570 ;; Registers used:
  7571 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7572 ;; Tracked objects:
  7573 ;;		On entry : 0/0
  7574 ;;		On exit  : 0/0
  7575 ;;		Unchanged: 0/0
  7576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7577 ;;      Params:         1       0       0       0       0       0       0       0
  7578 ;;      Locals:         0      17       0       0       0       0       0       0
  7579 ;;      Temps:          0       2       0       0       0       0       0       0
  7580 ;;      Totals:         1      19       0       0       0       0       0       0
  7581 ;;Total ram usage:       20 bytes
  7582 ;; Hardware stack levels used:    1
  7583 ;; Hardware stack levels required when called:    1
  7584 ;; This function calls:
  7585 ;;		i1_crc16
  7586 ;;		i1_reflect_byte
  7587 ;; This function is called by:
  7588 ;;		_ISR
  7589 ;; This function uses a non-reentrant model
  7590 ;;
  7591                           psect	text23,local,class=CODE,delta=2,merge=1,group=0
  7592                           	file	"main.c"
  7593                           	line	102
  7594                           global __ptext23
  7595                           __ptext23:	;psect for function _CONVERT_Data_5Byte
  7596  0DDF                     psect	text23
  7597                           	file	"main.c"
  7598                           	line	102
  7599                           	global	__size_of_CONVERT_Data_5Byte
  7600                           	__size_of_CONVERT_Data_5Byte	equ	__end_of_CONVERT_Data_5Byte-_CONVERT_Data_5Byte
  7601  007A                     	
  7602                           _CONVERT_Data_5Byte:	
  7603  0DDF                     ;incstack = 0
  7604                           	opt	stack 11
  7605                           ; Regs used in _CONVERT_Data_5Byte: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7606                           ;CONVERT_Data_5Byte@input stored from wreg
  7607                           	movlb 0	; select bank0
  7608  0DDF  0020               	movwf	(CONVERT_Data_5Byte@input)
  7609  0DE0  00B4               	line	104
  7610                           	
  7611                           i1l1864:	
  7612  0DE1                     ;main.c: 104:     unsigned char input_ref[5] = "";
  7613                           	movlw	low(CONVERT_Data_5Byte@F4676)
  7614  0DE1  3064               	movwf	fsr1l
  7615  0DE2  0086               	movlw	high(CONVERT_Data_5Byte@F4676)
  7616  0DE3  3000               	movwf	fsr1h
  7617  0DE4  0087               	movlw	low(CONVERT_Data_5Byte@input_ref)
  7618  0DE5  302F               	movwf	fsr0l
  7619  0DE6  0084               	movlw	high(CONVERT_Data_5Byte@input_ref)
  7620  0DE7  3000               	movwf	fsr0h
  7621  0DE8  0085               	movlw	5
  7622  0DE9  3005               	movwf	(??_CONVERT_Data_5Byte+0)+0
  7623  0DEA  00A8               u195_20:
  7624  0DEB                     	moviw	fsr1++
  7625  0DEB  0016               	movwi	fsr0++
  7626  0DEC  001A               	decfsz	(??_CONVERT_Data_5Byte+0)+0,f
  7627  0DED  0BA8               	goto	u195_20
  7628  0DEE  2DEB               	line	105
  7629                           ;main.c: 105:     unsigned char txt[5] = "";
  7630                           	movlw	low(CONVERT_Data_5Byte@F4678)
  7631  0DEF  305F               	movwf	fsr1l
  7632  0DF0  0086               	movlw	high(CONVERT_Data_5Byte@F4678)
  7633  0DF1  3000               	movwf	fsr1h
  7634  0DF2  0087               	movlw	low(CONVERT_Data_5Byte@txt)
  7635  0DF3  302A               	movwf	fsr0l
  7636  0DF4  0084               	movlw	high(CONVERT_Data_5Byte@txt)
  7637  0DF5  3000               	movwf	fsr0h
  7638  0DF6  0085               	movlw	5
  7639  0DF7  3005               	movwf	(??_CONVERT_Data_5Byte+0)+0
  7640  0DF8  00A8               u196_20:
  7641  0DF9                     	moviw	fsr1++
  7642  0DF9  0016               	movwi	fsr0++
  7643  0DFA  001A               	decfsz	(??_CONVERT_Data_5Byte+0)+0,f
  7644  0DFB  0BA8               	goto	u196_20
  7645  0DFC  2DF9               	line	107
  7646                           	
  7647                           i1l1866:	
  7648  0DFD                     ;main.c: 106:     unsigned int crc;;main.c: 107:     unsigned char output[2] = "";
  7649                           	movf	(CONVERT_Data_5Byte@F4681+1),w
  7650  0DFD  086E               	movwf	(CONVERT_Data_5Byte@output+1)
  7651  0DFE  00B6               	movf	(CONVERT_Data_5Byte@F4681),w
  7652  0DFF  086D               	movwf	(CONVERT_Data_5Byte@output)
  7653  0E00  00B5               	line	108
  7654                           	
  7655                           i1l1868:	
  7656  0E01                     ;main.c: 108:     reflect_byte(input, input_ref, 5);
  7657                           	movlw	(low(CONVERT_Data_5Byte@input_ref|((0x0)<<8)))&0ffh
  7658  0E01  302F               	movwf	(??_CONVERT_Data_5Byte+0)+0
  7659  0E02  00A8               	movf	(??_CONVERT_Data_5Byte+0)+0,w
  7660  0E03  0828               	movwf	(i1reflect_byte@byte_ref)
  7661  0E04  00F0               	movlw	low(05h)
  7662  0E05  3005               	movwf	(??_CONVERT_Data_5Byte+1)+0
  7663  0E06  00A9               	movf	(??_CONVERT_Data_5Byte+1)+0,w
  7664  0E07  0829               	movwf	(i1reflect_byte@index)
  7665  0E08  00F1               	movf	(CONVERT_Data_5Byte@input),w
  7666  0E09  0834               	fcall	i1_reflect_byte
  7667  0E0A  318C  2458  318D   	line	112
  7668                           	
  7669                           i1l1870:	
  7670  0E0D                     ;main.c: 112:     for (unsigned int i = 0; i < 5; i++) {
  7671                           	movlb 0	; select bank0
  7672  0E0D  0020               	clrf	(CONVERT_Data_5Byte@i)
  7673  0E0E  01B9               	clrf	(CONVERT_Data_5Byte@i+1)
  7674  0E0F  01BA               	
  7675                           i1l1872:	
  7676  0E10                     	movlw	0
  7677  0E10  3000               	subwf	(CONVERT_Data_5Byte@i+1),w
  7678  0E11  023A               	movlw	05h
  7679  0E12  3005               	skipnz
  7680  0E13  1903               	subwf	(CONVERT_Data_5Byte@i),w
  7681  0E14  0239               	skipc
  7682  0E15  1C03               	goto	u197_21
  7683  0E16  2E18               	goto	u197_20
  7684  0E17  2E19               u197_21:
  7685  0E18                     	goto	i1l1876
  7686  0E18  2E1B               u197_20:
  7687  0E19                     	goto	i1l1882
  7688  0E19  2E37               	
  7689                           i1l1874:	
  7690  0E1A                     	goto	i1l1882
  7691  0E1A  2E37               	
  7692                           i1l250:	
  7693  0E1B                     	line	113
  7694                           	
  7695                           i1l1876:	
  7696  0E1B                     ;main.c: 113:         txt[i] = input_ref[5 - 1 - i];
  7697                           	decf	(CONVERT_Data_5Byte@i),w
  7698  0E1B  0339               	xorlw	0ffh
  7699  0E1C  3AFF               	addlw	04h
  7700  0E1D  3E04               	addlw	low(CONVERT_Data_5Byte@input_ref|((0x0)<<8))&0ffh
  7701  0E1E  3E2F               	movwf	fsr1l
  7702  0E1F  0086               	clrf fsr1h	
  7703  0E20  0187               	
  7704                           	movf	indf1,w
  7705  0E21  0801               	movwf	(??_CONVERT_Data_5Byte+0)+0
  7706  0E22  00A8               	movf	(CONVERT_Data_5Byte@i),w
  7707  0E23  0839               	addlw	low(CONVERT_Data_5Byte@txt|((0x0)<<8))&0ffh
  7708  0E24  3E2A               	movwf	fsr1l
  7709  0E25  0086               	clrf fsr1h	
  7710  0E26  0187               	
  7711                           	movf	(??_CONVERT_Data_5Byte+0)+0,w
  7712  0E27  0828               	movwf	indf1
  7713  0E28  0081               	line	114
  7714                           	
  7715                           i1l1878:	
  7716  0E29                     ;main.c: 114:     }
  7717                           	movlw	01h
  7718  0E29  3001               	addwf	(CONVERT_Data_5Byte@i),f
  7719  0E2A  07B9               	movlw	0
  7720  0E2B  3000               	addwfc	(CONVERT_Data_5Byte@i+1),f
  7721  0E2C  3DBA               	
  7722                           i1l1880:	
  7723  0E2D                     	movlw	0
  7724  0E2D  3000               	subwf	(CONVERT_Data_5Byte@i+1),w
  7725  0E2E  023A               	movlw	05h
  7726  0E2F  3005               	skipnz
  7727  0E30  1903               	subwf	(CONVERT_Data_5Byte@i),w
  7728  0E31  0239               	skipc
  7729  0E32  1C03               	goto	u198_21
  7730  0E33  2E35               	goto	u198_20
  7731  0E34  2E36               u198_21:
  7732  0E35                     	goto	i1l1876
  7733  0E35  2E1B               u198_20:
  7734  0E36                     	goto	i1l1882
  7735  0E36  2E37               	
  7736                           i1l251:	
  7737  0E37                     	line	116
  7738                           	
  7739                           i1l1882:	
  7740  0E37                     ;main.c: 116:     crc = crc16(txt, 5);
  7741                           	movlw	05h
  7742  0E37  3005               	movwf	(i1crc16@dataLen)
  7743  0E38  00F0               	movlw	0
  7744  0E39  3000               	movwf	((i1crc16@dataLen))+1
  7745  0E3A  00F1               	movlw	(low(CONVERT_Data_5Byte@txt|((0x0)<<8)))&0ffh
  7746  0E3B  302A               	fcall	i1_crc16
  7747  0E3C  3186  26B0  318D   	movf	(1+(?i1_crc16)),w
  7748  0E3F  0871               	movlb 0	; select bank0
  7749  0E40  0020               	movwf	(CONVERT_Data_5Byte@crc+1)
  7750  0E41  00B8               	movf	(0+(?i1_crc16)),w
  7751  0E42  0870               	movwf	(CONVERT_Data_5Byte@crc)
  7752  0E43  00B7               	line	117
  7753                           	
  7754                           i1l1884:	
  7755  0E44                     ;main.c: 117:     output[0] = crc & 0xff;
  7756                           	movf	(CONVERT_Data_5Byte@crc),w
  7757  0E44  0837               	movwf	(??_CONVERT_Data_5Byte+0)+0
  7758  0E45  00A8               	movf	(??_CONVERT_Data_5Byte+0)+0,w
  7759  0E46  0828               	movwf	(CONVERT_Data_5Byte@output)
  7760  0E47  00B5               	line	118
  7761                           	
  7762                           i1l1886:	
  7763  0E48                     ;main.c: 118:     output[1] = (crc >> 8)&0xff;
  7764                           	movf	(CONVERT_Data_5Byte@crc+1),w
  7765  0E48  0838               	movwf	(??_CONVERT_Data_5Byte+0)+0
  7766  0E49  00A8               	movf	(??_CONVERT_Data_5Byte+0)+0,w
  7767  0E4A  0828               	movwf	0+(CONVERT_Data_5Byte@output)+01h
  7768  0E4B  00B6               	line	122
  7769                           	
  7770                           i1l1888:	
  7771  0E4C                     ;main.c: 122:     reflect_byte(output, output_ref, 2);
  7772                           	movf	(CONVERT_Data_5Byte@output_ref),w
  7773  0E4C  087C               	movwf	(??_CONVERT_Data_5Byte+0)+0
  7774  0E4D  00A8               	movf	(??_CONVERT_Data_5Byte+0)+0,w
  7775  0E4E  0828               	movwf	(i1reflect_byte@byte_ref)
  7776  0E4F  00F0               	movlw	low(02h)
  7777  0E50  3002               	movwf	(??_CONVERT_Data_5Byte+1)+0
  7778  0E51  00A9               	movf	(??_CONVERT_Data_5Byte+1)+0,w
  7779  0E52  0829               	movwf	(i1reflect_byte@index)
  7780  0E53  00F1               	movlw	(low(CONVERT_Data_5Byte@output|((0x0)<<8)))&0ffh
  7781  0E54  3035               	fcall	i1_reflect_byte
  7782  0E55  318C  2458  318D   	line	126
  7783                           	
  7784                           i1l252:	
  7785  0E58                     	return
  7786  0E58  0008               	opt stack 0
  7787                           GLOBAL	__end_of_CONVERT_Data_5Byte
  7788                           	__end_of_CONVERT_Data_5Byte:
  7789  0E59                     	signat	_CONVERT_Data_5Byte,8313
  7790                           	global	_CONVERT_Data_11Byte
  7791                           
  7792 ;; *************** function _CONVERT_Data_11Byte *****************
  7793 ;; Defined at:
  7794 ;;		line 130 in file "main.c"
  7795 ;; Parameters:    Size  Location     Type
  7796 ;;  input           1    wreg     PTR unsigned char 
  7797 ;;		 -> ISR@data1(13), 
  7798 ;;  output_ref      1   12[COMMON] PTR unsigned char 
  7799 ;;		 -> ISR@crc_code_1(2), 
  7800 ;; Auto vars:     Size  Location     Type
  7801 ;;  input           1   32[BANK0 ] PTR unsigned char 
  7802 ;;		 -> ISR@data1(13), 
  7803 ;;  i               2   37[BANK0 ] unsigned int 
  7804 ;;  input_ref      11   21[BANK0 ] unsigned char [11]
  7805 ;;  txt            11   10[BANK0 ] unsigned char [11]
  7806 ;;  output          2   33[BANK0 ] unsigned char [2]
  7807 ;;  crc             2   35[BANK0 ] unsigned int 
  7808 ;; Return value:  Size  Location     Type
  7809 ;;                  1    wreg      void 
  7810 ;; Registers used:
  7811 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7812 ;; Tracked objects:
  7813 ;;		On entry : 0/0
  7814 ;;		On exit  : 0/0
  7815 ;;		Unchanged: 0/0
  7816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7817 ;;      Params:         1       0       0       0       0       0       0       0
  7818 ;;      Locals:         0      29       0       0       0       0       0       0
  7819 ;;      Temps:          0       2       0       0       0       0       0       0
  7820 ;;      Totals:         1      31       0       0       0       0       0       0
  7821 ;;Total ram usage:       32 bytes
  7822 ;; Hardware stack levels used:    1
  7823 ;; Hardware stack levels required when called:    1
  7824 ;; This function calls:
  7825 ;;		i1_crc16
  7826 ;;		i1_reflect_byte
  7827 ;; This function is called by:
  7828 ;;		_ISR
  7829 ;; This function uses a non-reentrant model
  7830 ;;
  7831                           psect	text24,local,class=CODE,delta=2,merge=1,group=0
  7832                           	line	130
  7833                           global __ptext24
  7834                           __ptext24:	;psect for function _CONVERT_Data_11Byte
  7835  0D65                     psect	text24
  7836                           	file	"main.c"
  7837                           	line	130
  7838                           	global	__size_of_CONVERT_Data_11Byte
  7839                           	__size_of_CONVERT_Data_11Byte	equ	__end_of_CONVERT_Data_11Byte-_CONVERT_Data_11Byte
  7840  007A                     	
  7841                           _CONVERT_Data_11Byte:	
  7842  0D65                     ;incstack = 0
  7843                           	opt	stack 11
  7844                           ; Regs used in _CONVERT_Data_11Byte: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7845                           ;CONVERT_Data_11Byte@input stored from wreg
  7846                           	movlb 0	; select bank0
  7847  0D65  0020               	movwf	(CONVERT_Data_11Byte@input)
  7848  0D66  00C0               	line	132
  7849                           	
  7850                           i1l1890:	
  7851  0D67                     ;main.c: 132:     unsigned char input_ref[11] = "";
  7852                           	movlw	low(CONVERT_Data_11Byte@F4687)
  7853  0D67  3038               	movwf	fsr1l
  7854  0D68  0086               	movlw	high(CONVERT_Data_11Byte@F4687)
  7855  0D69  3001               	movwf	fsr1h
  7856  0D6A  0087               	movlw	low(CONVERT_Data_11Byte@input_ref)
  7857  0D6B  3035               	movwf	fsr0l
  7858  0D6C  0084               	movlw	high(CONVERT_Data_11Byte@input_ref)
  7859  0D6D  3000               	movwf	fsr0h
  7860  0D6E  0085               	movlw	11
  7861  0D6F  300B               	movwf	(??_CONVERT_Data_11Byte+0)+0
  7862  0D70  00A8               u199_20:
  7863  0D71                     	moviw	fsr1++
  7864  0D71  0016               	movwi	fsr0++
  7865  0D72  001A               	decfsz	(??_CONVERT_Data_11Byte+0)+0,f
  7866  0D73  0BA8               	goto	u199_20
  7867  0D74  2D71               	line	133
  7868                           ;main.c: 133:     unsigned char txt[11] = "";
  7869                           	movlw	low(CONVERT_Data_11Byte@F4689)
  7870  0D75  302D               	movwf	fsr1l
  7871  0D76  0086               	movlw	high(CONVERT_Data_11Byte@F4689)
  7872  0D77  3001               	movwf	fsr1h
  7873  0D78  0087               	movlw	low(CONVERT_Data_11Byte@txt)
  7874  0D79  302A               	movwf	fsr0l
  7875  0D7A  0084               	movlw	high(CONVERT_Data_11Byte@txt)
  7876  0D7B  3000               	movwf	fsr0h
  7877  0D7C  0085               	movlw	11
  7878  0D7D  300B               	movwf	(??_CONVERT_Data_11Byte+0)+0
  7879  0D7E  00A8               u200_20:
  7880  0D7F                     	moviw	fsr1++
  7881  0D7F  0016               	movwi	fsr0++
  7882  0D80  001A               	decfsz	(??_CONVERT_Data_11Byte+0)+0,f
  7883  0D81  0BA8               	goto	u200_20
  7884  0D82  2D7F               	line	135
  7885                           	
  7886                           i1l1892:	
  7887  0D83                     ;main.c: 134:     unsigned int crc;;main.c: 135:     unsigned char output[2] = "";
  7888                           	movf	(CONVERT_Data_11Byte@F4692+1),w
  7889  0D83  086C               	movwf	(CONVERT_Data_11Byte@output+1)
  7890  0D84  00C2               	movf	(CONVERT_Data_11Byte@F4692),w
  7891  0D85  086B               	movwf	(CONVERT_Data_11Byte@output)
  7892  0D86  00C1               	line	136
  7893                           	
  7894                           i1l1894:	
  7895  0D87                     ;main.c: 136:     reflect_byte(input, input_ref, 11);
  7896                           	movlw	(low(CONVERT_Data_11Byte@input_ref|((0x0)<<8)))&0ffh
  7897  0D87  3035               	movwf	(??_CONVERT_Data_11Byte+0)+0
  7898  0D88  00A8               	movf	(??_CONVERT_Data_11Byte+0)+0,w
  7899  0D89  0828               	movwf	(i1reflect_byte@byte_ref)
  7900  0D8A  00F0               	movlw	low(0Bh)
  7901  0D8B  300B               	movwf	(??_CONVERT_Data_11Byte+1)+0
  7902  0D8C  00A9               	movf	(??_CONVERT_Data_11Byte+1)+0,w
  7903  0D8D  0829               	movwf	(i1reflect_byte@index)
  7904  0D8E  00F1               	movf	(CONVERT_Data_11Byte@input),w
  7905  0D8F  0840               	fcall	i1_reflect_byte
  7906  0D90  318C  2458  318D   	line	140
  7907                           	
  7908                           i1l1896:	
  7909  0D93                     ;main.c: 140:     for (unsigned int i = 0; i < 11; i++) {
  7910                           	movlb 0	; select bank0
  7911  0D93  0020               	clrf	(CONVERT_Data_11Byte@i)
  7912  0D94  01C5               	clrf	(CONVERT_Data_11Byte@i+1)
  7913  0D95  01C6               	
  7914                           i1l1898:	
  7915  0D96                     	movlw	0
  7916  0D96  3000               	subwf	(CONVERT_Data_11Byte@i+1),w
  7917  0D97  0246               	movlw	0Bh
  7918  0D98  300B               	skipnz
  7919  0D99  1903               	subwf	(CONVERT_Data_11Byte@i),w
  7920  0D9A  0245               	skipc
  7921  0D9B  1C03               	goto	u201_21
  7922  0D9C  2D9E               	goto	u201_20
  7923  0D9D  2D9F               u201_21:
  7924  0D9E                     	goto	i1l1902
  7925  0D9E  2DA1               u201_20:
  7926  0D9F                     	goto	i1l1908
  7927  0D9F  2DBD               	
  7928                           i1l1900:	
  7929  0DA0                     	goto	i1l1908
  7930  0DA0  2DBD               	
  7931                           i1l261:	
  7932  0DA1                     	line	141
  7933                           	
  7934                           i1l1902:	
  7935  0DA1                     ;main.c: 141:         txt[i] = input_ref[11 - 1 - i];
  7936                           	decf	(CONVERT_Data_11Byte@i),w
  7937  0DA1  0345               	xorlw	0ffh
  7938  0DA2  3AFF               	addlw	0Ah
  7939  0DA3  3E0A               	addlw	low(CONVERT_Data_11Byte@input_ref|((0x0)<<8))&0ffh
  7940  0DA4  3E35               	movwf	fsr1l
  7941  0DA5  0086               	clrf fsr1h	
  7942  0DA6  0187               	
  7943                           	movf	indf1,w
  7944  0DA7  0801               	movwf	(??_CONVERT_Data_11Byte+0)+0
  7945  0DA8  00A8               	movf	(CONVERT_Data_11Byte@i),w
  7946  0DA9  0845               	addlw	low(CONVERT_Data_11Byte@txt|((0x0)<<8))&0ffh
  7947  0DAA  3E2A               	movwf	fsr1l
  7948  0DAB  0086               	clrf fsr1h	
  7949  0DAC  0187               	
  7950                           	movf	(??_CONVERT_Data_11Byte+0)+0,w
  7951  0DAD  0828               	movwf	indf1
  7952  0DAE  0081               	line	142
  7953                           	
  7954                           i1l1904:	
  7955  0DAF                     ;main.c: 142:     }
  7956                           	movlw	01h
  7957  0DAF  3001               	addwf	(CONVERT_Data_11Byte@i),f
  7958  0DB0  07C5               	movlw	0
  7959  0DB1  3000               	addwfc	(CONVERT_Data_11Byte@i+1),f
  7960  0DB2  3DC6               	
  7961                           i1l1906:	
  7962  0DB3                     	movlw	0
  7963  0DB3  3000               	subwf	(CONVERT_Data_11Byte@i+1),w
  7964  0DB4  0246               	movlw	0Bh
  7965  0DB5  300B               	skipnz
  7966  0DB6  1903               	subwf	(CONVERT_Data_11Byte@i),w
  7967  0DB7  0245               	skipc
  7968  0DB8  1C03               	goto	u202_21
  7969  0DB9  2DBB               	goto	u202_20
  7970  0DBA  2DBC               u202_21:
  7971  0DBB                     	goto	i1l1902
  7972  0DBB  2DA1               u202_20:
  7973  0DBC                     	goto	i1l1908
  7974  0DBC  2DBD               	
  7975                           i1l262:	
  7976  0DBD                     	line	144
  7977                           	
  7978                           i1l1908:	
  7979  0DBD                     ;main.c: 144:     crc = crc16(txt, 11);
  7980                           	movlw	0Bh
  7981  0DBD  300B               	movwf	(i1crc16@dataLen)
  7982  0DBE  00F0               	movlw	0
  7983  0DBF  3000               	movwf	((i1crc16@dataLen))+1
  7984  0DC0  00F1               	movlw	(low(CONVERT_Data_11Byte@txt|((0x0)<<8)))&0ffh
  7985  0DC1  302A               	fcall	i1_crc16
  7986  0DC2  3186  26B0  318D   	movf	(1+(?i1_crc16)),w
  7987  0DC5  0871               	movlb 0	; select bank0
  7988  0DC6  0020               	movwf	(CONVERT_Data_11Byte@crc+1)
  7989  0DC7  00C4               	movf	(0+(?i1_crc16)),w
  7990  0DC8  0870               	movwf	(CONVERT_Data_11Byte@crc)
  7991  0DC9  00C3               	line	145
  7992                           	
  7993                           i1l1910:	
  7994  0DCA                     ;main.c: 145:     output[0] = crc & 0xff;
  7995                           	movf	(CONVERT_Data_11Byte@crc),w
  7996  0DCA  0843               	movwf	(??_CONVERT_Data_11Byte+0)+0
  7997  0DCB  00A8               	movf	(??_CONVERT_Data_11Byte+0)+0,w
  7998  0DCC  0828               	movwf	(CONVERT_Data_11Byte@output)
  7999  0DCD  00C1               	line	146
  8000                           	
  8001                           i1l1912:	
  8002  0DCE                     ;main.c: 146:     output[1] = (crc >> 8)&0xff;
  8003                           	movf	(CONVERT_Data_11Byte@crc+1),w
  8004  0DCE  0844               	movwf	(??_CONVERT_Data_11Byte+0)+0
  8005  0DCF  00A8               	movf	(??_CONVERT_Data_11Byte+0)+0,w
  8006  0DD0  0828               	movwf	0+(CONVERT_Data_11Byte@output)+01h
  8007  0DD1  00C2               	line	150
  8008                           	
  8009                           i1l1914:	
  8010  0DD2                     ;main.c: 150:     reflect_byte(output, output_ref, 2);
  8011                           	movf	(CONVERT_Data_11Byte@output_ref),w
  8012  0DD2  087C               	movwf	(??_CONVERT_Data_11Byte+0)+0
  8013  0DD3  00A8               	movf	(??_CONVERT_Data_11Byte+0)+0,w
  8014  0DD4  0828               	movwf	(i1reflect_byte@byte_ref)
  8015  0DD5  00F0               	movlw	low(02h)
  8016  0DD6  3002               	movwf	(??_CONVERT_Data_11Byte+1)+0
  8017  0DD7  00A9               	movf	(??_CONVERT_Data_11Byte+1)+0,w
  8018  0DD8  0829               	movwf	(i1reflect_byte@index)
  8019  0DD9  00F1               	movlw	(low(CONVERT_Data_11Byte@output|((0x0)<<8)))&0ffh
  8020  0DDA  3041               	fcall	i1_reflect_byte
  8021  0DDB  318C  2458  318D   	line	154
  8022                           	
  8023                           i1l263:	
  8024  0DDE                     	return
  8025  0DDE  0008               	opt stack 0
  8026                           GLOBAL	__end_of_CONVERT_Data_11Byte
  8027                           	__end_of_CONVERT_Data_11Byte:
  8028  0DDF                     	signat	_CONVERT_Data_11Byte,8313
  8029                           	global	i1_reflect_byte
  8030                           
  8031 ;; *************** function i1_reflect_byte *****************
  8032 ;; Defined at:
  8033 ;;		line 1 in file "./reflect_byte.h"
  8034 ;; Parameters:    Size  Location     Type
  8035 ;;  byte            1    wreg     PTR unsigned char 
  8036 ;;		 -> i1CONVERT_Data_1@output(2), main@data(8), ISR@data1(13), CONVERT_Data_11Byte@output(2), 
  8037 ;;		 -> CONVERT_Data_5Byte@output(2), CONVERT_Data_1@output(2), CONVERT_Data_6Byte@output(2), 
  8038 ;;  byte_ref        1    0[COMMON] PTR unsigned char 
  8039 ;;		 -> i1CONVERT_Data_1@input_ref(6), main@crc_code(2), ISR@crc_code_1(2), CONVERT_Data_11Byte@input_ref(11), 
  8040 ;;		 -> CONVERT_Data_5Byte@input_ref(5), CONVERT_Data_1@input_ref(6), CONVERT_Data_6Byte@input_ref(6), 
  8041 ;;  index           1    1[COMMON] unsigned char 
  8042 ;; Auto vars:     Size  Location     Type
  8043 ;;  byte            1    5[COMMON] PTR unsigned char 
  8044 ;;		 -> i1CONVERT_Data_1@output(2), main@data(8), ISR@data1(13), CONVERT_Data_11Byte@output(2), 
  8045 ;;		 -> CONVERT_Data_5Byte@output(2), CONVERT_Data_1@output(2), CONVERT_Data_6Byte@output(2), 
  8046 ;;  reflect_byte    1    8[COMMON] unsigned char 
  8047 ;;  reflect_byte    1    7[COMMON] unsigned char 
  8048 ;;  reflect_byte    1    6[COMMON] unsigned char 
  8049 ;; Return value:  Size  Location     Type
  8050 ;;                  1    wreg      void 
  8051 ;; Registers used:
  8052 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8053 ;; Tracked objects:
  8054 ;;		On entry : 0/0
  8055 ;;		On exit  : 0/0
  8056 ;;		Unchanged: 0/0
  8057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8058 ;;      Params:         2       0       0       0       0       0       0       0
  8059 ;;      Locals:         4       0       0       0       0       0       0       0
  8060 ;;      Temps:          3       0       0       0       0       0       0       0
  8061 ;;      Totals:         9       0       0       0       0       0       0       0
  8062 ;;Total ram usage:        9 bytes
  8063 ;; Hardware stack levels used:    1
  8064 ;; This function calls:
  8065 ;;		Nothing
  8066 ;; This function is called by:
  8067 ;;		_CONVERT_Data_5Byte
  8068 ;;		_CONVERT_Data_11Byte
  8069 ;;		i1_CONVERT_Data_1
  8070 ;; This function uses a non-reentrant model
  8071 ;;
  8072                           psect	text25,local,class=CODE,delta=2,merge=1,group=0
  8073                           	file	"./reflect_byte.h"
  8074                           	line	1
  8075                           global __ptext25
  8076                           __ptext25:	;psect for function i1_reflect_byte
  8077  0C58                     psect	text25
  8078                           	file	"./reflect_byte.h"
  8079                           	line	1
  8080                           	global	__size_ofi1_reflect_byte
  8081                           	__size_ofi1_reflect_byte	equ	__end_ofi1_reflect_byte-i1_reflect_byte
  8082  004D                     	
  8083                           i1_reflect_byte:	
  8084  0C58                     ;incstack = 0
  8085                           	opt	stack 11
  8086                           ; Regs used in i1_reflect_byte: [wreg+fsr1l+fsr1h+status,2+status,0]
  8087                           ;i1reflect_byte@byte stored from wreg
  8088                           	movwf	(i1reflect_byte@byte)
  8089  0C58  00F5               	line	3
  8090                           	
  8091                           i1l1680:	
  8092  0C59                     ;./reflect_byte.h: 2:     unsigned char i, j, temp;;./reflect_byte.h: 3:     for (j = 0;
                                  j < index; j++) {
  8093                           	clrf	(i1reflect_byte@j)
  8094  0C59  01F7               	goto	i1l1696
  8095  0C5A  2C9D               	
  8096                           i1l213:	
  8097  0C5B                     	line	4
  8098                           	
  8099                           i1l1682:	
  8100  0C5B                     ;./reflect_byte.h: 4:         for (i = 0; i < 8; i++) {
  8101                           	clrf	(i1reflect_byte@i)
  8102  0C5B  01F8               	
  8103                           i1l1684:	
  8104  0C5C                     	movlw	low(08h)
  8105  0C5C  3008               	subwf	(i1reflect_byte@i),w
  8106  0C5D  0278               	skipc
  8107  0C5E  1C03               	goto	u162_21
  8108  0C5F  2C61               	goto	u162_20
  8109  0C60  2C62               u162_21:
  8110  0C61                     	goto	i1l1688
  8111  0C61  2C64               u162_20:
  8112  0C62                     	goto	i1l1694
  8113  0C62  2C98               	
  8114                           i1l1686:	
  8115  0C63                     	goto	i1l1694
  8116  0C63  2C98               	
  8117                           i1l214:	
  8118  0C64                     	line	5
  8119                           	
  8120                           i1l1688:	
  8121  0C64                     ;./reflect_byte.h: 5:             temp = byte[j] >> i;
  8122                           	movf	(i1reflect_byte@j),w
  8123  0C64  0877               	addwf	(i1reflect_byte@byte),w
  8124  0C65  0775               	movwf	(??i1_reflect_byte+0)+0
  8125  0C66  00F2               	movf	0+(??i1_reflect_byte+0)+0,w
  8126  0C67  0872               	movwf	fsr1l
  8127  0C68  0086               	clrf fsr1h	
  8128  0C69  0187               	
  8129                           	movf	indf1,w
  8130  0C6A  0801               	movwf	(??i1_reflect_byte+1)+0
  8131  0C6B  00F3               	incf	(i1reflect_byte@i),w
  8132  0C6C  0A78               	goto	u163_24
  8133  0C6D  2C6F               u163_25:
  8134  0C6E                     	lsrf	(??i1_reflect_byte+1)+0,f
  8135  0C6E  36F3               u163_24:
  8136  0C6F                     	decfsz	wreg,f
  8137  0C6F  0B89               	goto	u163_25
  8138  0C70  2C6E               	movf	0+(??i1_reflect_byte+1)+0,w
  8139  0C71  0873               	movwf	(??i1_reflect_byte+2)+0
  8140  0C72  00F4               	movf	(??i1_reflect_byte+2)+0,w
  8141  0C73  0874               	movwf	(i1reflect_byte@temp)
  8142  0C74  00F6               	line	6
  8143                           ;./reflect_byte.h: 6:             byte_ref[index - 1 - j] += (temp & 0x01) << (7 - i);
  8144                           	movf	(i1reflect_byte@temp),w
  8145  0C75  0876               	andlw	01h
  8146  0C76  3901               	movwf	(??i1_reflect_byte+0)+0
  8147  0C77  00F2               	decf	(i1reflect_byte@i),w
  8148  0C78  0378               	xorlw	0ffh
  8149  0C79  3AFF               	addlw	07h
  8150  0C7A  3E07               	incf	wreg,f
  8151  0C7B  0A89               	goto	u164_24
  8152  0C7C  2C7E               u164_25:
  8153  0C7D                     	lslf	(??i1_reflect_byte+0)+0,f
  8154  0C7D  35F2               u164_24:
  8155  0C7E                     	decfsz	wreg,f
  8156  0C7E  0B89               	goto	u164_25
  8157  0C7F  2C7D               	movf	0+(??i1_reflect_byte+0)+0,w
  8158  0C80  0872               	movwf	(??i1_reflect_byte+1)+0
  8159  0C81  00F3               	decf	(i1reflect_byte@j),w
  8160  0C82  0377               	xorlw	0ffh
  8161  0C83  3AFF               	addwf	(i1reflect_byte@index),w
  8162  0C84  0771               	addlw	-1
  8163  0C85  3EFF               	addwf	(i1reflect_byte@byte_ref),w
  8164  0C86  0770               	movwf	(??i1_reflect_byte+2)+0
  8165  0C87  00F4               	movf	0+(??i1_reflect_byte+2)+0,w
  8166  0C88  0874               	movwf	fsr1l
  8167  0C89  0086               	clrf fsr1h	
  8168  0C8A  0187               	
  8169                           	movf	(??i1_reflect_byte+1)+0,w
  8170  0C8B  0873               	addwf	indf1,f
  8171  0C8C  0781               	line	7
  8172                           	
  8173                           i1l1690:	
  8174  0C8D                     ;./reflect_byte.h: 7:         }
  8175                           	movlw	low(01h)
  8176  0C8D  3001               	movwf	(??i1_reflect_byte+0)+0
  8177  0C8E  00F2               	movf	(??i1_reflect_byte+0)+0,w
  8178  0C8F  0872               	addwf	(i1reflect_byte@i),f
  8179  0C90  07F8               	
  8180                           i1l1692:	
  8181  0C91                     	movlw	low(08h)
  8182  0C91  3008               	subwf	(i1reflect_byte@i),w
  8183  0C92  0278               	skipc
  8184  0C93  1C03               	goto	u165_21
  8185  0C94  2C96               	goto	u165_20
  8186  0C95  2C97               u165_21:
  8187  0C96                     	goto	i1l1688
  8188  0C96  2C64               u165_20:
  8189  0C97                     	goto	i1l1694
  8190  0C97  2C98               	
  8191                           i1l215:	
  8192  0C98                     	line	8
  8193                           	
  8194                           i1l1694:	
  8195  0C98                     ;./reflect_byte.h: 8:     }
  8196                           	movlw	low(01h)
  8197  0C98  3001               	movwf	(??i1_reflect_byte+0)+0
  8198  0C99  00F2               	movf	(??i1_reflect_byte+0)+0,w
  8199  0C9A  0872               	addwf	(i1reflect_byte@j),f
  8200  0C9B  07F7               	goto	i1l1696
  8201  0C9C  2C9D               	
  8202                           i1l212:	
  8203  0C9D                     	
  8204                           i1l1696:	
  8205  0C9D                     	movf	(i1reflect_byte@index),w
  8206  0C9D  0871               	subwf	(i1reflect_byte@j),w
  8207  0C9E  0277               	skipc
  8208  0C9F  1C03               	goto	u166_21
  8209  0CA0  2CA2               	goto	u166_20
  8210  0CA1  2CA3               u166_21:
  8211  0CA2                     	goto	i1l1682
  8212  0CA2  2C5B               u166_20:
  8213  0CA3                     	goto	i1l217
  8214  0CA3  2CA4               	
  8215                           i1l216:	
  8216  0CA4                     	line	10
  8217                           	
  8218                           i1l217:	
  8219  0CA4                     	return
  8220  0CA4  0008               	opt stack 0
  8221                           GLOBAL	__end_ofi1_reflect_byte
  8222                           	__end_ofi1_reflect_byte:
  8223  0CA5                     	signat	i1_reflect_byte,89
  8224                           	global	i1_crc16
  8225                           
  8226 ;; *************** function i1_crc16 *****************
  8227 ;; Defined at:
  8228 ;;		line 167 in file "./crcLIBhex.h"
  8229 ;; Parameters:    Size  Location     Type
  8230 ;;  crcData         1    wreg     PTR unsigned char 
  8231 ;;		 -> i1CONVERT_Data_1@txt(6), CONVERT_Data_11Byte@txt(11), CONVERT_Data_5Byte@txt(5), CONVERT_Data_1@txt(6), 
  8232 ;;		 -> CONVERT_Data_6Byte@txt(6), 
  8233 ;;  dataLen         2    0[COMMON] unsigned int 
  8234 ;; Auto vars:     Size  Location     Type
  8235 ;;  crcData         1    2[BANK0 ] PTR unsigned char 
  8236 ;;		 -> i1CONVERT_Data_1@txt(6), CONVERT_Data_11Byte@txt(11), CONVERT_Data_5Byte@txt(5), CONVERT_Data_1@txt(6), 
  8237 ;;		 -> CONVERT_Data_6Byte@txt(6), 
  8238 ;;  crc16           4    4[BANK0 ] unsigned long 
  8239 ;;  crc16           2    0[BANK0 ] unsigned int 
  8240 ;;  crc16           1    3[BANK0 ] unsigned char 
  8241 ;; Return value:  Size  Location     Type
  8242 ;;                  2    0[COMMON] unsigned int 
  8243 ;; Registers used:
  8244 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  8245 ;; Tracked objects:
  8246 ;;		On entry : 0/0
  8247 ;;		On exit  : 0/0
  8248 ;;		Unchanged: 0/0
  8249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8250 ;;      Params:         2       0       0       0       0       0       0       0
  8251 ;;      Locals:         0       8       0       0       0       0       0       0
  8252 ;;      Temps:         10       0       0       0       0       0       0       0
  8253 ;;      Totals:        12       8       0       0       0       0       0       0
  8254 ;;Total ram usage:       20 bytes
  8255 ;; Hardware stack levels used:    1
  8256 ;; This function calls:
  8257 ;;		Nothing
  8258 ;; This function is called by:
  8259 ;;		_CONVERT_Data_5Byte
  8260 ;;		_CONVERT_Data_11Byte
  8261 ;;		i1_CONVERT_Data_1
  8262 ;; This function uses a non-reentrant model
  8263 ;;
  8264                           psect	text26,local,class=CODE,delta=2,merge=1,group=0
  8265                           	file	"./crcLIBhex.h"
  8266                           	line	167
  8267                           global __ptext26
  8268                           __ptext26:	;psect for function i1_crc16
  8269  06B0                     psect	text26
  8270                           	file	"./crcLIBhex.h"
  8271                           	line	167
  8272                           	global	__size_ofi1_crc16
  8273                           	__size_ofi1_crc16	equ	__end_ofi1_crc16-i1_crc16
  8274  00B1                     	
  8275                           i1_crc16:	
  8276  06B0                     ;incstack = 0
  8277                           	opt	stack 11
  8278                           ; Regs used in i1_crc16: [wreg-fsr1h+status,2+status,0+pclath]
  8279                           ;i1crc16@crcData stored from wreg
  8280                           	movlb 0	; select bank0
  8281  06B0  0020               	movwf	(i1crc16@crcData)
  8282  06B1  00A2               	line	171
  8283                           	
  8284                           i1l1646:	
  8285  06B2                     ;./crcLIBhex.h: 167: unsigned int crc16 (char *crcData, unsigned int dataLen);./crcLIBhe
                                 x.h: 168: {;./crcLIBhex.h: 169:       unsigned char i;;./crcLIBhex.h: 170:       unsigne
                                 d int iByte;;./crcLIBhex.h: 171:       unsigned long crc = CRC16_INIT;
  8286                           	movlw	low(_CRC16_INIT|8000h)
  8287  06B2  3009               	movwf	fsr0l
  8288  06B3  0084               	movlw	high(_CRC16_INIT|8000h)
  8289  06B4  3090               	movwf	fsr0h
  8290  06B5  0085               	moviw	[0]fsr0
  8291  06B6  3F00               	movwf	(??i1_crc16+0)+0
  8292  06B7  00F2               	moviw	[1]fsr0
  8293  06B8  3F01               	movwf	(??i1_crc16+0)+0+1
  8294  06B9  00F3               	movf	0+(??i1_crc16+0)+0,w
  8295  06BA  0872               	movwf	(i1crc16@crc)
  8296  06BB  00A4               	movf	1+(??i1_crc16+0)+0,w
  8297  06BC  0873               	movwf	((i1crc16@crc))+1
  8298  06BD  00A5               	clrf	2+((i1crc16@crc))
  8299  06BE  01A6               	clrf	3+((i1crc16@crc))
  8300  06BF  01A7               	line	173
  8301                           	
  8302                           i1l1648:	
  8303  06C0                     ;./crcLIBhex.h: 173:       if (dataLen == 0)
  8304                           	movf	((i1crc16@dataLen)),w
  8305  06C0  0870               iorwf	((i1crc16@dataLen+1)),w
  8306  06C1  0471               	btfss	status,2
  8307  06C2  1D03               	goto	u154_21
  8308  06C3  2EC5               	goto	u154_20
  8309  06C4  2EC6               u154_21:
  8310  06C5                     	goto	i1l1654
  8311  06C5  2ECD               u154_20:
  8312  06C6                     	line	174
  8313                           	
  8314                           i1l1650:	
  8315  06C6                     ;./crcLIBhex.h: 174:             return (~crc);
  8316                           	comf	(i1crc16@crc),w
  8317  06C6  0924               	movwf	(?i1_crc16)
  8318  06C7  00F0               	comf	(i1crc16@crc+1),w
  8319  06C8  0925               	movwf	1+(?i1_crc16)
  8320  06C9  00F1               	goto	i1l179
  8321  06CA  2F60               	
  8322                           i1l1652:	
  8323  06CB                     	goto	i1l179
  8324  06CB  2F60               	
  8325                           i1l178:	
  8326  06CC                     	goto	i1l1654
  8327  06CC  2ECD               	line	175
  8328                           ;./crcLIBhex.h: 175:       do
  8329                           	
  8330                           i1l180:	
  8331  06CD                     	line	177
  8332                           	
  8333                           i1l1654:	
  8334  06CD                     ;./crcLIBhex.h: 176:       {;./crcLIBhex.h: 177:             for (i=0, iByte=((unsigned 
                                 int)0xff & *crcData++) <<8;
  8335                           	clrf	(i1crc16@i)
  8336  06CD  01A3               	
  8337                           i1l1656:	
  8338  06CE                     	movf	(i1crc16@crcData),w
  8339  06CE  0822               	movwf	fsr1l
  8340  06CF  0086               	clrf fsr1h	
  8341  06D0  0187               	
  8342                           	movf	indf1,w
  8343  06D1  0801               	movwf	(??i1_crc16+0)+0
  8344  06D2  00F2               	clrf	(??i1_crc16+0)+0+1
  8345  06D3  01F3               	movf	(??i1_crc16+0)+0,w
  8346  06D4  0872               	movwf	(??i1_crc16+0)+1
  8347  06D5  00F3               	clrf	(??i1_crc16+0)+0
  8348  06D6  01F2               	movf	0+(??i1_crc16+0)+0,w
  8349  06D7  0872               	movwf	(i1crc16@iByte)
  8350  06D8  00A0               	movf	1+(??i1_crc16+0)+0,w
  8351  06D9  0873               	movwf	(i1crc16@iByte+1)
  8352  06DA  00A1               	
  8353                           i1l1658:	
  8354  06DB                     	movlw	low(01h)
  8355  06DB  3001               	movwf	(??i1_crc16+0)+0
  8356  06DC  00F2               	movf	(??i1_crc16+0)+0,w
  8357  06DD  0872               	addwf	(i1crc16@crcData),f
  8358  06DE  07A2               	
  8359                           i1l1660:	
  8360  06DF                     	movlw	low(08h)
  8361  06DF  3008               	subwf	(i1crc16@i),w
  8362  06E0  0223               	skipc
  8363  06E1  1C03               	goto	u155_21
  8364  06E2  2EE4               	goto	u155_20
  8365  06E3  2EE5               u155_21:
  8366  06E4                     	goto	i1l1664
  8367  06E4  2EE7               u155_20:
  8368  06E5                     	goto	i1l1674
  8369  06E5  2F50               	
  8370                           i1l1662:	
  8371  06E6                     	goto	i1l1674
  8372  06E6  2F50               	
  8373                           i1l181:	
  8374  06E7                     	line	181
  8375                           	
  8376                           i1l1664:	
  8377  06E7                     ;./crcLIBhex.h: 180:             {;./crcLIBhex.h: 181:                   if ((crc & 0x80
                                 00) ^ (iByte & 0x8000))
  8378                           	movlw	0
  8379  06E7  3000               	andwf	(i1crc16@iByte),w
  8380  06E8  0520               	movwf	(??i1_crc16+0)+0
  8381  06E9  00F2               	movlw	080h
  8382  06EA  3080               	andwf	(i1crc16@iByte+1),w
  8383  06EB  0521               	movwf	1+(??i1_crc16+0)+0
  8384  06EC  00F3               	movf	0+(??i1_crc16+0)+0,w
  8385  06ED  0872               	movwf	((??i1_crc16+2)+0)
  8386  06EE  00F4               	movf	1+(??i1_crc16+0)+0,w
  8387  06EF  0873               	movwf	((??i1_crc16+2)+0+1)
  8388  06F0  00F5               	clrf	((??i1_crc16+2)+0+2)
  8389  06F1  01F6               	clrf	((??i1_crc16+2)+0+3)
  8390  06F2  01F7               	movlw	0
  8391  06F3  3000               	andwf	(i1crc16@crc),w
  8392  06F4  0524               	movwf	(??i1_crc16+6)+0
  8393  06F5  00F8               	movlw	080h
  8394  06F6  3080               	andwf	(i1crc16@crc+1),w
  8395  06F7  0525               	movwf	((??i1_crc16+6)+0+1)
  8396  06F8  00F9               	movlw	0
  8397  06F9  3000               	andwf	(i1crc16@crc+2),w
  8398  06FA  0526               	movwf	((??i1_crc16+6)+0+2)
  8399  06FB  00FA               	movlw	0
  8400  06FC  3000               	andwf	(i1crc16@crc+3),w
  8401  06FD  0527               	movwf	((??i1_crc16+6)+0+3)
  8402  06FE  00FB               	movf	0+(??i1_crc16+6)+0,w
  8403  06FF  0878               	xorwf	(??i1_crc16+2)+0,f
  8404  0700  06F4               	movf	1+(??i1_crc16+6)+0,w
  8405  0701  0879               	xorwf	(??i1_crc16+2)+1,f
  8406  0702  06F5               	movf	2+(??i1_crc16+6)+0,w
  8407  0703  087A               	xorwf	(??i1_crc16+2)+2,f
  8408  0704  06F6               	movf	3+(??i1_crc16+6)+0,w
  8409  0705  087B               	xorwf	(??i1_crc16+2)+3,f
  8410  0706  06F7               	movf	3+(??i1_crc16+2)+0,w
  8411  0707  0877               	iorwf	2+(??i1_crc16+2)+0,w
  8412  0708  0476               	iorwf	1+(??i1_crc16+2)+0,w
  8413  0709  0475               	iorwf	0+(??i1_crc16+2)+0,w
  8414  070A  0474               	skipnz
  8415  070B  1903               	goto	u156_21
  8416  070C  2F0E               	goto	u156_20
  8417  070D  2F0F               u156_21:
  8418  070E                     	goto	i1l1668
  8419  070E  2F39               u156_20:
  8420  070F                     	line	182
  8421                           	
  8422                           i1l1666:	
  8423  070F                     ;./crcLIBhex.h: 182:                         crc = (crc << 1) ^ CRC16_POLYNOMIAL;
  8424                           	movlw	low(_CRC16_POLYNOMIAL|8000h)
  8425  070F  300B               	movwf	fsr0l
  8426  0710  0084               	movlw	high(_CRC16_POLYNOMIAL|8000h)
  8427  0711  3090               	movwf	fsr0h
  8428  0712  0085               	moviw	[0]fsr0
  8429  0713  3F00               	movwf	((??i1_crc16+0)+0)
  8430  0714  00F2               	moviw	[1]fsr0
  8431  0715  3F01               	movwf	((??i1_crc16+0)+0+1)
  8432  0716  00F3               	clrf	((??i1_crc16+0)+0+2)
  8433  0717  01F4               	clrf	((??i1_crc16+0)+0+3)
  8434  0718  01F5               	movf	(i1crc16@crc),w
  8435  0719  0824               	movwf	(??i1_crc16+4)+0
  8436  071A  00F6               	movf	(i1crc16@crc+1),w
  8437  071B  0825               	movwf	((??i1_crc16+4)+0+1)
  8438  071C  00F7               	movf	(i1crc16@crc+2),w
  8439  071D  0826               	movwf	((??i1_crc16+4)+0+2)
  8440  071E  00F8               	movf	(i1crc16@crc+3),w
  8441  071F  0827               	movwf	((??i1_crc16+4)+0+3)
  8442  0720  00F9               	movlw	01h
  8443  0721  3001               u157_25:
  8444  0722                     	lslf	(??i1_crc16+4)+0,f
  8445  0722  35F6               	rlf	(??i1_crc16+4)+1,f
  8446  0723  0DF7               	rlf	(??i1_crc16+4)+2,f
  8447  0724  0DF8               	rlf	(??i1_crc16+4)+3,f
  8448  0725  0DF9               u157_20:
  8449  0726                     	decfsz	wreg,f
  8450  0726  0B89               	goto	u157_25
  8451  0727  2F22               	movf	0+(??i1_crc16+4)+0,w
  8452  0728  0876               	xorwf	(??i1_crc16+0)+0,f
  8453  0729  06F2               	movf	1+(??i1_crc16+4)+0,w
  8454  072A  0877               	xorwf	(??i1_crc16+0)+1,f
  8455  072B  06F3               	movf	2+(??i1_crc16+4)+0,w
  8456  072C  0878               	xorwf	(??i1_crc16+0)+2,f
  8457  072D  06F4               	movf	3+(??i1_crc16+4)+0,w
  8458  072E  0879               	xorwf	(??i1_crc16+0)+3,f
  8459  072F  06F5               	movf	3+(??i1_crc16+0)+0,w
  8460  0730  0875               	movwf	(i1crc16@crc+3)
  8461  0731  00A7               	movf	2+(??i1_crc16+0)+0,w
  8462  0732  0874               	movwf	(i1crc16@crc+2)
  8463  0733  00A6               	movf	1+(??i1_crc16+0)+0,w
  8464  0734  0873               	movwf	(i1crc16@crc+1)
  8465  0735  00A5               	movf	0+(??i1_crc16+0)+0,w
  8466  0736  0872               	movwf	(i1crc16@crc)
  8467  0737  00A4               
  8468                           	goto	i1l184
  8469  0738  2F40               	line	183
  8470                           ;./crcLIBhex.h: 183:                   else crc <<= 1;
  8471                           	
  8472                           i1l183:	
  8473  0739                     	
  8474                           i1l1668:	
  8475  0739                     	movlw	01h
  8476  0739  3001               u158_25:
  8477  073A                     	lslf	(i1crc16@crc),f
  8478  073A  35A4               	rlf	(i1crc16@crc+1),f
  8479  073B  0DA5               	rlf	(i1crc16@crc+2),f
  8480  073C  0DA6               	rlf	(i1crc16@crc+3),f
  8481  073D  0DA7               	decfsz	wreg,f
  8482  073E  0B89               	goto	u158_25
  8483  073F  2F3A               	
  8484                           i1l184:	
  8485  0740                     	line	184
  8486                           ;./crcLIBhex.h: 184:             }
  8487                           	movlw	low(01h)
  8488  0740  3001               	movwf	(??i1_crc16+0)+0
  8489  0741  00F2               	movf	(??i1_crc16+0)+0,w
  8490  0742  0872               	addwf	(i1crc16@i),f
  8491  0743  07A3               	
  8492                           i1l1670:	
  8493  0744                     	movlw	01h
  8494  0744  3001               	
  8495                           u159_25:
  8496  0745                     	lslf	(i1crc16@iByte),f
  8497  0745  35A0               	rlf	(i1crc16@iByte+1),f
  8498  0746  0DA1               	decfsz	wreg,f
  8499  0747  0B89               	goto	u159_25
  8500  0748  2F45               	
  8501                           i1l1672:	
  8502  0749                     	movlw	low(08h)
  8503  0749  3008               	subwf	(i1crc16@i),w
  8504  074A  0223               	skipc
  8505  074B  1C03               	goto	u160_21
  8506  074C  2F4E               	goto	u160_20
  8507  074D  2F4F               u160_21:
  8508  074E                     	goto	i1l1664
  8509  074E  2EE7               u160_20:
  8510  074F                     	goto	i1l1674
  8511  074F  2F50               	
  8512                           i1l182:	
  8513  0750                     	line	185
  8514                           	
  8515                           i1l1674:	
  8516  0750                     ;./crcLIBhex.h: 185:       } while (--dataLen);
  8517                           	movlw	01h
  8518  0750  3001               	subwf	(i1crc16@dataLen),f
  8519  0751  02F0               	movlw	0
  8520  0752  3000               	subwfb	(i1crc16@dataLen+1),f
  8521  0753  3BF1               	movf	(((i1crc16@dataLen))),w
  8522  0754  0870               iorwf	(((i1crc16@dataLen+1))),w
  8523  0755  0471               	btfss	status,2
  8524  0756  1D03               	goto	u161_21
  8525  0757  2F59               	goto	u161_20
  8526  0758  2F5A               u161_21:
  8527  0759                     	goto	i1l1654
  8528  0759  2ECD               u161_20:
  8529  075A                     	goto	i1l1676
  8530  075A  2F5B               	
  8531                           i1l185:	
  8532  075B                     	line	187
  8533                           	
  8534                           i1l1676:	
  8535  075B                     ;./crcLIBhex.h: 187:       return (crc & 0xFFFF );
  8536                           	movf	(i1crc16@crc+1),w
  8537  075B  0825               	movwf	(?i1_crc16+1)
  8538  075C  00F1               	movf	(i1crc16@crc),w
  8539  075D  0824               	movwf	(?i1_crc16)
  8540  075E  00F0               	goto	i1l179
  8541  075F  2F60               	
  8542                           i1l1678:	
  8543  0760                     	line	188
  8544                           	
  8545                           i1l179:	
  8546  0760                     	return
  8547  0760  0008               	opt stack 0
  8548                           GLOBAL	__end_ofi1_crc16
  8549                           	__end_ofi1_crc16:
  8550  0761                     	signat	i1_crc16,90
  8551                           global	___latbits
  8552                           ___latbits	equ	2
  8553  0002                     	global	btemp
  8554                           	btemp set 07Eh
  8555  007E                     
  8556                           	DABS	1,126,2	;btemp
  8557                           	global	int$flags
  8558                           	int$flags	set btemp
  8559  007E                     	global	wtemp0
  8560                           	wtemp0 set btemp+0
  8561  007E                     	end


Data Sizes:
    Strings     3
    Constant    1036
    Data        0
    BSS         91
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     63      79
    BANK1            80     56      75
    BANK2            80      0      55
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    CONVERT_Data_11Byte@output_ref	PTR unsigned char  size(1) Largest target is 2
		 -> ISR@crc_code_1(BANK0[2]), 

    CONVERT_Data_11Byte@input	PTR unsigned char  size(1) Largest target is 13
		 -> ISR@data1(BANK0[13]), 

    CONVERT_Data_5Byte@output_ref	PTR unsigned char  size(1) Largest target is 2
		 -> ISR@crc_code_1(BANK0[2]), 

    CONVERT_Data_5Byte@input	PTR unsigned char  size(1) Largest target is 13
		 -> ISR@data1(BANK0[13]), 

    CONVERT_Data_1@output_ref	PTR unsigned char  size(1) Largest target is 2
		 -> main@crc_code(BANK1[2]), ISR@crc_code_1(BANK0[2]), 

    CONVERT_Data_1@input	PTR unsigned char  size(1) Largest target is 13
		 -> main@data(BANK1[8]), ISR@data1(BANK0[13]), 

    reflect_byte@byte_ref	PTR unsigned char  size(1) Largest target is 11
		 -> main@crc_code(BANK1[2]), ISR@crc_code_1(BANK0[2]), CONVERT_Data_11Byte@input_ref(BANK0[11]), CONVERT_Data_5Byte@input_ref(BANK0[5]), 
		 -> CONVERT_Data_1@input_ref(BANK1[6]), CONVERT_Data_6Byte@input_ref(COMMON[6]), 

    reflect_byte@byte	PTR unsigned char  size(1) Largest target is 13
		 -> main@data(BANK1[8]), ISR@data1(BANK0[13]), CONVERT_Data_11Byte@output(BANK0[2]), CONVERT_Data_5Byte@output(BANK0[2]), 
		 -> CONVERT_Data_1@output(BANK1[2]), CONVERT_Data_6Byte@output(COMMON[2]), 

    crc16@crcData	PTR unsigned char  size(1) Largest target is 11
		 -> CONVERT_Data_11Byte@txt(BANK0[11]), CONVERT_Data_5Byte@txt(BANK0[5]), CONVERT_Data_1@txt(BANK1[6]), CONVERT_Data_6Byte@txt(COMMON[6]), 

    UART2_Write_Text_Phan_Tu_Thu_13@text	PTR unsigned char  size(1) Largest target is 13
		 -> ISR@data1(BANK0[13]), 

    UART2_Write_Text_Phan_Tu_Thu_8@text	PTR unsigned char  size(1) Largest target is 13
		 -> ISR@data1(BANK0[13]), 

    UART2_Write_Text_Phan_Tu_Thu_7@text	PTR unsigned char  size(1) Largest target is 13
		 -> ISR@data1(BANK0[13]), 

    UART2_Write_Text@text	PTR unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    UART2_Read_Text@Output	PTR unsigned char  size(1) Largest target is 8
		 -> main@data(BANK1[8]), 

    UART_Write_Text_Length@str	PTR unsigned char  size(1) Largest target is 8
		 -> main@data(BANK1[8]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_CONVERT_Data_11Byte
    _ISR->_CONVERT_Data_5Byte
    _ISR->i1_CONVERT_Data_1
    i1_CONVERT_Data_1->i1_crc16
    _UART2_Write_Text_Phan_Tu_Thu_8->_UART2_Write
    _UART2_Write_Text_Phan_Tu_Thu_7->_UART2_Write
    _UART2_Write_Text_Phan_Tu_Thu_13->_UART2_Write
    _UART2_Write_Text->_UART2_Write
    _CONVERT_Data_5Byte->i1_crc16
    _CONVERT_Data_11Byte->i1_crc16

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    _ISR->_CONVERT_Data_11Byte
    i1_CONVERT_Data_1->i1_crc16
    _CONVERT_Data_5Byte->i1_crc16
    _CONVERT_Data_11Byte->i1_crc16

Critical Paths under _main in BANK1

    _main->_CONVERT_Data_1
    _UART_Write_Text_Length->_UART_Write
    _UART_Init->___aldiv
    _UART2_Init->___aldiv
    _CONVERT_Data_1->_crc16

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0    5594
                                             42 BANK1     14    14      0
                     _CONVERT_Data_1
                   _UART2_Data_Ready
                         _UART2_Init
                    _UART2_Read_Text
                          _UART_Init
                      _UART_TX_Empty
             _UART_Write_Text_Length
                   _config_interrupt
 ---------------------------------------------------------------------------------
 (1) _config_interrupt                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Write_Text_Length                               6     4      2     223
                                              1 BANK1      6     4      2
                         _UART_Write
 ---------------------------------------------------------------------------------
 (2) _UART_Write                                           1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_TX_Empty                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           14    10      4    1140
                                             15 BANK1     14    10      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (1) _UART2_Read_Text                                      7     5      2     199
                                              0 BANK1      7     5      2
                         _UART2_Read
 ---------------------------------------------------------------------------------
 (2) _UART2_Read                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART2_Init                                          14    10      4    1140
                                             15 BANK1     14    10      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     908
                                              0 BANK1     15     7      8
 ---------------------------------------------------------------------------------
 (1) _UART2_Data_Ready                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CONVERT_Data_1                                      22    21      1    2673
                                             20 BANK1     22    21      1
                              _crc16
                       _reflect_byte
 ---------------------------------------------------------------------------------
 (2) _reflect_byte                                         9     7      2    1541
                                              0 BANK1      9     7      2
 ---------------------------------------------------------------------------------
 (2) _crc16                                               20    18      2     612
                                              0 BANK1     20    18      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                 24    24      0    5564
                                             39 BANK0     24    24      0
                _CONVERT_Data_11Byte
                 _CONVERT_Data_5Byte
                   _UART2_Write_Text
    _UART2_Write_Text_Phan_Tu_Thu_13
     _UART2_Write_Text_Phan_Tu_Thu_7
     _UART2_Write_Text_Phan_Tu_Thu_8
                    _UART_Data_Ready
                          _UART_Read
                   i1_CONVERT_Data_1
 ---------------------------------------------------------------------------------
 (4) i1_CONVERT_Data_1                                    22    21      1    1237
                                             12 COMMON     1     0      1
                                              8 BANK0     21    21      0
                            i1_crc16
                     i1_reflect_byte
 ---------------------------------------------------------------------------------
 (4) _UART_Read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _UART_Data_Ready                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _UART2_Write_Text_Phan_Tu_Thu_8                       4     4      0     145
                                              1 COMMON     4     4      0
                        _UART2_Write
 ---------------------------------------------------------------------------------
 (4) _UART2_Write_Text_Phan_Tu_Thu_7                       4     4      0     145
                                              1 COMMON     4     4      0
                        _UART2_Write
 ---------------------------------------------------------------------------------
 (4) _UART2_Write_Text_Phan_Tu_Thu_13                      4     4      0     145
                                              1 COMMON     4     4      0
                        _UART2_Write
 ---------------------------------------------------------------------------------
 (4) _UART2_Write_Text                                     5     3      2     340
                                              1 COMMON     5     3      2
                        _UART2_Write
 ---------------------------------------------------------------------------------
 (5) _UART2_Write                                          1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _CONVERT_Data_5Byte                                  20    19      1    1324
                                             12 COMMON     1     0      1
                                              8 BANK0     19    19      0
                            i1_crc16
                     i1_reflect_byte
 ---------------------------------------------------------------------------------
 (4) _CONVERT_Data_11Byte                                 32    31      1    1324
                                             12 COMMON     1     0      1
                                              8 BANK0     31    31      0
                            i1_crc16
                     i1_reflect_byte
 ---------------------------------------------------------------------------------
 (5) i1_reflect_byte                                       9     7      2     581
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (5) i1_crc16                                             20    18      2     306
                                              0 COMMON    12    10      2
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CONVERT_Data_1
     _crc16
     _reflect_byte
   _UART2_Data_Ready
   _UART2_Init
     ___aldiv
   _UART2_Read_Text
     _UART2_Read
   _UART_Init
     ___aldiv
   _UART_TX_Empty
   _UART_Write_Text_Length
     _UART_Write
   _config_interrupt

 _ISR (ROOT)
   _CONVERT_Data_11Byte
     i1_crc16
     i1_reflect_byte
   _CONVERT_Data_5Byte
     i1_crc16
     i1_reflect_byte
   _UART2_Write_Text
     _UART2_Write
   _UART2_Write_Text_Phan_Tu_Thu_13
     _UART2_Write
   _UART2_Write_Text_Phan_Tu_Thu_7
     _UART2_Write
   _UART2_Write_Text_Phan_Tu_Thu_8
     _UART2_Write
   _UART_Data_Ready
   _UART_Read
   i1_CONVERT_Data_1
     i1_crc16
     i1_reflect_byte

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      DF       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     3F      4F       6       98.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     38      4B       8       93.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      37      10       68.8%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      DF      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Tue Mar 15 13:26:11 2022

                             __CFG_CP$OFF 0000                                        l50 0B08  
                                      l45 0FE8                                        l46 0FFF  
                                      l70 0B28                                        l47 0FFF  
                                      l71 0B2E                                        l72 0B32  
                                      l81 0BA4                                        l82 0BC9  
                                      l83 0BCA                                        l84 0BCA  
                                      l69 0B28                                        l95 0B19  
                                      l87 05E4                                        l88 05FE  
                                      l89 05FE                                        l98 0B52  
                                      l99 0B53                                i1crc16@crc 0024  
                             __CFG_LVP$ON 0000                                       l100 0B53  
                                     l101 0B59                                       l102 0B5C  
                                     l105 0B93                                       l106 0B81  
                                     l107 0B9E                                       l212 0CEB  
                                     l108 0B9E                                       l300 0D17  
                                     l213 0CA9                                       l214 0CB2  
                                     l215 0CE6                                       l216 0CF2  
                                     l240 0EB1                                       l217 0CF2  
                                     l241 0ED2                                       l305 0D61  
                                     l306 0D60                                       l307 0D62  
                                     l180 061C                                       l308 0D63  
                                     l181 0636                                       l309 0D63  
                                     l182 069F                                       l183 0688  
                                     l239 0E95                                       l184 068F  
                                     l185 06AA                                       l178 061B  
                                     l266 0B0D                                       l179 06AF  
                                     l460 0774                                       l461 0788  
                                     l470 07F9                                       l462 07DF  
                                     l463 07A7                                       l464 079B  
                                     l465 07AC                                       l466 07AD  
                                     l467 07D0                                       l468 07DE  
                                     l469 07F0                              __CFG_CPD$OFF 0000  
                                     _ISR 0004                 CONVERT_Data_11Byte@output 0041  
                            __CFG_BORV$LO 0000                                       wreg 0009  
                            __CFG_IESO$ON 0000                      reflect_byte@byte_ref 00A0  
                                    ?_ISR 0070                  CONVERT_Data_5Byte@output 0035  
                                    ISR@i 0059                                      l2110 0D13  
                                    l2102 0CF3                                      l2120 0D3B  
                                    l2112 0D17                                      l2104 0CFA  
                                    l2130 0D56                                      l2122 0D44  
                                    l2114 0D26                                      l2106 0CFC  
                                    l2124 0D49                                      l2116 0D2A  
                                    l2108 0D07                                      l2126 0D4D  
                                    l2118 0D32                                      l1600 0CDF  
                                    l2128 0D4E                                      l1602 0CE6  
                                    l1610 0767                                      l1604 0CEB  
                                    l1620 0798                                      l1612 0778  
                                    l1700 0F97                                      l1540 0B2E  
                                    l1630 07C6                                      l1622 079B  
                                    l1614 0783                                      l1606 0761  
                                    l1542 0B48                                      l1710 0FF5  
                                    l1702 0FA0                                      l1560 061A  
                                    l1640 07E4                                      l1632 07CE  
                                    l1624 07A7                                      l1616 0788  
                                    l1608 0763                                      l1544 0B4D  
                                    l1720 0FFC                                      l1712 0FF6  
                                    l1704 0FE5                                      l1570 0635  
                                    l1562 061C                                      l1554 0601  
                                    l1642 07F0                                      l1634 07D0  
                                    l1626 07AD                                      l1618 0790  
                                    l1546 0B59                                      l1722 0FFE  
                                    l1714 0FF7                                      l1706 0FE8  
                                    l1538 0B27                                      l1580 0698  
                                    l1572 0636                                      l1564 061D  
                                    l1556 060F                                      l1644 07F9  
                                    l1636 07D7                                      l1628 07B4  
                                    l1548 0B5C                                      l1716 0FF9  
                                    l1708 0FF2                                      l1724 0B04  
                                    l1740 0BA1                                      l1574 065E  
                                    l1582 069F                                      l1566 062A  
                                    l1558 0615                                      l1590 0CA9  
                                    l1638 07DF                                      l1718 0FFA  
                                    l1726 0B08                                      l1750 0BBC  
                                    l1742 0BA4                                      l1584 06AA  
                                    l1576 0688                                      l1568 062E  
                                    l1592 0CAA                                      l1840 0E77  
                                    l1760 05E1                                      l1752 0BC6  
                                    l1744 0BAB                                      l1586 06AF  
                                    l1578 0693                                      l1594 0CB1  
                                    l1850 0E95                                      l1842 0E7B  
                                    l1770 05F5                                      l1762 05E4  
                                    l1754 054D                                      l1746 0BB0  
                                    l1596 0CB2                                      l1588 0CA7  
                                    l1860 0EC2                                      l1852 0EA3  
                                    l1844 0E87                                      l1780 05FD  
                                    l1772 05F6                                      l1764 05EE  
                                    l1756 0593                                      l1748 0BB4  
                                    l1916 0B09                                      l1598 0CDB  
                                    l1862 0EC6                                      l1854 0EA7  
                                    l1846 0E8A                                      l1838 0E5B  
                                    l1782 0B14                                      l1774 05F8  
                                    l1766 05F0                                      l1758 059C  
                                    l1790 0B8E                                      l1918 0B0B  
                                    l1848 0E94                                      l1856 0EB1  
                                    l1784 0B19                                      l1776 05F9  
                                    l1768 05F4                                      l1792 0B93  
                                    l1858 0EBE                                      l1778 05FB  
                                    l1786 0B7E                                      l1698 0F51  
                                    l1788 0B81                                      STR_1 1002  
                                    STR_2 1002                                      STR_3 1002  
                                    u1310 0615                                      u1311 0614  
                                    u1320 0634                                      u1321 0633  
                                    u1330 065E                                      u1331 065D  
                                    u1340 0675                                      u1420 0CE5  
                                    u1404 0CBD                                      u1500 07C6  
                                    u1421 0CE4                                      u1405 0CBC  
                                    u1501 07C5                                      u1430 0CF1  
                                    u1414 0CCC                                      u1270 0B2D  
                                    u1431 0CF0                                      u1415 0CCB  
                                    u1271 0B2C                                      u1520 07DD  
                                    u1440 0767                                      u1280 0B4D  
                                    u1345 0671                                      u1521 07DC  
                                    u1505 07C2                                      u1441 0766  
                                    u1281 0B4C                                      u1370 069E  
                                    u1530 07E4                                      u1450 0778  
                                    u1290 0B58                                      u1371 069D  
                                    u1355 0689                                      u1531 07E3  
                                    u1515 07D1                                      u1451 0777  
                                    u1291 0B57                                      u1380 06A9  
                                    u1460 0798                                      u1700 0FAD  
                                    u1381 06A8                                      u1365 0694  
                                    u1461 0797                                      u1390 0CB0  
                                    u1710 0FC4                                      u1391 0CAF  
                                    u1480 07AB                                      u1800 05A9  
                                    u1720 0FF2                                      u2360 0D22  
                                    u1481 07AA                                      u1721 0FF1  
                                    u1705 0FA9                                      u1810 05C0  
                                    u2370 0D32                                      u1475 079C  
                                    u1715 0FC0                                      u2371 0D31  
                                    u1820 05EE                                      u2380 0D56  
                                    u1821 05ED                                      u1805 05A5  
                                    u2381 0D55                                      u1910 0E65  
                                    u1830 0B9D                                      u1670 0F5F  
                                    u1750 0BBC                                      u1495 07AE  
                                    u1815 05BC                                      u1831 0B9C  
                                    u1751 0BBB                                      u1920 0E73  
                                    u1680 0F76                                      u1760 0BC6  
                                    u1761 0BC5                                      u1930 0E93  
                                    u1770 055B                                      u1690 0FA0  
                                    u1931 0E92                                      u1835 0B99  
                                    u1691 0F9F                                      u1675 0F5B  
                                    u1940 0EB0                                      u1780 0572  
                                    u1941 0EAF                                      u1685 0F72  
                                    u1765 0BC2                                      u1790 059C  
                                    u1791 059B                                      u1775 0557  
                                    u1785 056E                                      i1l60 0B47  
                                    i1l53 0B13                                      i1l56 0B3D  
                                    i1l57 0B3E                                      i1l58 0B3E  
                                    i1l59 0B44                  ??_UART_Write_Text_Length 00A3  
                            __CFG_WRT$OFF 0000                        UART2_Init@baudrate 00AF  
                           __CFG_FCMEN$ON 0000                                      _main 0CF3  
                  CONVERT_Data_11Byte@crc 0043                                      fsr0h 0005  
                  CONVERT_Data_11Byte@txt 002A                                      fsr1h 0007  
                                    indf0 0000                                      fsr0l 0004  
                                    indf1 0001                                      fsr1l 0006  
                                    btemp 007E                           __end_ofi1_crc16 0761  
                           __CFG_BOREN$ON 0000                      UART2_Write_Text@text 0071  
                                    start 012E                             __CFG_MCLRE$ON 0000  
                       CONVERT_Data_1@crc 00C6                         CONVERT_Data_1@txt 00B7  
                                   ??_ISR 0047                               ?_UART2_Init 00AF  
                             ?_UART2_Read 0070                              i1crc16@iByte 0020  
                __end_ofi1_CONVERT_Data_1 0F51                              main@crc_code 00D6  
                           __CFG_PLLEN$ON 0000                           __end_of___aldiv 07FA  
                                   ?_main 0070                             __CFG_WDTE$OFF 0000  
                                   i1l111 0B1C                                     i1l112 0B1C  
                                   i1l120 0B7B                                     i1l113 0B22  
                                   i1l114 0B24                                     i1l130 0C57  
                                   i1l123 0C0C                                     i1l212 0C9D  
                                   i1l124 0C28                                     i1l213 0C5B  
                                   i1l117 0B6F                                     i1l133 0BDD  
                                   i1l125 0C28                                     i1l214 0C64  
                                   i1l118 0B60                                     i1l134 0BF9  
                                   i1l215 0C98                                     i1l119 0B7B  
                                   i1l135 0BF9                                     i1l216 0CA4  
                                   i1l128 0C3B                                     i1l240 0F2F  
                                   i1l217 0CA4                                     i1l129 0C57  
                                   i1l241 0F50                                     i1l250 0E1B  
                                   i1l251 0E37                                     i1l180 06CD  
                                   i1l252 0E58                                     i1l181 06E7  
                                   i1l261 0DA1                                     i1l182 0750  
                                   i1l262 0DBD                                     i1l183 0739  
                                   i1l263 0DDE                                     i1l239 0F13  
                                   i1l184 0740                                     i1l280 0067  
                                   i1l185 075B                                     i1l281 007A  
                                   i1l178 06CC                                     i1l290 00EC  
                                   i1l282 009C                                     i1l179 0760  
                                   i1l275 012C                                     i1l291 012A  
                                   i1l283 0100                                     i1l276 012B  
                                   i1l292 0129                                     i1l284 00EE  
                                   i1l285 00A5                                     i1l277 007F  
                                   i1l293 012C                                     i1l286 00C7  
                                   i1l278 002B                                     i1l287 00FF  
                                   i1l279 004D                                     i1l288 00C8  
                                   i1l289 00EB                          _UART2_Data_Ready 0B14  
                         _UART2_Read_Text 0B7C                           _CRC8_POLYNOMIAL 1000  
                             ?_UART_Write 0070                        __size_of_UART_Init 00AF  
                      __size_of_UART_Read 0015                                     _crc16 05FF  
                           ISR@crc_code_1 005D                                     main@j 00CB  
                                   status 0003                                     wtemp0 007E  
      UART2_Write_Text_Phan_Tu_Thu_7@text 0072        UART2_Write_Text_Phan_Tu_Thu_8@text 0072  
                       __end_of_CRC8_INIT 100F                 __size_of_UART2_Write_Text 001F  
                   CONVERT_Data_5Byte@crc 0037                     CONVERT_Data_5Byte@txt 002A  
             __size_of_CONVERT_Data_5Byte 007A                           __initialization 0130  
                            __end_of_main 0D65                              ?_UART2_Write 0070  
                                  ??_main 00CA                                    ISR@len 005B  
                                  ?_crc16 00A0                                 ??i1_crc16 0072  
                                  _ANSELG 040D                       __size_of_UART2_Init 00B2  
                     __size_of_UART2_Read 0015                                    _RC1REG 0199  
                                  _RC2REG 0491                                    i1l2010 0006  
                                  i1l2020 001F                                    i1l2012 0015  
                                  i1l2030 0042                                    i1l2022 0027  
                                  i1l2014 0019                                    i1l2040 0059  
                                  i1l2032 0047                                    i1l2024 002B  
                                  i1l2016 001A                                    i1l2042 005E  
                                  i1l2034 0048                                    i1l2026 0036  
                                  i1l2050 007F                                    i1l2018 001B  
                                  i1l2060 00AF                                    i1l2052 009C  
                                  i1l2044 0067                                    i1l2028 003C  
                                  i1l2036 004D                                    i1l2070 00D1  
                                  i1l2062 00B5                                    i1l2054 00A4  
                                  i1l2046 006D                                    i1l2038 0053  
                                  u200_20 0D7F                                    i1l2152 00F7  
                                  i1l2080 00ED                                    i1l2072 00D3  
                                  i1l2064 00BB                                    i1l2056 00A5  
                                  i1l2048 0072                                    i1l2090 0111  
                                  i1l2074 00D9                                    i1l2066 00BF  
                                  i1l2058 00AD                                    i1l2082 00EE  
                                  i1l2092 0117                                    i1l2076 00DF  
                                  i1l2068 00C8                                    i1l2084 0100  
                                  i1l1550 0B1B                                    i1l2094 011D  
                                  i1l2086 0107                                    i1l2078 00E3  
                                  u201_20 0D9F                                    i1l1552 0B22  
                                  i1l1800 0B6F                                    i1l2096 0121  
                                  i1l2088 010F                                    u201_21 0D9E  
                                  i1l1650 06C6                                    i1l1810 0C16  
                                  i1l1802 0BFB                                    i1l1730 0B13  
                                  i1l1660 06DF                                    i1l1652 06CB  
                                  i1l1900 0DA0                                    i1l1812 0C1A  
                                  i1l1804 0BFD                                    i1l1820 0C3B  
                                  i1l1732 0B33                                    i1l1670 0744  
                                  i1l1662 06E6                                    i1l1654 06CD  
                                  i1l1646 06B2                                    i1l1910 0DCA  
                                  i1l1902 0DA1                                    i1l1830 0BDC  
                                  i1l1806 0C0B                                    i1l1822 0C45  
                                  i1l1814 0C2A                                    i1l1734 0B38  
                                  i1l1672 0749                                    i1l1664 06E7  
                                  i1l1656 06CE                                    i1l1648 06C0  
                                  i1l1680 0C59                                    i1l1912 0DCE  
                                  u202_20 0DBC                                    i1l1904 0DAF  
                                  u130_20 0B21                                    i1l1832 0BDD  
                                  i1l1808 0C0C                                    i1l1824 0C49  
                                  i1l1816 0C2C                                    i1l1728 0B0E  
                                  i1l1736 0B44                                    i1l1920 0ED5  
                                  u202_21 0DBB                                    u130_21 0B20  
                                  i1l1666 070F                                    i1l1674 0750  
                                  i1l1658 06DB                                    i1l1690 0C8D  
                                  i1l1682 0C5B                                    i1l1914 0DD2  
                                  i1l1906 0DB3                                    i1l1834 0BE7  
                                  i1l1826 0BCC                                    i1l1818 0C3A  
                                  i1l1738 0B47                                    i1l1930 0F12  
                                  i1l1922 0EF1                                    i1l1676 075B  
                                  i1l1668 0739                                    i1l1692 0C91  
                                  i1l1684 0C5C                                    i1l1908 0DBD  
                                  i1l1836 0BEB                                    i1l1828 0BCE  
                                  i1l1940 0F3C                                    i1l1932 0F13  
                                  i1l1924 0EF9                                    i1l1678 0760  
                                  i1l1686 0C63                                    i1l1694 0C98  
                                  i1l1870 0E0D                                    i1l1942 0F40  
                                  i1l1934 0F21                                    i1l1926 0F05  
                                  i1l1688 0C64                                    i1l1696 0C9D  
                                  i1l1880 0E2D                                    i1l1872 0E10  
                                  i1l1864 0DE1                                    i1l1944 0F44  
                                  i1l1936 0F25                                    i1l1928 0F08  
                                  u203_20 0EDF                                    i1l1890 0D67  
                                  i1l1874 0E1A                                    i1l1882 0E37  
                                  i1l1866 0DFD                                    i1l1794 0B5D  
                                  i1l1938 0F2F                                    i1l1892 0D83  
                                  i1l1884 0E44                                    i1l1876 0E1B  
                                  i1l1868 0E01                                    i1l1796 0B60  
                                  i1l1894 0D87                                    i1l1886 0E48  
                                  i1l1878 0E29                                    i1l1798 0B6A  
                                  i1l1896 0D93                                    i1l1888 0E4C  
                                  u204_20 0EED                                    u220_20 0042  
                                  u220_21 0041                                    i1l1898 0D96  
                                  u205_20 0F11                                    u221_20 0047  
                                  u205_21 0F10                                    u221_21 0046  
                                  u206_20 0F2E                                    u230_20 00BB  
                                  u222_20 0053                                    u206_21 0F2D  
                                  u230_21 00BA                                    u222_21 0052  
                                  u231_20 00D9                                    u223_20 0059  
                                  u231_21 00D8                                    u223_21 0058  
                                  u160_20 074F                                    u232_20 00DF  
                                  u224_20 005E                                    u216_20 0011  
                                  u160_21 074E                                    u232_21 00DE  
                                  u224_21 005D                                    u161_20 075A  
                                  u233_20 0107                                    u225_20 006D  
                                  u217_20 001F                                    _INTCON 000B  
                                  u161_21 0759                                    u233_21 0106  
                                  u225_21 006C                                    u217_21 001E  
                                  u154_20 06C6                                    u162_20 0C62  
                                  u234_20 0117                                    u226_20 0072  
                                  u218_20 0027                                    u154_21 06C5  
                                  u162_21 0C61                                    u234_21 0116  
                                  u226_21 0071                                    u218_21 0026  
                                  u155_20 06E5                                    u235_20 011D  
                                  u227_20 009B                                    u219_20 003C  
                                  u155_21 06E4                                    u235_21 011C  
                                  u227_21 009A                                    u219_21 003B  
                                  u163_24 0C6F                                    u163_25 0C6E  
                                  u227_25 0097                                    u156_20 070F  
                                  u228_20 00A3                                    u156_21 070E  
                                  u228_21 00A2                                    u164_24 0C7E  
                                  u164_25 0C7D                                    u157_20 0726  
                                  u165_20 0C97                                    u173_20 0B38  
                                  u229_20 00B5                                    u165_21 0C96  
                                  u173_21 0B37                                    u229_21 00B4  
                                  u157_25 0722                                    u166_20 0CA3  
                                  u190_20 0BF8                                    u174_20 0B43  
                                  u166_21 0CA2                                    u190_21 0BF7  
                                  u174_21 0B42                                    u158_25 073A  
                                  u190_25 0BF4                                    u159_25 0745  
                                  u184_20 0B7A                                    u184_21 0B79  
                                  u185_20 0C0A                                    u185_21 0C09  
                                  u185_25 0C06                                    u186_20 0C27  
                                  u186_21 0C26                                    u186_25 0C23  
                                  u195_20 0DEB                                    u187_20 0C39  
                                  u187_21 0C38                                    u187_25 0C35  
                                  u196_20 0DF9                                    u188_20 0C56  
                                  u188_21 0C55                                    u188_25 0C52  
                                  u197_20 0E19                                    u189_20 0BDB  
                                  u197_21 0E18                                    u189_21 0BDA  
                                  u189_25 0BD7                                    u198_20 0E36  
                                  u198_21 0E35                                    u199_20 0D71  
                                  _OSCCON 0099           __size_of_UART_Write_Text_Length 002C  
                                  _TX1REG 019A                                    _TX2REG 0492  
                            _address_data 007D                                    _TRISC6 0476  
                                  _TRISC7 0477                                    _TRISG1 1869  
                                  _TRISG2 186A                  CONVERT_Data_11Byte@F4692 006B  
                CONVERT_Data_11Byte@F4687 0138                  CONVERT_Data_11Byte@F4689 012D  
                          __CFG_PWRTE$OFF 0000                         __end_of_UART_Init 1000  
                       __end_of_UART_Read 0B48                       __size_of_UART_Write 000E  
                               ??___aldiv 00A8                                    crc16@i 00AE  
                        ??i1_reflect_byte 0072                            __CFG_STVREN$ON 0000  
                 __end_of_UART2_Read_Text 0B9F                  CONVERT_Data_11Byte@input 0040  
                 __end_of_CRC8_POLYNOMIAL 1002                     __end_of_UART_TX_Empty 0B09  
               __size_of_config_interrupt 0005                              crc16@dataLen 00A0  
                      __end_of_CRC16_INIT 100B                              crc16@crcData 00AF  
                     CONVERT_Data_1@F4670 00E6                       CONVERT_Data_1@F4665 00DE  
                     CONVERT_Data_1@F4667 00D8                   __end_of__initialization 0149  
            __size_of_CONVERT_Data_11Byte 007A                           CONVERT_Data_1@i 00C8  
                          __pcstackCOMMON 0070                             __end_of_crc16 06B0  
                     CONVERT_Data_1@input 00C5                    _UART_Write_Text_Length 0B9F  
                     CONVERT_Data_5Byte@i 0039                             ?_reflect_byte 00A0  
                           reflect_byte@i 00A8                             reflect_byte@j 00A6  
                                 ??_crc16 00A2                            i1crc16@dataLen 0070  
                          i1crc16@crcData 0022                                crc16@iByte 00AC  
                              __pbssBANK0 005F                                __pbssBANK1 00D8  
                              __pbssBANK2 0120                          reflect_byte@byte 00A7  
                        reflect_byte@temp 00A5                           __CFG_VCAPEN$OFF 0000  
                __size_of_UART_Data_Ready 0006                  __end_of_UART2_Data_Ready 0B1A  
                        _UART2_Write_Text 0B5D                               UART2_Init@x 00BB  
                                 ISR@flag 005C                                __pmaintext 0CF3  
                            ??_UART2_Init 00B3                              ??_UART2_Read 00A0  
                              __pintentry 0004                         ?i1_CONVERT_Data_1 007C  
                        ?_UART2_Read_Text 00A0                 UART_Write_Text_Length@str 00A4  
                 __size_of_CONVERT_Data_1 007A                            ??_reflect_byte 00A2  
                      ??i1_CONVERT_Data_1 0028                      __size_of_UART2_Write 000B  
                                 _SP1BRGL 019B                                   _SP2BRGL 0493  
                            ??_UART_Write 00A0                                   i1_crc16 06B0  
                      __end_of_UART2_Init 05FF                        __end_of_UART2_Read 0B5D  
                 CONVERT_Data_1@input_ref 00BD                           UART2_Write@data 0070  
                                 ___aldiv 0761                                 _CRC8_INIT 100D  
                      __end_of_UART_Write 0B33                 i1CONVERT_Data_1@input_ref 002B  
                                 __ptext1 0B09                                   __ptext2 0B9F  
                                 __ptext3 0B25                                   __ptext4 0B04  
                                 __ptext5 0F51                                   __ptext6 0B7C  
                                 __ptext7 0B48                                   __ptext8 054D  
                                 __ptext9 0761                              __size_of_ISR 012A  
                        _config_interrupt 0B09                          ___aldiv@dividend 00A4  
                     i1CONVERT_Data_1@crc 0039                       i1CONVERT_Data_1@txt 0031  
                         i1reflect_byte@i 0078                           i1reflect_byte@j 0077  
              __end_of_crc32_lookup_table 054D                                   clrloop0 07FB  
                    end_of_initialization 0149           UART2_Write_Text_Phan_Tu_Thu_7@i 0073  
         UART2_Write_Text_Phan_Tu_Thu_8@i 0073                __end_of_CONVERT_Data_5Byte 0E59  
                        ___aldiv@quotient 00AB                         ??_UART_Data_Ready 0070  
                               _UART_Init 0F51                                 _UART_Read 0B33  
        UART2_Write_Text_Phan_Tu_Thu_13@i 0073                    i1CONVERT_Data_1@output 0037  
                     _CONVERT_Data_11Byte 0D65                            UART_Write@data 00A0  
                 CONVERT_Data_5Byte@F4681 006D                   CONVERT_Data_5Byte@F4676 0064  
                 CONVERT_Data_5Byte@F4678 005F                          __CFG_FOSC$INTOSC 0000  
                      i1reflect_byte@byte 0075                        i1reflect_byte@temp 0076  
                   UART2_Read_Text@Output 00A4                   CONVERT_Data_6Byte@F4654 0151  
                 CONVERT_Data_6Byte@F4656 014B                   CONVERT_Data_6Byte@F4659 00E8  
                   UART2_Read_Text@length 00A0                      CONVERT_Data_11Byte@i 0045  
                 CONVERT_Data_5Byte@input 0034                      ?_CONVERT_Data_11Byte 007C  
                    __end_of_reflect_byte 0CF3                   ?_UART_Write_Text_Length 00A1  
                          _CONVERT_Data_1 0E59                          UART2_Read_Text@i 00A5  
                              ?_UART_Init 00AF                                ?_UART_Read 0070  
                    CONVERT_Data_1@output 00C3                  __end_of_UART2_Write_Text 0B7C  
                     start_initialization 0130                               __end_of_ISR 012E  
                   ??_CONVERT_Data_11Byte 0028                    __size_of_UART_TX_Empty 0005  
                       ?_UART2_Data_Ready 0070                          _CRC16_POLYNOMIAL 100B  
                        _CRC32_POLYNOMIAL 1005            __end_of_UART_Write_Text_Length 0BCB  
           CONVERT_Data_11Byte@output_ref 007C                        ??_UART2_Data_Ready 00A0  
                  __end_of_CONVERT_Data_1 0ED3                               __pbssCOMMON 007D  
                       reflect_byte@index 00A1                                 ___latbits 0002  
                 __size_ofi1_reflect_byte 004D                             __pcstackBANK0 0020  
                           __pcstackBANK1 00A0                         UART2_Write_Text@i 0074  
                                ISR@F4700 0069                                  ISR@F4698 0120  
             CONVERT_Data_5Byte@input_ref 002F                                  ?i1_crc16 0070  
               __size_ofi1_CONVERT_Data_1 007E                                  ISR@data1 004C  
                __end_of_config_interrupt 0B0E          ??_UART2_Write_Text_Phan_Tu_Thu_7 0071  
         ?_UART2_Write_Text_Phan_Tu_Thu_7 0070          ??_UART2_Write_Text_Phan_Tu_Thu_8 0071  
         ?_UART2_Write_Text_Phan_Tu_Thu_8 0070                                  ?___aldiv 00A0  
                         ?_CONVERT_Data_1 00B4                               ??_UART_Init 00B3  
                             ??_UART_Read 0070                             ??_UART2_Write 0070  
                           _UART_TX_Empty 0B04                  __size_of_UART2_Read_Text 0023  
                          __size_of_crc16 00B1                     __size_of_reflect_byte 004E  
                              UART_Init@x 00BB                           ___aldiv@divisor 00A0  
                         ___aldiv@counter 00A9                           _UART_Data_Ready 0B0E  
                               clear_ram0 07FA                                  _PIE1bits 0091  
                                _PIR1bits 0011                        _crc32_lookup_table 014D  
                                _PIR4bits 0014                                 main@F4710 0143  
                               main@F4712 00E4                                 main@F4706 00EA  
                   i1CONVERT_Data_1@input 002A                         UART_Init@baudrate 00AF  
                      _CONVERT_Data_5Byte 0DDF                            ?_UART_TX_Empty 0070  
                                i1crc16@i 0023                              _reflect_byte 0CA5  
            CONVERT_Data_11Byte@input_ref 0035                       ?_CONVERT_Data_5Byte 007C  
                     __end_of_UART2_Write 0B25                          __size_ofi1_crc16 00B1  
                              _CRC16_INIT 1009                      ??_CONVERT_Data_5Byte 0028  
                        __size_of___aldiv 0099       UART2_Write_Text_Phan_Tu_Thu_13@text 0072  
                                crc16@crc 00B0                            i1_reflect_byte 0C58  
                __end_of_CRC16_POLYNOMIAL 100D                  __end_of_CRC32_POLYNOMIAL 1009  
                       ?_UART2_Write_Text 0071                                  __ptext10 0B14  
                                __ptext11 0E59                                  __ptext20 0BCB  
                                __ptext12 0CA5                                  __ptext21 0B5D  
                                __ptext13 05FF                                  __ptext22 0B1A  
                                __ptext23 0DDF                                  __ptext15 0ED3  
                                __ptext24 0D65                                  __ptext16 0B33  
                                __ptext25 0C58                                  __ptext17 0B0E  
                                __ptext26 06B0                                  __ptext18 0C29  
                                __ptext19 0BFA                   __end_of_UART_Data_Ready 0B14  
                      ??_UART2_Write_Text 0073                          i1_CONVERT_Data_1 0ED3  
                       ??_UART2_Read_Text 00A2                             __size_of_main 0072  
                       i1CONVERT_Data_1@i 003B                                _RC1STAbits 019D  
                              _RC2STAbits 0495                  CONVERT_Data_1@output_ref 00B4  
                                int$flags 007E                                  main@data 00CE  
                         ??_UART_TX_Empty 00A0                                  main@temp 00CD  
                             _UART2_Write 0B1A                    __end_ofi1_reflect_byte 0CA5  
               __size_of_UART2_Data_Ready 0006               __end_of_CONVERT_Data_11Byte 0DDF  
                                intlevel1 0000                i1CONVERT_Data_1@output_ref 007C  
                       __CFG_CLKOUTEN$OFF 0000                          ??_CONVERT_Data_1 00B5  
 __end_of_UART2_Write_Text_Phan_Tu_Thu_13 0BFA  __size_of_UART2_Write_Text_Phan_Tu_Thu_13 002F  
       ??_UART2_Write_Text_Phan_Tu_Thu_13 0071          ?_UART2_Write_Text_Phan_Tu_Thu_13 0070  
         _UART2_Write_Text_Phan_Tu_Thu_13 0BCB                         ?_config_interrupt 0070  
                      ??_config_interrupt 00A0                                _UART2_Init 054D  
                              _UART2_Read 0B48                             __pstringtext1 014D  
                           __pstringtext2 1005                             __pstringtext3 1009  
                           __pstringtext4 100B                             __pstringtext5 100D  
                           __pstringtext6 1000                             __pstringtext7 0000  
                         ?i1_reflect_byte 0070              CONVERT_Data_5Byte@output_ref 007C  
  __end_of_UART2_Write_Text_Phan_Tu_Thu_7 0C29   __size_of_UART2_Write_Text_Phan_Tu_Thu_7 002F  
          _UART2_Write_Text_Phan_Tu_Thu_7 0BFA    __end_of_UART2_Write_Text_Phan_Tu_Thu_8 0C58  
 __size_of_UART2_Write_Text_Phan_Tu_Thu_8 002F            _UART2_Write_Text_Phan_Tu_Thu_8 0C29  
            UART_Write_Text_Length@length 00A1                              ___aldiv@sign 00AA  
                  i1reflect_byte@byte_ref 0070                                _UART_Write 0B25  
                              _TX1STAbits 019E                          ?_UART_Data_Ready 0070  
                              _TX2STAbits 0496               UART_Write_Text_Length@count 00A5  
                     i1reflect_byte@index 0071  
